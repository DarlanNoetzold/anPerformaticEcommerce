2023-11-17 18:57:05,974 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 24792 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 18:57:05,979 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 18:57:06,050 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 18:57:06,050 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 18:57:07,333 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 18:57:07,335 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 18:57:07,543 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 200 ms. Found 22 JPA repository interfaces.
2023-11-17 18:57:07,559 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 18:57:07,560 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 18:57:07,578 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,578 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,583 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,583 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-17 18:57:08,383 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 18:57:08,403 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 18:57:08,403 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2352 ms
2023-11-17 18:57:08,886 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 18:57:08,886 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 18:57:08,886 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 18:57:08,893 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 18:57:09,059 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e18bc5f
2023-11-17 18:57:09,060 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 18:57:09,074 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 18:57:09,107 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-17 18:57:09,167 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 18:57:09,168 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 18:57:09,253 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 18:57:09,331 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 18:57:09,335 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 18:57:09,621 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 18:57:10,872 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 18:57:10,884 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 18:57:10,889 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 18:57:10,890 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 18:57:10,890 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 18:57:10,891 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 18:57:10,891 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 18:57:10,892 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 18:57:10,892 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 18:57:10,893 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 18:57:10,893 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 18:57:10,894 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 18:57:10,894 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 18:57:10,895 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 18:57:10,895 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 18:57:10,895 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 18:57:10,896 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 18:57:10,896 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 18:57:10,897 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 18:57:10,897 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 18:57:10,898 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 18:57:10,899 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 18:57:10,899 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 18:57:10,900 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 18:57:10,900 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 18:57:10,901 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 18:57:10,901 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 18:57:10,905 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 18:57:10,907 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 18:57:10,909 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 18:57:10,912 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 18:57:10,914 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 18:57:10,916 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 18:57:10,918 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 18:57:10,919 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 18:57:10,920 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 18:57:10,922 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 18:57:10,923 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 18:57:10,926 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 18:57:10,928 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 18:57:10,929 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 18:57:10,931 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 18:57:10,933 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 18:57:10,934 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 18:57:10,937 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 18:57:10,939 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 18:57:10,941 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 18:57:10,944 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 18:57:10,946 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 18:57:10,948 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 18:57:10,950 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 18:57:10,952 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 18:57:10,953 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 18:57:10,958 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 18:57:10,962 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 18:57:10,968 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 18:57:10,975 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 18:57:10,978 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 18:57:10,982 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 18:57:10,988 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 18:57:10,993 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 18:57:10,997 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 18:57:11,001 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 18:57:11,004 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 18:57:11,007 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 18:57:11,011 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 18:57:11,014 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 18:57:11,019 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 18:57:11,021 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 18:57:11,023 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 18:57:11,025 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 18:57:11,028 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 18:57:11,032 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 18:57:11,036 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 18:57:11,039 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 18:57:11,043 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 18:57:11,047 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 18:57:11,051 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 18:57:11,053 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 18:57:11,057 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 18:57:11,065 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 18:57:11,067 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 18:57:11,069 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 18:57:11,070 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 18:57:11,071 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 18:57:11,072 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 18:57:11,073 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 18:57:11,074 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 18:57:11,075 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 18:57:11,076 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 18:57:11,077 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 18:57:11,078 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 18:57:11,079 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 18:57:11,079 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 18:57:11,081 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 18:57:11,081 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 18:57:11,083 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 18:57:11,084 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 18:57:11,085 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 18:57:11,086 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 18:57:11,087 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 18:57:11,089 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 18:57:11,091 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 18:57:11,093 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 18:57:11,093 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 18:57:11,098 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 18:57:11,218 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 18:57:11,455 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 18:57:12,587 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 18:57:12,645 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#24c97c25:0/SimpleConnection@7df07409 [delegate=amqp://guest@127.0.0.1:5672/, localPort=56484]
2023-11-17 18:57:12,984 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 18:57:13,710 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 18:57:13,769 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f2eecad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45646ff6, org.springframework.security.web.context.SecurityContextHolderFilter@6ed915c6, org.springframework.security.web.header.HeaderWriterFilter@4355adb9, org.springframework.security.web.authentication.logout.LogoutFilter@16fafc61, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3e8a0154, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ea19ec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@82efa6f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54dd7303, org.springframework.security.web.session.SessionManagementFilter@79add693, org.springframework.security.web.access.ExceptionTranslationFilter@247fcd4f, org.springframework.security.web.access.intercept.AuthorizationFilter@6595e2bc]
2023-11-17 18:57:14,247 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 18:57:14,353 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 18:57:14,363 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 18:57:14,374 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 18:57:14,451 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 18:57:14,499 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 18:57:14,506 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 18:57:14,508 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 18:57:14,509 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 18:57:14,511 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 18:57:14,512 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 18:57:14,514 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 18:57:14,517 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 18:57:14,518 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-cWm99t636qamGk33OISECQ identity=5a018ab7] started
2023-11-17 18:57:14,518 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-Vvzzy4CRXmlAzH5EcjY6OQ identity=6e039559] started
2023-11-17 18:57:14,518 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-QrckwIacGkNArhgUsCKfUw identity=1dc292b5] started
2023-11-17 18:57:14,519 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-VKb6gDtf8U8XZtVHHiuhJQ identity=7e00f18d] started
2023-11-17 18:57:14,520 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-wwoGTlCZe-IYz6JebcOvlg identity=5c9edc4d] started
2023-11-17 18:57:14,520 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 18:57:14,520 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-qXmixaYE0_lkxHLUTSPelQ identity=1fc29e61] started
2023-11-17 18:57:14,522 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 18:57:14,522 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-eO0XA91W_kPPzPnUnnR65w identity=742f6a85] started
2023-11-17 18:57:14,524 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 18:57:14,524 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-IdvC9I7hzOh9XL_HINxQXg identity=2fd3345d] started
2023-11-17 18:57:14,525 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 18:57:14,526 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-Bpej-JhFV9BhVcJJKg9Gkg identity=35b6e158] started
2023-11-17 18:57:14,527 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 18:57:14,529 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-tdQFZ9Lr9-EzafZNw5nD3g identity=103cb480] started
2023-11-17 18:57:14,529 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 18:57:14,530 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 18:57:14,530 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-USWfMx-tmO3q8CSFyIsZKw identity=7cbc463a] started
2023-11-17 18:57:14,531 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 18:57:14,533 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-o1F0_aUM17swd6pw0SkkmA identity=7d113163] started
2023-11-17 18:57:14,534 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 18:57:14,535 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-eXW2j1bRWvs4MGtFZpIAZg identity=4c2183b4] started
2023-11-17 18:57:14,536 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-GR8fxld2-mFZXOzXIjFX_g identity=1b9f710c] started
2023-11-17 18:57:14,536 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 18:57:14,537 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-ZAFGdrlg8-frOjoRd-OqcQ identity=7cca3483] started
2023-11-17 18:57:14,539 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 18:57:14,540 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-TuOchozvYKTnYo4lIVol5w identity=3bb164f6] started
2023-11-17 18:57:14,540 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 18:57:14,541 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-1K8wiXAnIGm6aUiXlKAp2A identity=1ec74ae4] started
2023-11-17 18:57:14,543 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 18:57:14,543 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-LPAhqXdLltU0h1QiOjEgUQ identity=616370fe] started
2023-11-17 18:57:14,546 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-HoyMcHf_dqwAcVrp11LdXw identity=126ea251] started
2023-11-17 18:57:14,549 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-eyNbRlKdoj_bMevnM8BKBA identity=3e5c5ee8] started
2023-11-17 18:57:14,555 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.887 seconds (process running for 9.623)
2023-11-17 18:57:14,641 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 18:57:14,675 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 18:57:14,733 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 18:57:14,735 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 18:57:14,800 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 18:57:14,801 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 18:57:14,804 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 18:57:14,805 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:09:29,120 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 7084 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 19:09:29,121 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 19:09:29,173 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 19:09:29,173 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 19:09:30,294 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:09:30,295 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 19:09:30,478 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 177 ms. Found 22 JPA repository interfaces.
2023-11-17 19:09:30,490 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:09:30,490 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,509 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,509 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,510 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,510 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-17 19:09:31,368 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 19:09:31,386 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 19:09:31,386 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2212 ms
2023-11-17 19:09:31,858 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 19:09:31,858 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 19:09:31,858 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 19:09:31,865 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 19:09:32,041 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d4cd2c8
2023-11-17 19:09:32,042 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 19:09:32,055 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 19:09:32,089 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-17 19:09:32,139 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 19:09:32,139 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 19:09:32,217 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 19:09:32,264 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 19:09:32,267 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 19:09:32,549 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 19:09:33,805 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 19:09:33,815 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 19:09:33,817 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 19:09:33,818 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 19:09:33,819 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 19:09:33,819 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 19:09:33,820 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 19:09:33,820 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 19:09:33,821 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 19:09:33,821 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 19:09:33,823 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 19:09:33,823 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 19:09:33,824 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 19:09:33,824 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 19:09:33,825 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 19:09:33,825 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 19:09:33,826 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 19:09:33,826 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 19:09:33,827 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 19:09:33,828 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 19:09:33,828 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 19:09:33,829 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 19:09:33,830 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 19:09:33,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 19:09:33,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 19:09:33,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 19:09:33,832 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 19:09:33,836 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 19:09:33,837 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 19:09:33,839 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 19:09:33,841 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 19:09:33,844 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 19:09:33,845 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 19:09:33,846 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 19:09:33,848 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 19:09:33,849 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 19:09:33,850 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 19:09:33,851 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 19:09:33,852 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 19:09:33,853 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 19:09:33,854 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 19:09:33,855 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 19:09:33,857 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 19:09:33,859 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 19:09:33,861 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 19:09:33,863 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 19:09:33,865 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 19:09:33,866 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 19:09:33,868 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 19:09:33,870 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 19:09:33,871 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 19:09:33,874 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 19:09:33,875 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 19:09:33,880 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 19:09:33,882 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 19:09:33,887 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 19:09:33,893 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 19:09:33,898 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 19:09:33,904 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 19:09:33,909 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 19:09:33,914 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 19:09:33,917 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 19:09:33,922 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 19:09:33,926 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 19:09:33,928 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 19:09:33,932 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 19:09:33,934 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 19:09:33,938 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 19:09:33,941 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 19:09:33,945 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 19:09:33,948 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 19:09:33,950 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 19:09:33,953 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 19:09:33,957 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 19:09:33,961 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 19:09:33,966 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 19:09:33,971 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 19:09:33,975 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 19:09:33,979 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 19:09:33,989 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 19:09:33,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 19:09:33,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 19:09:34,000 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 19:09:34,001 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 19:09:34,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 19:09:34,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 19:09:34,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 19:09:34,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 19:09:34,006 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 19:09:34,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 19:09:34,008 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 19:09:34,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 19:09:34,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 19:09:34,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 19:09:34,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 19:09:34,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 19:09:34,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 19:09:34,014 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 19:09:34,014 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 19:09:34,015 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 19:09:34,016 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 19:09:34,018 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 19:09:34,019 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 19:09:34,021 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 19:09:34,023 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 19:09:34,028 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 19:09:34,145 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 19:09:34,369 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 19:09:35,405 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 19:09:35,443 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#2019d6bd:0/SimpleConnection@33489eb3 [delegate=amqp://guest@127.0.0.1:5672/, localPort=57250]
2023-11-17 19:09:35,736 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 19:09:36,422 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 19:09:36,471 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6595e2bc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@698f04f5, org.springframework.security.web.context.SecurityContextHolderFilter@79add693, org.springframework.security.web.header.HeaderWriterFilter@1c0d2c5f, org.springframework.security.web.authentication.logout.LogoutFilter@4d14f786, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3144a99a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b92f56f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79574fc0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78862ad9, org.springframework.security.web.session.SessionManagementFilter@4ea1d22, org.springframework.security.web.access.ExceptionTranslationFilter@7a823a6d, org.springframework.security.web.access.intercept.AuthorizationFilter@3a36c407]
2023-11-17 19:09:36,836 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 19:09:36,916 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 19:09:36,923 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 19:09:36,928 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 19:09:36,985 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 19:09:37,030 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 19:09:37,036 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 19:09:37,039 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 19:09:37,041 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 19:09:37,043 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 19:09:37,045 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-pidMPM6hcQW162ngDEAUrA identity=3682c2d6] started
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-YU2aIOl8tilCc36SG8yGqg identity=68465ace] started
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-ErB7XS2bGdGHjH9ht2vVEQ identity=63a3d388] started
2023-11-17 19:09:37,049 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-D9lnovMSOKViEpmFcTbd8w identity=14a2877f] started
2023-11-17 19:09:37,050 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 19:09:37,051 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-3PvThgRZkrCjO2VB8XqhOw identity=7924cfbd] started
2023-11-17 19:09:37,052 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 19:09:37,053 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-oPJExLNFbBKEDb7-d83I8Q identity=7c1ae520] started
2023-11-17 19:09:37,054 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 19:09:37,054 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-44x055FT8P2qbHfKbVZIig identity=7edb0a8b] started
2023-11-17 19:09:37,056 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 19:09:37,057 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-NoG-daWSEk5aOvEYU3XgLA identity=daeeb7f] started
2023-11-17 19:09:37,059 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 19:09:37,059 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-JzhgLACZ_krzbXp9Xs2r8w identity=2eca2100] started
2023-11-17 19:09:37,061 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-X-AUW9bYxwtjbz8n7E497Q identity=61a883dd] started
2023-11-17 19:09:37,062 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 19:09:37,063 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-hAqX84sjCuAisM6ZUvHpug identity=20d9490e] started
2023-11-17 19:09:37,063 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 19:09:37,066 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 19:09:37,066 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-se305RZ8WVliJi9h6l5wZA identity=361d0646] started
2023-11-17 19:09:37,068 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-nY6nksqM_XiMBswC8UAf9w identity=1dc292b5] started
2023-11-17 19:09:37,069 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 19:09:37,073 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 19:09:37,073 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-wWheu-hABs1qFtPdquCTIA identity=6483b22c] started
2023-11-17 19:09:37,076 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 19:09:37,076 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-8UxUIZrFjuXUpa02HPAdMA identity=5a018ab7] started
2023-11-17 19:09:37,078 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 19:09:37,079 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-y9xpJcs9bgrvhQFHVANG2w identity=64d882b7] started
2023-11-17 19:09:37,081 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 19:09:37,082 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-wQyHfGGAnhv4u918zgrmmA identity=5c9edc4d] started
2023-11-17 19:09:37,083 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-pISQT_O3SFAg7lywMmxT6Q identity=55945293] started
2023-11-17 19:09:37,083 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 19:09:37,085 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-YpI55AI-BKgGW9GhAyr4Hg identity=1d0237d1] started
2023-11-17 19:09:37,087 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-4ErWfF22aOQWWDdQ0YwlVA identity=692bbc0b] started
2023-11-17 19:09:37,096 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.308 seconds (process running for 8.986)
2023-11-17 19:09:37,181 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:09:37,212 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:09:37,262 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:09:37,264 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:09:37,328 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:09:37,329 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:09:37,332 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:09:37,332 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:17:31,125 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 19:17:31,125 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 19:17:31,127 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-17 19:17:31,347 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:31,423 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:31,436 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:17:31,444 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:17:31,447 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:17:31,542 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:31,544 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:17:31,628 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 19:17:31,637 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-11] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 19:17:35,527 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:35,589 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:35,591 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:17:35,594 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:17:35,595 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:17:35,621 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:35,623 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:17:35,638 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/catalog/attribute/id
jakarta.servlet.ServletException: Request processing failed: java.lang.IllegalArgumentException: Invalid UUID string: id
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:550)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid UUID string: id
	at java.base/java.util.UUID.fromString1(UUID.java:280)
	at java.base/java.util.UUID.fromString(UUID.java:258)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController.update(AttributeModelController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController$$SpringCGLIB$$0.update(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
2023-11-17 19:17:35,643 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: java.lang.IllegalArgumentException: Invalid UUID string: id. Generating error page resulted in a 403.
2023-11-17 19:18:55,785 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,785 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,785 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,787 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,788 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,790 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,791 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,793 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,794 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,796 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,797 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,799 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,800 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,801 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,802 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,804 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,805 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,806 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,807 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,809 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,810 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-17 19:18:55,812 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-17 19:18:55,824 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 19:18:55,827 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-17 19:18:55,828 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-17 19:18:58,243 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 10796 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 19:18:58,245 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 19:18:58,313 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 19:18:58,313 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 19:18:59,538 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:18:59,539 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 19:18:59,752 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 205 ms. Found 22 JPA repository interfaces.
2023-11-17 19:18:59,770 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:18:59,771 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 19:18:59,793 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,798 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-11-17 19:19:00,711 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 19:19:00,742 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 19:19:00,743 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2429 ms
2023-11-17 19:19:01,284 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 19:19:01,284 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 19:19:01,284 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 19:19:01,293 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 19:19:01,504 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6273954e
2023-11-17 19:19:01,510 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 19:19:01,530 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 19:19:01,573 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.023s)
2023-11-17 19:19:01,635 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 19:19:01,636 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 19:19:01,735 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 19:19:01,789 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 19:19:01,791 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 19:19:02,078 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 19:19:03,487 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 19:19:03,504 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 19:19:03,507 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 19:19:03,507 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 19:19:03,508 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 19:19:03,509 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 19:19:03,509 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 19:19:03,510 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 19:19:03,511 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 19:19:03,511 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 19:19:03,512 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 19:19:03,513 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 19:19:03,513 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 19:19:03,514 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 19:19:03,515 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 19:19:03,515 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 19:19:03,516 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 19:19:03,517 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 19:19:03,517 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 19:19:03,518 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 19:19:03,519 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 19:19:03,519 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 19:19:03,520 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 19:19:03,520 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 19:19:03,521 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 19:19:03,521 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 19:19:03,522 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 19:19:03,525 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 19:19:03,528 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 19:19:03,530 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 19:19:03,534 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 19:19:03,536 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 19:19:03,538 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 19:19:03,539 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 19:19:03,541 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 19:19:03,542 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 19:19:03,544 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 19:19:03,546 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 19:19:03,548 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 19:19:03,550 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 19:19:03,552 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 19:19:03,554 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 19:19:03,555 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 19:19:03,557 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 19:19:03,559 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 19:19:03,561 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 19:19:03,562 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 19:19:03,565 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 19:19:03,568 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 19:19:03,570 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 19:19:03,573 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 19:19:03,576 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 19:19:03,578 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 19:19:03,586 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 19:19:03,589 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 19:19:03,593 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 19:19:03,601 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 19:19:03,607 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 19:19:03,613 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 19:19:03,620 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 19:19:03,625 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 19:19:03,629 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 19:19:03,635 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 19:19:03,639 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 19:19:03,643 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 19:19:03,648 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 19:19:03,652 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 19:19:03,659 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 19:19:03,664 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 19:19:03,669 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 19:19:03,672 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 19:19:03,676 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 19:19:03,680 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 19:19:03,687 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 19:19:03,693 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 19:19:03,698 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 19:19:03,704 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 19:19:03,710 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 19:19:03,716 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 19:19:03,723 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 19:19:03,731 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 19:19:03,736 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 19:19:03,739 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 19:19:03,741 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 19:19:03,745 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 19:19:03,747 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 19:19:03,749 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 19:19:03,752 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 19:19:03,754 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 19:19:03,755 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 19:19:03,757 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 19:19:03,758 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 19:19:03,760 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 19:19:03,761 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 19:19:03,763 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 19:19:03,765 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 19:19:03,767 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 19:19:03,768 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 19:19:03,769 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 19:19:03,770 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 19:19:03,772 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 19:19:03,773 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 19:19:03,775 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 19:19:03,777 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 19:19:03,778 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 19:19:03,784 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 19:19:03,891 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 19:19:04,212 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 19:19:05,408 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 19:19:05,467 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#5a455d88:0/SimpleConnection@ed3f222 [delegate=amqp://guest@127.0.0.1:5672/, localPort=57772]
2023-11-17 19:19:05,920 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 19:19:06,635 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 19:19:06,698 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48697fcc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1673e6ca, org.springframework.security.web.context.SecurityContextHolderFilter@5b9efb61, org.springframework.security.web.header.HeaderWriterFilter@2ca76ad5, org.springframework.security.web.authentication.logout.LogoutFilter@1fb499c0, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@12951b4d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cc0b570, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24d6db5a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7bed8d1e, org.springframework.security.web.session.SessionManagementFilter@50e20a35, org.springframework.security.web.access.ExceptionTranslationFilter@7409c5ab, org.springframework.security.web.access.intercept.AuthorizationFilter@4ba2bccf]
2023-11-17 19:19:07,115 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 19:19:07,205 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 19:19:07,215 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 19:19:07,227 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 19:19:07,312 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 19:19:07,362 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 19:19:07,371 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 19:19:07,374 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 19:19:07,376 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 19:19:07,377 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 19:19:07,379 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 19:19:07,381 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 19:19:07,383 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 19:19:07,385 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 19:19:07,386 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-DxBeWDsDPsTU1h8lh3dR7Q identity=b00889b] started
2023-11-17 19:19:07,386 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-HPuDwrZja2MNUHnnxKHXtg identity=7c4c71cd] started
2023-11-17 19:19:07,386 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-jzD4f5x_lEjmWR7DcZWLXg identity=2edea723] started
2023-11-17 19:19:07,387 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 19:19:07,389 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag--BCXzFJnoSciClYexOg2YA identity=5e467a82] started
2023-11-17 19:19:07,389 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 19:19:07,390 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-jEyJYygXRqp8uWK5vIappw identity=5db59482] started
2023-11-17 19:19:07,392 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 19:19:07,393 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-eel3vNcMi_qx7IJe6fAQ5A identity=7f93248] started
2023-11-17 19:19:07,393 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-RC_P6tAnrz_OaNAqq_JGIA identity=30e82113] started
2023-11-17 19:19:07,394 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-817CzFt8V4H2DsZZehZrcQ identity=dc00038] started
2023-11-17 19:19:07,394 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-LExKNwH2T-AX46v8JjP-bQ identity=54b3bab6] started
2023-11-17 19:19:07,395 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 19:19:07,396 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-QnZxfi-LjCaupy6CdU6rgg identity=586d6412] started
2023-11-17 19:19:07,397 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 19:19:07,399 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-2cP3kCyZLeTczdW_zpYuqg identity=15108fe1] started
2023-11-17 19:19:07,401 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 19:19:07,403 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-acrHaz7WlEDfIL1z7pYm5A identity=6bfadaf1] started
2023-11-17 19:19:07,403 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 19:19:07,404 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-v0huoGQ_Q16d1KH8jDaZWw identity=70aa338] started
2023-11-17 19:19:07,405 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 19:19:07,407 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 19:19:07,407 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-A38i9lB1vzfmI0gGxQRplw identity=8459041] started
2023-11-17 19:19:07,409 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 19:19:07,409 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-oAQsHDdfIEm6KzmRiGzrmA identity=4191dbd7] started
2023-11-17 19:19:07,412 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-cMIL-Ahn-s9lnJzK7fVatQ identity=7c012bd2] started
2023-11-17 19:19:07,412 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-g3GvjJIz0DFhzWBRZ3dstA identity=1fc934e9] started
2023-11-17 19:19:07,412 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 19:19:07,414 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 19:19:07,416 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-HX-ouzNvVJR9YOnrVirnPg identity=1643e8a1] started
2023-11-17 19:19:07,419 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-Z6tqal8qN0UNFjakE5hADQ identity=3f6844d3] started
2023-11-17 19:19:07,421 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-P7wfwsbejbTG-yOZduXCig identity=7a697390] started
2023-11-17 19:19:07,430 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 9.485 seconds (process running for 10.469)
2023-11-17 19:19:07,535 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:19:07,566 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:19:07,622 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:19:07,623 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:19:07,705 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:19:07,706 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:19:07,709 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:19:07,710 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:20:08,672 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 19:20:08,672 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 19:20:08,675 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-17 19:20:08,909 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:08,990 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:09,005 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:20:09,015 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:20:09,019 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:20:09,115 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:09,120 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:20:09,191 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/catalog/attribute/id
jakarta.servlet.ServletException: Request processing failed: java.lang.IllegalArgumentException: Invalid UUID string: id
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:550)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid UUID string: id
	at java.base/java.util.UUID.fromString1(UUID.java:280)
	at java.base/java.util.UUID.fromString(UUID.java:258)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController.update(AttributeModelController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController$$SpringCGLIB$$0.update(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
2023-11-17 19:20:09,202 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: java.lang.IllegalArgumentException: Invalid UUID string: id. Generating error page resulted in a 403.
2023-11-17 19:20:36,930 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:36,993 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:36,997 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:20:36,998 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:20:37,000 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:20:37,030 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:37,033 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:20:37,055 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 19:22:05,506 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m33s859ms869µs900ns).
2023-11-17 19:22:05,509 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-11] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 20:08:19,067 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:08:19,137 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:08:19,141 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:08:19,145 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:08:19,149 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:08:19,167 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:08:19,170 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:09:14,667 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:09:14,731 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:09:14,733 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:09:14,735 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:09:14,738 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:09:14,784 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:09:14,785 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:09:14,798 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/catalog/media/id
jakarta.servlet.ServletException: Request processing failed: java.lang.IllegalArgumentException: Invalid UUID string: id
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid UUID string: id
	at java.base/java.util.UUID.fromString1(UUID.java:280)
	at java.base/java.util.UUID.fromString(UUID.java:258)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.MediaModelController.getMediaModelById(MediaModelController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.MediaModelController$$SpringCGLIB$$0.getMediaModelById(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
2023-11-17 20:09:14,801 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: java.lang.IllegalArgumentException: Invalid UUID string: id. Generating error page resulted in a 403.
2023-11-17 20:10:03,880 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:10:03,940 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:10:03,944 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:10:03,945 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:10:03,947 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:10:03,991 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:10:03,993 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:14:31,070 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:14:31,136 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:14:31,140 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:14:31,143 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:14:31,145 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:14:31,186 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:14:31,188 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:16:26,540 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:16:26,604 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:16:26,607 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:16:26,609 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:16:26,611 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:16:26,657 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:16:26,659 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:16:26,676 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.MediaModelController [XNIO-1 task-2] Send message mediaModel: MediaModel(mediaId=null, thumbnailImageURL=https://example.com/thumbnail.jpg, smallImageUrl=https://example.com/small.jpg, mediumImageUrl=https://example.com/medium.jpg, largeImageUrl=https://example.com/large.jpg, zoomImageUrl=https://example.com/zoom.jpg, integrated=null, integratedDate=null, sku=null)
2023-11-17 20:16:26,676 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.MediaModelConsumer [pool-3-thread-12] Error to consume cerate message for mediaModel - MediaModel(mediaId=null, thumbnailImageURL=https://example.com/thumbnail.jpg, smallImageUrl=https://example.com/small.jpg, mediumImageUrl=https://example.com/medium.jpg, largeImageUrl=https://example.com/large.jpg, zoomImageUrl=https://example.com/zoom.jpg, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.MediaModelService.saveMediaModel(tech.noetzold.anPerformaticEcommerce.model.catalog.MediaModel)" because "this.mediaModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.MediaModelConsumer.consumerMediaModel(MediaModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 20:38:43,921 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,921 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,921 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,922 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,922 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,923 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,924 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,925 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,926 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,928 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,928 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,929 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,930 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,931 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,932 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,933 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,934 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,935 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,936 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,937 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-17 20:38:43,938 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-17 20:38:43,940 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-17 20:38:43,954 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 20:38:43,958 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-17 20:38:43,959 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-17 20:38:51,018 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 17808 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 20:38:51,020 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 20:38:51,071 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 20:38:51,072 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 20:38:52,270 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 20:38:52,271 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 20:38:52,457 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 178 ms. Found 22 JPA repository interfaces.
2023-11-17 20:38:52,469 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 20:38:52,470 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 20:38:52,486 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,486 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,486 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,487 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,487 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,487 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,487 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,487 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,487 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,487 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,488 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,489 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,489 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,489 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,489 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,490 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:38:52,490 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-17 20:38:53,263 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 20:38:53,290 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 20:38:53,290 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2218 ms
2023-11-17 20:38:53,753 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 20:38:53,753 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 20:38:53,753 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 20:38:53,762 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 20:38:53,943 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@39c4c7f5
2023-11-17 20:38:53,945 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 20:38:53,958 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 20:38:53,992 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.016s)
2023-11-17 20:38:54,038 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 20:38:54,038 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 20:38:54,121 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 20:38:54,171 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 20:38:54,173 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 20:38:54,437 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 20:38:55,757 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 20:38:55,774 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 20:38:55,779 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 20:38:55,780 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 20:38:55,780 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 20:38:55,780 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 20:38:55,782 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 20:38:55,783 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 20:38:55,783 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 20:38:55,784 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 20:38:55,784 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 20:38:55,785 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 20:38:55,786 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 20:38:55,786 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 20:38:55,787 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 20:38:55,787 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 20:38:55,788 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 20:38:55,789 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 20:38:55,790 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 20:38:55,790 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 20:38:55,791 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 20:38:55,791 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 20:38:55,792 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 20:38:55,792 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 20:38:55,793 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 20:38:55,793 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 20:38:55,794 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 20:38:55,799 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 20:38:55,800 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 20:38:55,803 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 20:38:55,805 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 20:38:55,807 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 20:38:55,809 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 20:38:55,810 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 20:38:55,812 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 20:38:55,814 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 20:38:55,816 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 20:38:55,817 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 20:38:55,819 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 20:38:55,820 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 20:38:55,822 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 20:38:55,823 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 20:38:55,824 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 20:38:55,825 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 20:38:55,827 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 20:38:55,829 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 20:38:55,831 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 20:38:55,833 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 20:38:55,835 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 20:38:55,837 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 20:38:55,840 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 20:38:55,844 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 20:38:55,846 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 20:38:55,852 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 20:38:55,855 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 20:38:55,860 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 20:38:55,870 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 20:38:55,878 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 20:38:55,885 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 20:38:55,891 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 20:38:55,896 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 20:38:55,899 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 20:38:55,903 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 20:38:55,907 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 20:38:55,912 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 20:38:55,916 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 20:38:55,920 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 20:38:55,925 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 20:38:55,927 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 20:38:55,930 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 20:38:55,932 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 20:38:55,935 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 20:38:55,937 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 20:38:55,940 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 20:38:55,946 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 20:38:55,951 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 20:38:55,957 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 20:38:55,963 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 20:38:55,968 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 20:38:55,974 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 20:38:55,982 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 20:38:55,985 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 20:38:55,987 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 20:38:55,990 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 20:38:55,991 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 20:38:55,993 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 20:38:55,995 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 20:38:55,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 20:38:56,000 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 20:38:56,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 20:38:56,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 20:38:56,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 20:38:56,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 20:38:56,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 20:38:56,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 20:38:56,012 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 20:38:56,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 20:38:56,015 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 20:38:56,016 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 20:38:56,017 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 20:38:56,018 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 20:38:56,021 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 20:38:56,022 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 20:38:56,024 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 20:38:56,025 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 20:38:56,030 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 20:38:56,163 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 20:38:56,417 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 20:38:57,533 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 20:38:57,576 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#b084bf3:0/SimpleConnection@1c50aa15 [delegate=amqp://guest@127.0.0.1:5672/, localPort=62316]
2023-11-17 20:38:57,918 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 20:38:58,724 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 20:38:58,779 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5d95c341, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41f9424b, org.springframework.security.web.context.SecurityContextHolderFilter@6bf5033a, org.springframework.security.web.header.HeaderWriterFilter@380701cd, org.springframework.security.web.authentication.logout.LogoutFilter@497d2f14, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@1878027a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@472ee2ec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66833db, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f012eb0, org.springframework.security.web.session.SessionManagementFilter@527b4f80, org.springframework.security.web.access.ExceptionTranslationFilter@bf306e, org.springframework.security.web.access.intercept.AuthorizationFilter@2fa66ac2]
2023-11-17 20:38:59,191 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 20:38:59,290 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 20:38:59,302 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 20:38:59,314 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 20:38:59,390 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 20:38:59,442 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 20:38:59,450 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 20:38:59,453 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 20:38:59,454 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 20:38:59,456 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 20:38:59,458 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 20:38:59,461 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 20:38:59,462 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-WInlRL3xYqIakRB0snbr5Q identity=62006270] started
2023-11-17 20:38:59,462 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-bM5PnJFbb1_H8HIMMvzqAg identity=6b8164be] started
2023-11-17 20:38:59,462 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-t_qDZRJ6Nk-jbFYB0rhMkg identity=43d337d2] started
2023-11-17 20:38:59,463 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 20:38:59,465 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-hOpzqcaalighMsgXZ1JAMQ identity=4cdbe532] started
2023-11-17 20:38:59,466 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 20:38:59,466 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-R5pxOHEi2oKzriA76Lvt1A identity=2bc64e1e] started
2023-11-17 20:38:59,467 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 20:38:59,468 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-ujteXIT0qS8du-MrLhNmtQ identity=99b6677] started
2023-11-17 20:38:59,469 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-jM_PkBuetIrNUmcsu22B7A identity=58047b6c] started
2023-11-17 20:38:59,469 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 20:38:59,470 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 20:38:59,471 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-IEMuGNa-WUeA1ESnTlVYCA identity=2dc8929c] started
2023-11-17 20:38:59,472 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 20:38:59,472 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag--ut0MKux1ZwnZ-krMWwqmg identity=2c7175c9] started
2023-11-17 20:38:59,473 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-av4zBpKyx-Q9vvQ1EHBZCQ identity=7bb88bb7] started
2023-11-17 20:38:59,474 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 20:38:59,475 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 20:38:59,475 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-XqjH1-ZOPBg044Wxk9cGfA identity=129523be] started
2023-11-17 20:38:59,476 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 20:38:59,477 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-mXMxAs8zz_bqZl_Xc7bKGw identity=735e1c25] started
2023-11-17 20:38:59,479 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 20:38:59,480 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-czeUa4DGLE__cfdbxZaKyA identity=b96caf5] started
2023-11-17 20:38:59,481 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-d1Xtb6p62wSIJuitpZZeyQ identity=4cec845c] started
2023-11-17 20:38:59,481 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 20:38:59,482 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-EG6FBHYvRyKqXNwmU24bbg identity=10560397] started
2023-11-17 20:38:59,483 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 20:38:59,484 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-UhnbWA1dzSj5TvSCZcyYTA identity=60526c42] started
2023-11-17 20:38:59,484 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 20:38:59,485 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-nYDmstipdmza5M5XiBWmng identity=16eac5ed] started
2023-11-17 20:38:59,486 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 20:38:59,487 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-ytPdzGVUvX3pRydSOZii4A identity=25d95435] started
2023-11-17 20:38:59,489 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-KPWYmawqiRvWbrvprhpNmA identity=10a6805d] started
2023-11-17 20:38:59,490 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-son-_HalUXOeoHFpV-UFlA identity=1b5f797] started
2023-11-17 20:38:59,499 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.777 seconds (process running for 9.442)
2023-11-17 20:38:59,593 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 20:38:59,630 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 20:38:59,688 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 20:38:59,690 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:38:59,756 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 20:38:59,757 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 20:38:59,760 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 20:38:59,761 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:39:40,249 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 20:39:40,249 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 20:39:40,250 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 1 ms
2023-11-17 20:39:40,481 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:39:40,557 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:39:40,570 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:39:40,579 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:39:40,582 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:39:40,700 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:39:40,704 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:39:40,768 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 20:39:40,777 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-11] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 20:41:31,293 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:41:31,358 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:41:31,363 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:41:31,365 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:41:31,367 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:41:31,405 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:41:31,407 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:41:31,415 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 20:41:52,552 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-12] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 20:41:52,579 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,579 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,579 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,579 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,579 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,580 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,581 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,582 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,582 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,583 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,584 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,585 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,585 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,589 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,590 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,593 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,594 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,594 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,596 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,597 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-17 20:41:52,598 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-17 20:41:52,600 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-17 20:41:52,613 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 20:41:52,615 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-17 20:41:52,617 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-17 20:47:16,180 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 4012 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 20:47:16,182 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 20:47:16,239 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 20:47:16,239 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 20:47:17,466 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 20:47:17,467 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 20:47:17,660 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 184 ms. Found 22 JPA repository interfaces.
2023-11-17 20:47:17,674 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 20:47:17,675 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 20:47:17,693 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,695 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,695 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,695 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,695 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,695 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,695 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,696 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,696 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,696 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,696 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,697 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,697 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,697 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,698 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:47:17,698 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2023-11-17 20:47:18,475 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 20:47:18,495 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 20:47:18,496 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2257 ms
2023-11-17 20:47:18,964 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 20:47:18,964 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 20:47:18,964 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 20:47:18,972 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 20:47:19,159 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4c2b169b
2023-11-17 20:47:19,160 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 20:47:19,174 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 20:47:19,208 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.016s)
2023-11-17 20:47:19,259 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 20:47:19,259 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 20:47:19,344 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 20:47:19,394 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 20:47:19,396 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 20:47:19,653 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 20:47:20,999 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 20:47:21,015 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 20:47:21,018 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 20:47:21,019 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 20:47:21,020 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 20:47:21,020 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 20:47:21,022 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 20:47:21,023 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 20:47:21,023 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 20:47:21,024 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 20:47:21,025 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 20:47:21,026 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 20:47:21,026 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 20:47:21,027 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 20:47:21,028 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 20:47:21,029 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 20:47:21,030 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 20:47:21,030 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 20:47:21,031 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 20:47:21,032 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 20:47:21,033 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 20:47:21,033 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 20:47:21,034 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 20:47:21,035 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 20:47:21,035 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 20:47:21,036 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 20:47:21,037 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 20:47:21,041 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 20:47:21,045 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 20:47:21,047 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 20:47:21,049 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 20:47:21,051 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 20:47:21,053 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 20:47:21,055 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 20:47:21,056 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 20:47:21,057 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 20:47:21,059 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 20:47:21,060 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 20:47:21,062 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 20:47:21,063 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 20:47:21,065 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 20:47:21,066 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 20:47:21,067 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 20:47:21,069 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 20:47:21,071 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 20:47:21,074 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 20:47:21,076 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 20:47:21,078 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 20:47:21,080 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 20:47:21,082 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 20:47:21,084 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 20:47:21,086 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 20:47:21,087 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 20:47:21,094 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 20:47:21,096 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 20:47:21,101 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 20:47:21,106 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 20:47:21,113 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 20:47:21,117 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 20:47:21,120 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 20:47:21,126 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 20:47:21,129 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 20:47:21,133 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 20:47:21,135 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 20:47:21,138 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 20:47:21,143 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 20:47:21,146 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 20:47:21,150 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 20:47:21,153 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 20:47:21,159 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 20:47:21,161 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 20:47:21,163 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 20:47:21,169 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 20:47:21,175 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 20:47:21,180 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 20:47:21,185 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 20:47:21,191 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 20:47:21,196 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 20:47:21,199 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 20:47:21,204 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 20:47:21,210 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 20:47:21,213 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 20:47:21,214 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 20:47:21,215 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 20:47:21,216 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 20:47:21,217 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 20:47:21,218 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 20:47:21,219 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 20:47:21,220 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 20:47:21,222 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 20:47:21,223 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 20:47:21,224 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 20:47:21,226 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 20:47:21,227 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 20:47:21,229 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 20:47:21,230 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 20:47:21,231 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 20:47:21,232 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 20:47:21,233 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 20:47:21,234 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 20:47:21,235 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 20:47:21,237 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 20:47:21,239 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 20:47:21,241 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 20:47:21,242 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 20:47:21,246 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 20:47:21,372 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 20:47:21,598 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 20:47:22,652 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 20:47:22,699 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#3757edf6:0/SimpleConnection@4af8e1f0 [delegate=amqp://guest@127.0.0.1:5672/, localPort=62797]
2023-11-17 20:47:23,027 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 20:47:23,706 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 20:47:23,759 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@470f9db9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3473c1d2, org.springframework.security.web.context.SecurityContextHolderFilter@45c7148a, org.springframework.security.web.header.HeaderWriterFilter@55a16400, org.springframework.security.web.authentication.logout.LogoutFilter@3618c521, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@46fe5c9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3717e393, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a006922, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f93360d, org.springframework.security.web.session.SessionManagementFilter@6bf5033a, org.springframework.security.web.access.ExceptionTranslationFilter@5b79066a, org.springframework.security.web.access.intercept.AuthorizationFilter@5d95c341]
2023-11-17 20:47:24,178 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 20:47:24,279 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 20:47:24,285 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 20:47:24,293 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 20:47:24,359 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 20:47:24,402 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 20:47:24,409 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 20:47:24,411 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 20:47:24,412 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 20:47:24,413 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 20:47:24,414 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 20:47:24,416 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 20:47:24,417 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 20:47:24,420 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 20:47:24,422 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-YA7qB8kca_qTOwVa3h67rA identity=4278ee2d] started
2023-11-17 20:47:24,422 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-DgYSkkvSgMNZyHPnIRirZQ identity=6bc16937] started
2023-11-17 20:47:24,422 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-tjSVuRZmAEFtX8K1I98wCw identity=230c0967] started
2023-11-17 20:47:24,422 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-CfDX_o6wXm32q7Zscgu03g identity=483d43c0] started
2023-11-17 20:47:24,422 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-9kCEr3xg6eLcgyeZQLuFiw identity=79509f91] started
2023-11-17 20:47:24,422 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 20:47:24,422 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-zfJyRDTbG_DU4IJSqIrCnw identity=1f0809f8] started
2023-11-17 20:47:24,424 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-dgfUVcHOqQSGu0m5FoKGFA identity=204acab0] started
2023-11-17 20:47:24,425 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 20:47:24,426 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-Kp_0anK3UgP-Z0FgK-2OCQ identity=5f5b2eda] started
2023-11-17 20:47:24,427 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 20:47:24,428 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag--uDrMKb89pkqh2AbFhS3rg identity=1a4784f9] started
2023-11-17 20:47:24,428 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 20:47:24,429 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 20:47:24,429 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-IxKpJkh3bL4MyS1wftDDRw identity=614ce1b6] started
2023-11-17 20:47:24,431 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 20:47:24,431 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-6cMNim747GSBrthF2PAV2w identity=590c89] started
2023-11-17 20:47:24,433 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 20:47:24,433 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-CRL7bj3iV5zLa3TYBYmQIw identity=8aab11f] started
2023-11-17 20:47:24,434 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 20:47:24,434 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-I-HkEFq5ZimAnsiFpBWnVA identity=47d36980] started
2023-11-17 20:47:24,435 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 20:47:24,436 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-bCkHY1CLrsyfpNf9AaKyoQ identity=4aceeebe] started
2023-11-17 20:47:24,437 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 20:47:24,437 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-xF5HlUEgfzEaeVcsUKVcwg identity=7c2bb6e5] started
2023-11-17 20:47:24,438 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 20:47:24,439 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 20:47:24,439 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-3o757C2f2U3FR9qE5KgoIQ identity=9307f6a] started
2023-11-17 20:47:24,439 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-8cj_5JphrKHEr6zaJImLBg identity=23814aa] started
2023-11-17 20:47:24,441 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-1JXv5jAEQa5ARiAOv-2oHA identity=2fd3345d] started
2023-11-17 20:47:24,443 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-jxkVSklJxU_Sw_y2nGzZuw identity=70bd1358] started
2023-11-17 20:47:24,444 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-39T83P8MsF4mgAowE1o0lA identity=281efb77] started
2023-11-17 20:47:24,451 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.606 seconds (process running for 9.245)
2023-11-17 20:47:24,549 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 20:47:24,576 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 20:47:24,632 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 20:47:24,633 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:47:24,707 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 20:47:24,708 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 20:47:24,711 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 20:47:24,712 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:47:54,835 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 20:47:54,835 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 20:47:54,837 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-17 20:47:55,085 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:47:55,171 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:47:55,186 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:47:55,196 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:47:55,200 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:47:55,337 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:47:55,341 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:47:55,415 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 20:48:12,504 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-11] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 20:58:51,738 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,738 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,738 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,738 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,740 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,741 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,742 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,743 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,744 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,745 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,745 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,746 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,747 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,748 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,749 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,750 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,751 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,752 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,752 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,753 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-17 20:58:51,754 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-17 20:58:51,756 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-17 20:58:51,770 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 20:58:51,772 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-17 20:58:51,774 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-17 20:58:55,303 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 15744 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 20:58:55,304 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 20:58:55,353 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 20:58:55,353 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 20:58:56,446 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 20:58:56,448 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 20:58:56,653 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 198 ms. Found 22 JPA repository interfaces.
2023-11-17 20:58:56,669 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 20:58:56,671 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 20:58:56,690 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,690 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,690 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,691 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,692 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,692 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,692 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,692 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,692 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,692 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,692 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,693 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,693 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,694 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 20:58:56,694 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-17 20:58:57,392 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 20:58:57,417 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 20:58:57,417 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2064 ms
2023-11-17 20:58:57,872 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 20:58:57,872 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 20:58:57,873 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 20:58:57,881 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 20:58:58,036 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@58407b5
2023-11-17 20:58:58,037 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 20:58:58,056 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 20:58:58,089 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.016s)
2023-11-17 20:58:58,150 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 20:58:58,150 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 20:58:58,234 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 20:58:58,281 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 20:58:58,283 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 20:58:58,526 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 20:58:59,723 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 20:58:59,732 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 20:58:59,735 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 20:58:59,736 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 20:58:59,737 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 20:58:59,737 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 20:58:59,738 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 20:58:59,738 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 20:58:59,739 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 20:58:59,740 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 20:58:59,740 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 20:58:59,741 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 20:58:59,741 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 20:58:59,742 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 20:58:59,743 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 20:58:59,744 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 20:58:59,744 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 20:58:59,745 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 20:58:59,745 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 20:58:59,746 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 20:58:59,746 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 20:58:59,747 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 20:58:59,747 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 20:58:59,748 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 20:58:59,749 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 20:58:59,749 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 20:58:59,750 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 20:58:59,753 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 20:58:59,754 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 20:58:59,756 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 20:58:59,757 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 20:58:59,759 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 20:58:59,760 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 20:58:59,762 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 20:58:59,763 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 20:58:59,764 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 20:58:59,765 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 20:58:59,766 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 20:58:59,768 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 20:58:59,769 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 20:58:59,771 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 20:58:59,771 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 20:58:59,773 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 20:58:59,774 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 20:58:59,776 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 20:58:59,778 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 20:58:59,780 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 20:58:59,781 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 20:58:59,784 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 20:58:59,785 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 20:58:59,786 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 20:58:59,788 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 20:58:59,789 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 20:58:59,793 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 20:58:59,795 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 20:58:59,798 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 20:58:59,804 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 20:58:59,809 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 20:58:59,812 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 20:58:59,816 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 20:58:59,820 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 20:58:59,824 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 20:58:59,826 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 20:58:59,828 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 20:58:59,833 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 20:58:59,837 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 20:58:59,839 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 20:58:59,844 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 20:58:59,847 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 20:58:59,850 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 20:58:59,854 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 20:58:59,857 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 20:58:59,860 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 20:58:59,864 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 20:58:59,870 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 20:58:59,874 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 20:58:59,879 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 20:58:59,884 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 20:58:59,888 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 20:58:59,893 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 20:58:59,900 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 20:58:59,902 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 20:58:59,904 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 20:58:59,905 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 20:58:59,906 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 20:58:59,907 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 20:58:59,908 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 20:58:59,910 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 20:58:59,911 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 20:58:59,912 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 20:58:59,913 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 20:58:59,915 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 20:58:59,916 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 20:58:59,917 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 20:58:59,918 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 20:58:59,920 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 20:58:59,921 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 20:58:59,921 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 20:58:59,923 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 20:58:59,924 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 20:58:59,926 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 20:58:59,927 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 20:58:59,928 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 20:58:59,930 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 20:58:59,931 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 20:58:59,934 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 20:59:00,054 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 20:59:00,245 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 20:59:01,315 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 20:59:01,373 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#d8b86f6:0/SimpleConnection@522d74c5 [delegate=amqp://guest@127.0.0.1:5672/, localPort=63476]
2023-11-17 20:59:01,706 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 20:59:02,423 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 20:59:02,483 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4b19bdfd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16fafc61, org.springframework.security.web.context.SecurityContextHolderFilter@247fcd4f, org.springframework.security.web.header.HeaderWriterFilter@13759fd5, org.springframework.security.web.authentication.logout.LogoutFilter@4b449de5, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@6021c652, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4355adb9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c80a87b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c3881ff, org.springframework.security.web.session.SessionManagementFilter@7a823a6d, org.springframework.security.web.access.ExceptionTranslationFilter@338e280a, org.springframework.security.web.access.intercept.AuthorizationFilter@2cce2e19]
2023-11-17 20:59:02,891 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 20:59:03,011 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 20:59:03,020 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 20:59:03,030 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 20:59:03,114 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 20:59:03,154 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 20:59:03,161 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 20:59:03,164 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 20:59:03,166 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 20:59:03,167 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 20:59:03,169 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 20:59:03,170 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 20:59:03,173 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 20:59:03,173 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-P6eU3Vrk82s_WPwhpeeP8w identity=12bf8ef4] started
2023-11-17 20:59:03,173 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-NfNAmrhvpfwP8k-ZPtAUnA identity=47d95d24] started
2023-11-17 20:59:03,174 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-MMGkjXUTOcdRmpOqHR_jiQ identity=c350dfa] started
2023-11-17 20:59:03,174 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-Z6_H7xAWJLSc6PR9dii3Rg identity=6330e1d3] started
2023-11-17 20:59:03,174 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-S2r7pFPBivF0sSTkHSVbNA identity=69801e21] started
2023-11-17 20:59:03,175 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 20:59:03,175 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-_Bw8pfuxljgTMgSQ311eYg identity=d090e2d] started
2023-11-17 20:59:03,176 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 20:59:03,178 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-1Lb32W6ASkh0BK-9iVY8Ag identity=67b707c3] started
2023-11-17 20:59:03,178 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 20:59:03,180 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 20:59:03,180 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-XdTxeVAaejsRBd0xPmpM8g identity=54155034] started
2023-11-17 20:59:03,181 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-apc22b_HMM9Jo3TwIOVO1g identity=1080aa1e] started
2023-11-17 20:59:03,182 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 20:59:03,183 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-65EGMphGmhhSaAhCD_r7ww identity=431deb35] started
2023-11-17 20:59:03,183 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 20:59:03,184 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-Ihcuefvndm0IX93s_2YV3Q identity=abecc5d] started
2023-11-17 20:59:03,185 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 20:59:03,186 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-SgM8UAVwwvrqdYfd6TGFJw identity=59f93844] started
2023-11-17 20:59:03,186 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 20:59:03,187 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 20:59:03,188 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-LjtOt0CyWlXjRip62BlVsA identity=6f2fe3da] started
2023-11-17 20:59:03,189 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 20:59:03,190 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-eMdDwVVKNnV6Uuyr5gahiA identity=2fe7cff5] started
2023-11-17 20:59:03,191 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 20:59:03,192 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 20:59:03,192 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-XhhYGtsEFRm0sLvmYNWIyQ identity=62ecbbbc] started
2023-11-17 20:59:03,194 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 20:59:03,194 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-Ci_YDNkb3xSqc4brKlEsPQ identity=1bfa57ac] started
2023-11-17 20:59:03,195 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-m037rFRwCt1Qa3cmVH_19w identity=31b6a506] started
2023-11-17 20:59:03,196 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-TtxFeardPYL8PhABNOvJjQ identity=185ef523] started
2023-11-17 20:59:03,197 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-WP4Q3ZWv0C8cULEZfu6q9w identity=56a1945] started
2023-11-17 20:59:03,199 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-CQzIHO4iVrzgOAXcXsiLZg identity=f474140] started
2023-11-17 20:59:03,205 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.193 seconds (process running for 8.732)
2023-11-17 20:59:03,285 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 20:59:03,311 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 20:59:03,366 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 20:59:03,367 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:59:03,429 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 20:59:03,430 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 20:59:03,432 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 20:59:03,434 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:59:03,627 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 20:59:03,627 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 20:59:03,629 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-17 20:59:03,848 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:59:03,930 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:59:03,942 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:59:03,952 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:59:03,955 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:59:03,964 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] SQL Error: 0, SQLState: 23505
2023-11-17 20:59:03,964 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMDI2NTU0MywiZXhwIjoxNzAwMzUxOTQzfQ._yaiBZ23VJk5m6tjoI3EFbKLq_DvFBuzrvcl0lhy_Vs) already exists.
2023-11-17 20:59:03,977 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/auth/authenticate
jakarta.servlet.ServletException: Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMDI2NTU0MywiZXhwIjoxNzAwMzUxOTQzfQ._yaiBZ23VJk5m6tjoI3EFbKLq_DvFBuzrvcl0lhy_Vs) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:44)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1512)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMDI2NTU0MywiZXhwIjoxNzAwMzUxOTQzfQ._yaiBZ23VJk5m6tjoI3EFbKLq_DvFBuzrvcl0lhy_Vs) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy181.save(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.saveUserToken(AuthenticationService.java:78)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.authenticate(AuthenticationService.java:63)
	at tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController.authenticate(AuthenticationController.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMDI2NTU0MywiZXhwIjoxNzAwMzUxOTQzfQ._yaiBZ23VJk5m6tjoI3EFbKLq_DvFBuzrvcl0lhy_Vs) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 155 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMDI2NTU0MywiZXhwIjoxNzAwMzUxOTQzfQ._yaiBZ23VJk5m6tjoI3EFbKLq_DvFBuzrvcl0lhy_Vs) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 176 common frames omitted
2023-11-17 20:59:03,987 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMDI2NTU0MywiZXhwIjoxNzAwMzUxOTQzfQ._yaiBZ23VJk5m6tjoI3EFbKLq_DvFBuzrvcl0lhy_Vs) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]. Generating error page resulted in a 403.
2023-11-17 20:59:04,066 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:59:04,068 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:59:10,593 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:59:10,654 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:59:10,659 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:59:10,660 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:59:10,696 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:59:10,698 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:59:11,037 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into attribute_model (description,hex_code,image_url,integrated,integrated_date,internal_name,name,priority,sku_id,type,attribute_id) values (?,?,?,?,?,?,?,?,?,?,?)
2023-11-17 20:59:11,041 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/catalog/attribute
jakarta.servlet.ServletException: Request processing failed: org.springframework.data.redis.serializer.SerializationException: Cannot serialize
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.data.redis.serializer.SerializationException: Cannot serialize
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.serialize(JdkSerializationRedisSerializer.java:85)
	at org.springframework.data.redis.serializer.DefaultRedisElementWriter.write(DefaultRedisElementWriter.java:41)
	at org.springframework.data.redis.serializer.RedisSerializationContext$SerializationPair.write(RedisSerializationContext.java:290)
	at org.springframework.data.redis.cache.RedisCache.serializeCacheValue(RedisCache.java:276)
	at org.springframework.data.redis.cache.RedisCache.put(RedisCache.java:187)
	at org.springframework.cache.interceptor.AbstractCacheInvoker.doPut(AbstractCacheInvoker.java:87)
	at org.springframework.cache.interceptor.CacheAspectSupport$CachePutRequest.apply(CacheAspectSupport.java:836)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:429)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:345)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService$$SpringCGLIB$$0.saveAttributeModel(<generated>)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController.save(AttributeModelController.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController$$SpringCGLIB$$0.save(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
Caused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to serialize object using DefaultSerializer
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:64)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:33)
	at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.serialize(JdkSerializationRedisSerializer.java:83)
	... 165 common frames omitted
Caused by: java.lang.IllegalArgumentException: DefaultSerializer requires a Serializable payload but received an object of type [tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel]
	at org.springframework.core.serializer.DefaultSerializer.serialize(DefaultSerializer.java:43)
	at org.springframework.core.serializer.Serializer.serializeToByteArray(Serializer.java:56)
	at org.springframework.core.serializer.support.SerializingConverter.convert(SerializingConverter.java:60)
	... 167 common frames omitted
2023-11-17 20:59:11,044 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: org.springframework.data.redis.serializer.SerializationException: Cannot serialize. Generating error page resulted in a 403.
2023-11-17 21:05:54,308 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,308 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,309 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,308 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,308 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,310 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,311 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,312 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,313 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,314 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,315 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,316 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,317 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,318 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,319 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,320 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,321 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,322 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,323 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,323 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-17 21:05:54,324 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-17 21:05:54,326 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-17 21:05:54,338 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 21:05:54,342 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-17 21:05:54,344 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-17 21:05:58,571 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 4232 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 21:05:58,573 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 21:05:58,626 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 21:05:58,626 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 21:05:59,667 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:05:59,670 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 21:05:59,835 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 158 ms. Found 22 JPA repository interfaces.
2023-11-17 21:05:59,847 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:05:59,849 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 21:05:59,867 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,867 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,867 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,867 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,867 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,868 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,868 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,868 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,868 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,868 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,868 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,869 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,869 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,869 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,869 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,869 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,870 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,870 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,870 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,870 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,870 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,871 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:05:59,871 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-17 21:06:00,566 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 21:06:00,582 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 21:06:00,583 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 1957 ms
2023-11-17 21:06:00,990 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 21:06:00,990 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 21:06:00,990 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 21:06:00,997 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 21:06:01,149 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f10938c
2023-11-17 21:06:01,150 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 21:06:01,163 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 21:06:01,195 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.015s)
2023-11-17 21:06:01,247 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 21:06:01,248 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 21:06:01,331 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 21:06:01,393 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 21:06:01,394 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 21:06:01,628 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 21:06:02,814 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 21:06:02,828 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 21:06:02,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 21:06:02,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 21:06:02,832 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 21:06:02,833 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 21:06:02,833 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 21:06:02,834 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 21:06:02,834 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 21:06:02,834 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 21:06:02,835 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 21:06:02,836 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 21:06:02,836 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 21:06:02,837 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 21:06:02,837 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 21:06:02,838 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 21:06:02,838 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 21:06:02,838 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 21:06:02,839 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 21:06:02,839 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 21:06:02,840 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 21:06:02,840 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 21:06:02,841 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 21:06:02,841 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 21:06:02,843 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 21:06:02,843 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 21:06:02,843 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 21:06:02,846 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 21:06:02,848 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 21:06:02,850 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 21:06:02,853 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 21:06:02,856 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 21:06:02,858 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 21:06:02,860 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 21:06:02,862 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 21:06:02,864 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 21:06:02,867 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 21:06:02,868 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 21:06:02,870 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 21:06:02,870 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 21:06:02,872 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 21:06:02,873 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 21:06:02,874 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 21:06:02,875 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 21:06:02,877 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 21:06:02,878 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 21:06:02,879 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 21:06:02,881 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 21:06:02,882 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 21:06:02,884 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 21:06:02,885 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 21:06:02,887 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 21:06:02,888 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 21:06:02,893 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 21:06:02,896 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 21:06:02,899 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 21:06:02,908 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 21:06:02,912 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 21:06:02,917 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 21:06:02,923 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 21:06:02,927 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 21:06:02,930 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 21:06:02,934 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 21:06:02,936 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 21:06:02,939 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 21:06:02,945 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 21:06:02,947 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 21:06:02,952 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 21:06:02,953 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 21:06:02,956 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 21:06:02,959 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 21:06:02,963 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 21:06:02,965 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 21:06:02,969 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 21:06:02,974 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 21:06:02,978 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 21:06:02,984 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 21:06:02,988 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 21:06:02,992 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 21:06:02,996 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 21:06:03,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 21:06:03,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 21:06:03,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 21:06:03,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 21:06:03,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 21:06:03,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 21:06:03,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 21:06:03,012 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 21:06:03,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 21:06:03,014 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 21:06:03,015 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 21:06:03,015 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 21:06:03,016 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 21:06:03,017 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 21:06:03,018 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 21:06:03,019 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 21:06:03,020 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 21:06:03,021 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 21:06:03,022 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 21:06:03,026 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 21:06:03,027 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 21:06:03,029 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 21:06:03,030 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 21:06:03,031 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 21:06:03,033 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 21:06:03,039 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 21:06:03,149 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 21:06:03,341 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 21:06:04,425 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 21:06:04,465 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#25c14590:0/SimpleConnection@5c7c2a95 [delegate=amqp://guest@127.0.0.1:5672/, localPort=63895]
2023-11-17 21:06:04,748 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 21:06:05,452 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 21:06:05,500 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6fe5d27b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a89c8b7, org.springframework.security.web.context.SecurityContextHolderFilter@55a81043, org.springframework.security.web.header.HeaderWriterFilter@7a9d4364, org.springframework.security.web.authentication.logout.LogoutFilter@5f2ae7f3, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@4d2beecf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5150685a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a1ebdfa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c949c1c, org.springframework.security.web.session.SessionManagementFilter@239375e3, org.springframework.security.web.access.ExceptionTranslationFilter@1e614876, org.springframework.security.web.access.intercept.AuthorizationFilter@5d1b0e4e]
2023-11-17 21:06:05,868 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 21:06:05,945 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 21:06:05,950 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 21:06:05,955 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 21:06:06,004 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 21:06:06,047 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 21:06:06,054 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 21:06:06,056 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 21:06:06,058 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 21:06:06,060 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 21:06:06,062 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 21:06:06,064 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 21:06:06,065 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-Dc5zgk7OI-gXbrC7b9CPkw identity=6a9ec003] started
2023-11-17 21:06:06,065 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-MbQc_rJOklCc5n07MbTbnA identity=31e4b71c] started
2023-11-17 21:06:06,065 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-5HUMdw-qQe2zCstEhFveoA identity=18265528] started
2023-11-17 21:06:06,066 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-hodM6lIofUw4Fuz_tKjArA identity=3f35336f] started
2023-11-17 21:06:06,066 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 21:06:06,067 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-EituqFOYBicVDOzMAKH0yw identity=45cf4930] started
2023-11-17 21:06:06,068 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 21:06:06,069 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-ULdonSZqqbqapc_Uo7CWBA identity=4c2721f7] started
2023-11-17 21:06:06,069 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 21:06:06,071 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-R6TvcCThp5cX7FmIVdWsMg identity=8a137af] started
2023-11-17 21:06:06,071 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 21:06:06,074 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-R6scTaCm2fqKSRj7jRUS2Q identity=32820574] started
2023-11-17 21:06:06,074 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 21:06:06,075 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-fCec5JdGyxH-PzH2GrCJjw identity=4937022a] started
2023-11-17 21:06:06,076 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 21:06:06,076 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-V8kA3WW2zSBcQ767r9qp2A identity=4659657c] started
2023-11-17 21:06:06,077 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 21:06:06,078 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 21:06:06,078 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-kpEe5YEPN972bGmisR_KtA identity=3e2861f5] started
2023-11-17 21:06:06,079 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 21:06:06,081 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-EUZcAUdmq76KWOSCrJgqzg identity=724779e1] started
2023-11-17 21:06:06,081 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 21:06:06,082 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-NuNy8fXMyD-C_4cclIbjEg identity=184f0fae] started
2023-11-17 21:06:06,083 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 21:06:06,083 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-W3IG3WbZhzNHnuYXUhzxaQ identity=2512af37] started
2023-11-17 21:06:06,084 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 21:06:06,084 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-rJq0kqFBOSKKmZJYqRjyDw identity=66b1e051] started
2023-11-17 21:06:06,086 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 21:06:06,086 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-L7U9QFMB2ivMOcXjSMdY-g identity=79fb0c06] started
2023-11-17 21:06:06,087 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-dBgyFnDw1vD3ilNPf-CMig identity=2fd3345d] started
2023-11-17 21:06:06,087 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 21:06:06,088 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-VQdqbFbP1tHQ6Fow52iAjw identity=70bd1358] started
2023-11-17 21:06:06,090 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-XNXdMMvH1Z-Xeq1zzFBtgg identity=318a75ba] started
2023-11-17 21:06:06,091 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-8MZPCjO5hODJC52PA0YOWA identity=7d113163] started
2023-11-17 21:06:06,097 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 7.834 seconds (process running for 8.361)
2023-11-17 21:06:06,185 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 21:06:06,209 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 21:06:06,258 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 21:06:06,261 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:06:06,325 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 21:06:06,326 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 21:06:06,328 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 21:06:06,328 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:07:48,310 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 21:07:48,310 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 21:07:48,314 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 3 ms
2023-11-17 21:07:48,525 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:07:48,602 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:07:48,615 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 21:07:48,626 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 21:07:48,629 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:07:48,719 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:07:48,722 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 21:07:49,158 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into attribute_model (description,hex_code,image_url,integrated,integrated_date,internal_name,name,priority,sku_id,type,attribute_id) values (?,?,?,?,?,?,?,?,?,?,?)
2023-11-17 21:07:49,173 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=274a91d5-beca-4397-a37b-ce791bd42379, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 21:10:35,883 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,883 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,883 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,883 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,885 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,886 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,887 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,888 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,889 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,891 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,892 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,893 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,894 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,895 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,896 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,897 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,898 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,899 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,899 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,900 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-17 21:10:35,901 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-17 21:10:35,903 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-17 21:10:35,913 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 21:10:35,916 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-17 21:10:35,918 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-17 21:10:53,554 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 17480 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 21:10:53,555 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 21:10:53,610 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 21:10:53,610 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 21:10:54,822 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:10:54,824 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 21:10:54,986 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 156 ms. Found 22 JPA repository interfaces.
2023-11-17 21:10:54,997 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:10:54,997 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 21:10:55,012 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,013 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,013 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,013 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,013 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,013 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,013 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,014 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,015 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,015 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,015 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,015 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,015 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,016 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,017 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:10:55,017 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2023-11-17 21:10:55,808 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 21:10:55,830 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 21:10:55,830 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2220 ms
2023-11-17 21:10:56,325 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 21:10:56,325 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 21:10:56,325 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 21:10:56,333 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 21:10:56,507 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@400d725
2023-11-17 21:10:56,508 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 21:10:56,531 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 21:10:56,568 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.015s)
2023-11-17 21:10:56,622 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 21:10:56,622 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 21:10:56,706 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 21:10:56,772 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 21:10:56,774 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 21:10:57,045 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 21:10:58,262 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 21:10:58,273 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 21:10:58,276 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 21:10:58,277 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 21:10:58,278 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 21:10:58,279 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 21:10:58,279 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 21:10:58,280 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 21:10:58,281 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 21:10:58,281 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 21:10:58,283 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 21:10:58,284 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 21:10:58,285 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 21:10:58,285 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 21:10:58,286 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 21:10:58,286 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 21:10:58,287 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 21:10:58,287 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 21:10:58,288 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 21:10:58,289 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 21:10:58,289 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 21:10:58,290 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 21:10:58,290 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 21:10:58,291 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 21:10:58,291 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 21:10:58,292 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 21:10:58,293 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 21:10:58,296 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 21:10:58,298 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 21:10:58,300 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 21:10:58,301 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 21:10:58,303 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 21:10:58,304 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 21:10:58,306 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 21:10:58,307 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 21:10:58,308 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 21:10:58,309 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 21:10:58,310 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 21:10:58,311 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 21:10:58,313 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 21:10:58,314 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 21:10:58,315 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 21:10:58,316 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 21:10:58,317 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 21:10:58,319 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 21:10:58,321 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 21:10:58,323 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 21:10:58,324 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 21:10:58,326 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 21:10:58,327 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 21:10:58,329 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 21:10:58,333 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 21:10:58,335 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 21:10:58,341 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 21:10:58,343 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 21:10:58,346 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 21:10:58,351 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 21:10:58,356 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 21:10:58,360 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 21:10:58,364 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 21:10:58,370 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 21:10:58,372 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 21:10:58,375 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 21:10:58,377 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 21:10:58,379 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 21:10:58,382 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 21:10:58,384 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 21:10:58,387 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 21:10:58,390 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 21:10:58,394 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 21:10:58,395 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 21:10:58,397 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 21:10:58,400 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 21:10:58,403 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 21:10:58,407 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 21:10:58,410 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 21:10:58,415 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 21:10:58,421 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 21:10:58,425 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 21:10:58,430 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 21:10:58,436 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 21:10:58,439 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 21:10:58,440 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 21:10:58,441 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 21:10:58,442 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 21:10:58,443 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 21:10:58,444 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 21:10:58,445 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 21:10:58,446 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 21:10:58,447 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 21:10:58,448 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 21:10:58,448 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 21:10:58,449 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 21:10:58,450 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 21:10:58,451 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 21:10:58,452 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 21:10:58,454 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 21:10:58,454 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 21:10:58,455 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 21:10:58,456 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 21:10:58,457 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 21:10:58,459 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 21:10:58,460 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 21:10:58,461 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 21:10:58,462 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 21:10:58,465 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 21:10:58,582 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 21:10:58,801 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 21:11:03,519 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 9036 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 21:11:03,521 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 21:11:03,583 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 21:11:03,584 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 21:11:04,790 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:11:04,792 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 21:11:04,989 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 190 ms. Found 22 JPA repository interfaces.
2023-11-17 21:11:05,002 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:11:05,003 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 21:11:05,019 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,019 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,019 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,019 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,020 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,021 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,021 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,022 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,022 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,022 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,022 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,022 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,023 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,023 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:11:05,023 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2023-11-17 21:11:05,806 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 21:11:05,827 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 21:11:05,827 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2243 ms
2023-11-17 21:11:06,320 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 21:11:06,320 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 21:11:06,320 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 21:11:06,328 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 21:11:06,506 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6c7323a4
2023-11-17 21:11:06,507 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 21:11:06,523 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 21:11:06,557 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.016s)
2023-11-17 21:11:06,611 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 21:11:06,612 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 21:11:06,701 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 21:11:06,759 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 21:11:06,761 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 21:11:07,031 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 21:11:08,395 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 21:11:08,413 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 21:11:08,415 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 21:11:08,416 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 21:11:08,416 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 21:11:08,417 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 21:11:08,418 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 21:11:08,418 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 21:11:08,419 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 21:11:08,420 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 21:11:08,420 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 21:11:08,422 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 21:11:08,423 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 21:11:08,424 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 21:11:08,424 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 21:11:08,425 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 21:11:08,425 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 21:11:08,426 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 21:11:08,427 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 21:11:08,428 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 21:11:08,428 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 21:11:08,429 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 21:11:08,429 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 21:11:08,430 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 21:11:08,430 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 21:11:08,432 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 21:11:08,433 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 21:11:08,435 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 21:11:08,437 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 21:11:08,439 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 21:11:08,440 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 21:11:08,443 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 21:11:08,444 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 21:11:08,446 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 21:11:08,447 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 21:11:08,448 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 21:11:08,450 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 21:11:08,451 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 21:11:08,454 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 21:11:08,455 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 21:11:08,457 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 21:11:08,458 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 21:11:08,459 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 21:11:08,461 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 21:11:08,462 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 21:11:08,464 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 21:11:08,466 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 21:11:08,469 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 21:11:08,471 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 21:11:08,473 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 21:11:08,475 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 21:11:08,477 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 21:11:08,479 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 21:11:08,487 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 21:11:08,490 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 21:11:08,495 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 21:11:08,506 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 21:11:08,512 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 21:11:08,517 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 21:11:08,523 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 21:11:08,528 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 21:11:08,532 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 21:11:08,537 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 21:11:08,541 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 21:11:08,544 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 21:11:08,551 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 21:11:08,555 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 21:11:08,561 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 21:11:08,565 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 21:11:08,569 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 21:11:08,574 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 21:11:08,577 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 21:11:08,581 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 21:11:08,587 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 21:11:08,592 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 21:11:08,598 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 21:11:08,605 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 21:11:08,611 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 21:11:08,617 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 21:11:08,624 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 21:11:08,633 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 21:11:08,637 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 21:11:08,640 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 21:11:08,642 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 21:11:08,645 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 21:11:08,647 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 21:11:08,649 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 21:11:08,651 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 21:11:08,654 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 21:11:08,657 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 21:11:08,659 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 21:11:08,660 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 21:11:08,663 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 21:11:08,665 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 21:11:08,668 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 21:11:08,670 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 21:11:08,672 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 21:11:08,673 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 21:11:08,675 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 21:11:08,677 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 21:11:08,679 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 21:11:08,682 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 21:11:08,684 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 21:11:08,687 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 21:11:08,688 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 21:11:08,695 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 21:11:08,815 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 21:11:09,056 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 21:11:10,157 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 21:11:10,210 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#ca6de41:0/SimpleConnection@65dc7611 [delegate=amqp://guest@127.0.0.1:5672/, localPort=64272]
2023-11-17 21:11:10,545 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 21:11:11,394 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 21:11:11,463 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7e718a76, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4615ef2, org.springframework.security.web.context.SecurityContextHolderFilter@168cd9eb, org.springframework.security.web.header.HeaderWriterFilter@7929dabb, org.springframework.security.web.authentication.logout.LogoutFilter@73528410, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@b50c9ef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@332f4425, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@65a82a39, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1da40095, org.springframework.security.web.session.SessionManagementFilter@71b033b9, org.springframework.security.web.access.ExceptionTranslationFilter@ca9c6f0, org.springframework.security.web.access.intercept.AuthorizationFilter@75a1e97b]
2023-11-17 21:11:11,922 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 21:11:12,012 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 21:11:12,018 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 21:11:12,025 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 21:11:12,091 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 21:11:12,137 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 21:11:12,144 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 21:11:12,150 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 21:11:12,153 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 21:11:12,155 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 21:11:12,156 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 21:11:12,159 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 21:11:12,159 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-ba3wi9Gm7k0mSXXOWYse5A identity=46499cf2] started
2023-11-17 21:11:12,159 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-rFwFpM9mHbDKAfO95DUTTw identity=52dd21a] started
2023-11-17 21:11:12,159 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-Uq_utrkWP3lOmVzLJnVFMg identity=7bb88bb7] started
2023-11-17 21:11:12,161 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 21:11:12,162 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-X1ruqO79kY8xFQsgCJUyNw identity=2271e484] started
2023-11-17 21:11:12,162 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-2v0dKEjY6NosdC2s4hI3sA identity=3d5f8845] started
2023-11-17 21:11:12,163 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 21:11:12,164 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-iGAdruxI29NklzIcjqwS6g identity=1889cb2a] started
2023-11-17 21:11:12,165 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 21:11:12,166 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-lmzyo8YYi7tcz_i0qkdjdg identity=11dc7897] started
2023-11-17 21:11:12,167 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 21:11:12,168 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-Eb4gwIqVcS4-5MLBNEr23A identity=47d36980] started
2023-11-17 21:11:12,168 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 21:11:12,170 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-Y3At2Lf-qNw49cOke9X34Q identity=1f9b5a22] started
2023-11-17 21:11:12,171 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 21:11:12,172 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-5mgVVEYHS4rNYFlOcbq8wA identity=2512af37] started
2023-11-17 21:11:12,172 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 21:11:12,173 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-syHo7sKnJYrruY41q4j23Q identity=66b1e051] started
2023-11-17 21:11:12,173 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 21:11:12,175 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 21:11:12,175 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-nmsOj7iugqFnTmWpDBZmAA identity=5512cc8a] started
2023-11-17 21:11:12,176 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 21:11:12,176 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-zy896wyNszO2_o7Tgq7Myg identity=76b266b0] started
2023-11-17 21:11:12,177 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-z-K00M6VtlnWybYCoRAMkA identity=4a42bfca] started
2023-11-17 21:11:12,177 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 21:11:12,179 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-5es7fS1AlwWYE0h5CaQhrQ identity=70bd1358] started
2023-11-17 21:11:12,180 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 21:11:12,181 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 21:11:12,182 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-0IDieELsYavzvRVa2EZyJA identity=24d725d6] started
2023-11-17 21:11:12,182 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-4iM_argINgcTDvNqHHwkDA identity=7cbc463a] started
2023-11-17 21:11:12,183 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 21:11:12,184 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-j3iBLNxpD4_M3r8xBu2F3w identity=1b9f710c] started
2023-11-17 21:11:12,186 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-wtw4K0a4Br9LMo1GNUHC-g identity=4705951c] started
2023-11-17 21:11:12,186 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-psrrAT_mGLNM2Y7DSTKJ1w identity=13aa9d95] started
2023-11-17 21:11:12,195 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.994 seconds (process running for 9.684)
2023-11-17 21:11:12,295 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 21:11:12,326 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 21:11:12,383 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 21:11:12,385 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:11:12,450 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 21:11:12,451 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 21:11:12,454 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 21:11:12,455 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:12:42,083 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 21:12:42,083 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 21:12:42,085 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-17 21:12:42,325 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:12:42,405 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:12:42,419 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 21:12:42,430 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 21:12:42,432 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:12:42,575 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:12:42,578 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 21:12:42,647 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 21:15:40,886 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m4s257ms292µs).
2023-11-17 21:15:40,889 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-11] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 21:15:40,892 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [pool-3-thread-11] Attempting to connect to: [localhost:5672]
2023-11-17 21:15:40,904 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [pool-3-thread-11] Created new connection: rabbitConnectionFactory#ca6de41:1/SimpleConnection@4f66e39e [delegate=amqp://guest@127.0.0.1:5672/, localPort=64532]
2023-11-17 21:15:40,905 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-11] Error acking
java.lang.IllegalStateException: Channel closed; cannot ack/nack
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.invoke(CachingConnectionFactory.java:1158)
	at jdk.proxy2/jdk.proxy2.$Proxy207.basicAck(Unknown Source)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.sendAckWithNotify(DirectMessageListenerContainer.java:1275)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleAck(DirectMessageListenerContainer.java:1209)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1139)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 21:17:21,006 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 21352 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 21:17:21,008 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 21:17:21,070 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 21:17:21,070 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 21:17:22,314 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:17:22,316 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 21:17:22,524 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 200 ms. Found 22 JPA repository interfaces.
2023-11-17 21:17:22,539 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 21:17:22,540 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 21:17:22,560 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,561 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,561 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,561 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,561 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,561 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,561 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,562 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,563 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,563 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,563 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,564 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,564 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,564 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,565 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 21:17:22,565 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2023-11-17 21:17:23,381 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 21:17:23,405 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 21:17:23,406 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2334 ms
2023-11-17 21:17:23,871 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 21:17:23,872 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 21:17:23,872 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 21:17:23,879 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 21:17:24,073 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3764c1e9
2023-11-17 21:17:24,075 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 21:17:24,092 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 21:17:24,126 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.016s)
2023-11-17 21:17:24,177 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 21:17:24,177 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 21:17:24,266 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 21:17:24,322 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 21:17:24,325 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 21:17:24,588 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 21:17:25,974 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 21:17:25,992 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 21:17:25,995 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 21:17:25,996 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 21:17:25,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 21:17:25,998 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 21:17:25,998 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 21:17:25,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 21:17:25,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 21:17:26,000 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 21:17:26,001 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 21:17:26,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 21:17:26,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 21:17:26,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 21:17:26,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 21:17:26,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 21:17:26,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 21:17:26,006 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 21:17:26,006 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 21:17:26,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 21:17:26,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 21:17:26,008 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 21:17:26,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 21:17:26,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 21:17:26,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 21:17:26,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 21:17:26,011 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 21:17:26,014 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 21:17:26,016 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 21:17:26,019 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 21:17:26,022 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 21:17:26,025 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 21:17:26,026 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 21:17:26,028 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 21:17:26,030 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 21:17:26,031 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 21:17:26,033 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 21:17:26,035 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 21:17:26,037 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 21:17:26,039 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 21:17:26,040 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 21:17:26,043 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 21:17:26,044 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 21:17:26,046 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 21:17:26,050 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 21:17:26,052 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 21:17:26,054 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 21:17:26,056 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 21:17:26,059 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 21:17:26,061 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 21:17:26,064 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 21:17:26,067 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 21:17:26,069 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 21:17:26,076 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 21:17:26,079 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 21:17:26,084 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 21:17:26,091 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 21:17:26,096 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 21:17:26,102 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 21:17:26,106 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 21:17:26,110 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 21:17:26,114 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 21:17:26,119 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 21:17:26,122 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 21:17:26,126 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 21:17:26,133 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 21:17:26,136 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 21:17:26,142 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 21:17:26,145 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 21:17:26,148 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 21:17:26,150 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 21:17:26,154 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 21:17:26,158 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 21:17:26,163 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 21:17:26,170 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 21:17:26,176 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 21:17:26,182 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 21:17:26,188 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 21:17:26,192 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 21:17:26,198 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 21:17:26,205 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 21:17:26,209 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 21:17:26,210 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 21:17:26,212 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 21:17:26,214 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 21:17:26,216 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 21:17:26,219 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 21:17:26,221 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 21:17:26,223 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 21:17:26,224 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 21:17:26,226 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 21:17:26,227 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 21:17:26,229 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 21:17:26,230 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 21:17:26,233 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 21:17:26,234 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 21:17:26,236 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 21:17:26,238 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 21:17:26,239 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 21:17:26,242 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 21:17:26,244 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 21:17:26,246 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 21:17:26,247 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 21:17:26,249 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 21:17:26,250 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 21:17:26,255 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 21:17:26,391 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 21:17:26,620 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 21:17:27,810 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 21:17:27,855 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#4a122a59:0/SimpleConnection@70035b4e [delegate=amqp://guest@127.0.0.1:5672/, localPort=64652]
2023-11-17 21:17:28,205 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 21:17:28,953 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 21:17:29,010 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2384b21, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28ef67e5, org.springframework.security.web.context.SecurityContextHolderFilter@7a006922, org.springframework.security.web.header.HeaderWriterFilter@595ae9d1, org.springframework.security.web.authentication.logout.LogoutFilter@554ef849, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@7dc35685, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35b21c1c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3999ea5d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e6a0fab, org.springframework.security.web.session.SessionManagementFilter@66833db, org.springframework.security.web.access.ExceptionTranslationFilter@46710889, org.springframework.security.web.access.intercept.AuthorizationFilter@3473c1d2]
2023-11-17 21:17:29,425 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 21:17:29,521 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 21:17:29,530 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 21:17:29,539 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 21:17:29,608 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 21:17:29,655 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 21:17:29,662 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 21:17:29,665 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 21:17:29,666 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 21:17:29,668 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 21:17:29,669 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 21:17:29,670 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 21:17:29,672 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 21:17:29,674 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-_PGnDD2Su6d9KBio_gEd2A identity=632825f1] started
2023-11-17 21:17:29,674 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 21:17:29,675 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-jKsi2oCdem0ty-fPb26Wog identity=2160d5d] started
2023-11-17 21:17:29,675 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-JiY9G0mB6pCjLzJiPadwTA identity=4799ec38] started
2023-11-17 21:17:29,676 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-hj5bPTSz0Ktgi42eM6eUyA identity=6672acf] started
2023-11-17 21:17:29,677 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-X7myH9B8sFZLlXSU2hhtIQ identity=fd1be32] started
2023-11-17 21:17:29,677 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 21:17:29,679 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-DEe910ZNKNQhb7ZgZY9UdQ identity=18e56dd7] started
2023-11-17 21:17:29,679 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 21:17:29,680 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-0YpOsRn5ATXDHtruwoiN4g identity=66fa79af] started
2023-11-17 21:17:29,681 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 21:17:29,681 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-zmp4EiwTitKyMHuzlocu4g identity=7d3ce2a4] started
2023-11-17 21:17:29,682 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-pcFYWDVLj9HWgzCbKiLAMA identity=caa6605] started
2023-11-17 21:17:29,683 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 21:17:29,684 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-Rsdy6Lxkhqp93H73Wy1EUg identity=69562461] started
2023-11-17 21:17:29,685 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 21:17:29,686 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-ZD_f-s-a8eqzhfv7anDr4Q identity=57636327] started
2023-11-17 21:17:29,687 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 21:17:29,688 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-OaZwhJM59_WGatY2gIIQZw identity=39f11a9c] started
2023-11-17 21:17:29,689 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 21:17:29,690 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-7JqQ3lW8jAyJkYWg7qj6FA identity=5c4279ba] started
2023-11-17 21:17:29,691 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 21:17:29,692 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-77wvEk1mAADnV7_xkZ_RNw identity=50155df9] started
2023-11-17 21:17:29,693 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-fSFqzADDPoKJUYipg4hmRw identity=774adf08] started
2023-11-17 21:17:29,694 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 21:17:29,695 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 21:17:29,697 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 21:17:29,697 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-PYM17FJfyZrWLpZqYroAmA identity=1ec25219] started
2023-11-17 21:17:29,698 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-OJjplVotvM1bdZqas4q8GQ identity=e5e66e8] started
2023-11-17 21:17:29,698 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 21:17:29,700 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-S68FONGFC-d6lGER0Scr0g identity=131640b5] started
2023-11-17 21:17:29,701 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-sNVB4UvZwfXUbybWAPTCeQ identity=7494ee06] started
2023-11-17 21:17:29,702 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-eVd6BSfWr9kC__2txY3Y9w identity=14a2877f] started
2023-11-17 21:17:29,709 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 9.023 seconds (process running for 9.725)
2023-11-17 21:17:51,684 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-8] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 21:17:53,287 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 21:17:53,321 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 21:17:53,366 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 21:17:53,367 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:17:53,430 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 21:17:53,432 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 21:17:53,434 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 21:17:53,435 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:17:56,314 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 21:17:56,314 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 21:17:56,317 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 3 ms
2023-11-17 21:17:56,549 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:17:56,629 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:17:56,644 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 21:17:56,655 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 21:17:56,660 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 21:17:56,772 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 21:17:56,777 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 21:17:56,844 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 21:18:00,404 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-13] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
