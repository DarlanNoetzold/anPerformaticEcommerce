2023-11-29 07:03:49,260 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 18052 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-29 07:03:49,266 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-29 07:03:49,337 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-29 07:03:49,337 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-29 07:03:50,994 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:03:50,997 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-29 07:03:51,299 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 293 ms. Found 22 JPA repository interfaces.
2023-11-29 07:03:51,321 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:03:51,323 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-29 07:03:51,348 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,348 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,348 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,348 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,349 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,349 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,349 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,349 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,349 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,349 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,349 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,350 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,350 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,350 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,350 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,350 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,351 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,351 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,351 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,351 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,351 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,352 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:03:51,352 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2023-11-29 07:03:51,686 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=98d41010-d2c2-3c2b-9a46-89942fe62352
2023-11-29 07:03:51,816 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.CatalogClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:03:51,818 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.LoginClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:03:51,820 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PaymentClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:03:51,822 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PromotionClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:03:51,823 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:03:52,552 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-29 07:03:52,575 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-29 07:03:52,576 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 3238 ms
2023-11-29 07:03:53,137 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-29 07:03:53,137 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-29 07:03:53,137 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-29 07:03:53,146 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-29 07:03:53,337 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@33d4cdcb
2023-11-29 07:03:53,339 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-29 07:03:53,356 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-29 07:03:53,398 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.022s)
2023-11-29 07:03:53,455 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-29 07:03:53,455 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-29 07:03:53,577 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-29 07:03:53,667 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-29 07:03:53,670 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-29 07:03:54,032 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-29 07:03:55,543 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-29 07:03:55,562 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-29 07:03:55,573 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-29 07:03:55,574 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-29 07:03:55,574 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-29 07:03:55,575 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-29 07:03:55,576 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-29 07:03:55,577 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-29 07:03:55,578 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-29 07:03:55,579 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-29 07:03:55,580 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-29 07:03:55,581 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-29 07:03:55,582 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-29 07:03:55,583 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-29 07:03:55,584 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-29 07:03:55,585 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-29 07:03:55,586 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-29 07:03:55,586 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-29 07:03:55,587 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-29 07:03:55,588 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-29 07:03:55,589 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-29 07:03:55,589 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-29 07:03:55,590 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-29 07:03:55,591 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-29 07:03:55,592 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-29 07:03:55,592 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-29 07:03:55,593 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-29 07:03:55,599 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-29 07:03:55,603 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-29 07:03:55,606 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-29 07:03:55,608 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-29 07:03:55,611 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-29 07:03:55,614 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-29 07:03:55,617 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-29 07:03:55,620 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-29 07:03:55,623 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-29 07:03:55,626 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-29 07:03:55,628 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-29 07:03:55,630 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-29 07:03:55,632 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-29 07:03:55,634 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-29 07:03:55,637 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-29 07:03:55,639 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-29 07:03:55,643 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-29 07:03:55,647 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-29 07:03:55,651 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-29 07:03:55,654 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-29 07:03:55,657 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-29 07:03:55,660 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-29 07:03:55,663 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-29 07:03:55,667 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-29 07:03:55,673 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-29 07:03:55,675 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-29 07:03:55,686 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-29 07:03:55,692 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-29 07:03:55,699 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-29 07:03:55,710 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-29 07:03:55,722 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-29 07:03:55,727 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-29 07:03:55,732 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-29 07:03:55,739 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-29 07:03:55,743 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-29 07:03:55,767 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-29 07:03:55,770 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-29 07:03:55,774 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-29 07:03:55,778 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-29 07:03:55,781 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-29 07:03:55,786 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-29 07:03:55,800 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-29 07:03:55,804 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-29 07:03:55,807 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-29 07:03:55,810 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-29 07:03:55,814 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-29 07:03:55,821 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-29 07:03:55,834 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-29 07:03:55,841 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-29 07:03:55,846 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-29 07:03:55,851 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-29 07:03:55,856 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-29 07:03:55,863 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-29 07:03:55,880 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-29 07:03:55,886 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-29 07:03:55,888 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-29 07:03:55,890 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-29 07:03:55,892 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-29 07:03:55,893 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-29 07:03:55,894 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-29 07:03:55,896 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-29 07:03:55,897 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-29 07:03:55,898 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-29 07:03:55,899 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-29 07:03:55,900 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-29 07:03:55,901 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-29 07:03:55,903 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-29 07:03:55,905 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-29 07:03:55,906 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-29 07:03:55,907 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-29 07:03:55,908 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-29 07:03:55,910 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-29 07:03:55,912 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-29 07:03:55,913 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-29 07:03:55,915 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-29 07:03:55,916 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-29 07:03:55,918 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-29 07:03:55,919 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-29 07:03:55,923 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:03:56,056 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-29 07:03:56,300 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-29 07:03:57,521 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-29 07:03:57,588 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#13e60e23:0/SimpleConnection@214058b8 [delegate=amqp://guest@127.0.0.1:5672/, localPort=53713]
2023-11-29 07:03:57,915 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-29 07:03:57,972 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-29 07:03:59,137 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-29 07:03:59,183 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6aa362e5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4cc9deb7, org.springframework.security.web.context.SecurityContextHolderFilter@2da69a0a, org.springframework.security.web.header.HeaderWriterFilter@6b9c6c40, org.springframework.security.web.authentication.logout.LogoutFilter@197b55bd, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@7ec0dd3e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7bba6534, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4354d630, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a41512b, org.springframework.security.web.session.SessionManagementFilter@7a3d4adf, org.springframework.security.web.access.ExceptionTranslationFilter@27d2969f, org.springframework.security.web.access.intercept.AuthorizationFilter@1be7a57b]
2023-11-29 07:04:00,738 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:04:01,048 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-29 07:04:01,065 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-29 07:04:01,077 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-29 07:04:01,170 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-29 07:04:01,216 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-29 07:04:02,293 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:04:02,298 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-29 07:04:02,303 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-29 07:04:02,313 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-29 07:04:02,317 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-29 07:04:02,319 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-29 07:04:02,321 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-29 07:04:02,324 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-29 07:04:02,325 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-U-FIqQAXGvv54g2bmcUQHg identity=5a31ea65] started
2023-11-29 07:04:02,326 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-JFmBujXQ3fs0BUH0ceGDKA identity=a731617] started
2023-11-29 07:04:02,327 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-29 07:04:02,327 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-smyhyX8PugrL1M--XUCArA identity=52e86e3b] started
2023-11-29 07:04:02,330 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-29 07:04:02,332 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-29 07:04:02,333 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-iyOJbHMvXt_ucW5x489t6Q identity=466f59c7] started
2023-11-29 07:04:02,336 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-29 07:04:02,336 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-35Vw77JM1_ILbYpZdsK9ZA identity=2561fa72] started
2023-11-29 07:04:02,337 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-YLGrWVcK51ZFaqn7M1H7zA identity=49889f46] started
2023-11-29 07:04:02,342 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-29 07:04:02,342 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-64ESyxzlLcTorTb4p2uqFw identity=5f0f6c93] started
2023-11-29 07:04:02,349 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-Mrz4KCjul-n_yh9KlMgizQ identity=412408f9] started
2023-11-29 07:04:02,350 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-7OnEv5Wi_SGcXxacZQgf5g identity=43b126f6] started
2023-11-29 07:04:02,350 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-29 07:04:02,353 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-kEGTi6c3lVMuxUxo8bYn5A identity=155ba738] started
2023-11-29 07:04:02,353 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-29 07:04:02,356 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-6KcWqFOREVS-aKP412XAng identity=112eef19] started
2023-11-29 07:04:02,357 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-29 07:04:02,357 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-Fx9DAPD_RU9-EeC39HZbWQ identity=2a12941a] started
2023-11-29 07:04:02,360 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-wm668IDGFPSrkb5w034myw identity=274da134] started
2023-11-29 07:04:02,360 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-xlQ0CBeH413_eI4DII_wwA identity=6522577] started
2023-11-29 07:04:02,360 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-29 07:04:02,362 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-geMFa46G0Qhqh0TRs1eD9Q identity=294e0d3b] started
2023-11-29 07:04:02,363 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-29 07:04:02,365 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-29 07:04:02,368 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-29 07:04:02,369 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-ugu30hwE4CKPoSP4ijWEAQ identity=659d22bd] started
2023-11-29 07:04:02,369 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-mnbj7I9sCfKGwrnjWcM5kg identity=7ab82467] started
2023-11-29 07:04:02,370 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-29 07:04:02,371 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-kkIVG7d3D89MVRW3iur0lA identity=60b938d6] started
2023-11-29 07:04:02,373 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-iQ5_Z_vgtGQLTqID0rVPPg identity=e3ed6f] started
2023-11-29 07:04:02,374 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-_nPKS4CLdPgzQSksCUEAmA identity=39e847f8] started
2023-11-29 07:04:02,379 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 14.619 seconds (process running for 15.723)
2023-11-29 07:04:02,466 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:04:02,531 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:04:02,545 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:04:02,550 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:04:02,616 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:04:02,621 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:04:02,622 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:04:02,623 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:04:31,559 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-29 07:04:31,559 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-29 07:04:31,561 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-29 07:04:31,578 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-29 07:04:31,592 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:04:31,606 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-29 07:04:31,667 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-29 07:04:31,813 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:04:39,767 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-29 07:04:39,772 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:04:39,785 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-29 07:04:39,789 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:04:39,793 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-29 07:04:39,858 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-29 07:04:42,278 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:04:42,280 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-29 07:04:42,296 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-29 07:04:42,312 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:04:42,342 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:04:57,975 INFO tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController [XNIO-1 task-2] Send message paymentModel: PaymentModel(paymentId=null, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-29 07:05:09,713 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /realms/quarkus1/protocol/openid-connect/token
2023-11-29 07:05:09,714 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:05:09,720 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-29 07:05:09,723 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /error
2023-11-29 07:05:09,727 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:05:09,727 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-29 07:05:13,693 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer [pool-3-thread-10] Error to consume cerate message for paymentModel - PaymentModel(paymentId=60d9e1fa-dee3-418b-818f-7f32af729374, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
feign.FeignException$Forbidden: [403 Forbidden] during [POST] to [http://localhost:8091/realms/quarkus1/protocol/openid-connect/token] [LoginClient#getToken(String)]: []
	at feign.FeignException.clientErrorStatus(FeignException.java:226)
	at feign.FeignException.errorStatus(FeignException.java:203)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:104)
	at feign.ResponseHandler.decodeError(ResponseHandler.java:136)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:70)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:96)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:54)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:351)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy4/jdk.proxy4.$Proxy229.getToken(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.service.LoginService.getToken(LoginService.java:29)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-29 07:05:16,100 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-10] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:05:16,100 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-10] Failed to invoke listener
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:07:13,666 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-29 07:07:13,667 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:07:13,668 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-29 07:07:13,669 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-29 07:07:13,671 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:07:13,732 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-29 07:07:13,733 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:07:13,739 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-29 07:07:13,741 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:07:13,742 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-29 07:07:13,783 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-29 07:07:13,785 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:07:13,788 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-29 07:07:13,793 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-29 07:07:13,795 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:07:13,795 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:07:13,796 INFO tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController [XNIO-1 task-2] Send message paymentModel: PaymentModel(paymentId=null, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-29 07:07:20,691 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /realms/quarkus1/protocol/openid-connect/token
2023-11-29 07:07:20,691 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:07:20,695 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-29 07:07:20,696 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /error
2023-11-29 07:07:20,696 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:07:20,698 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-29 07:07:26,684 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer [pool-3-thread-12] Error to consume cerate message for paymentModel - PaymentModel(paymentId=9e588ec4-0b91-425c-954d-028f72bf51a8, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
feign.FeignException$Forbidden: [403 Forbidden] during [POST] to [http://localhost:8091/realms/quarkus1/protocol/openid-connect/token] [LoginClient#getToken(String)]: []
	at feign.FeignException.clientErrorStatus(FeignException.java:226)
	at feign.FeignException.errorStatus(FeignException.java:203)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:104)
	at feign.ResponseHandler.decodeError(ResponseHandler.java:136)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:70)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:96)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:54)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:351)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy4/jdk.proxy4.$Proxy229.getToken(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.service.LoginService.getToken(LoginService.java:29)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-29 07:07:26,687 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-12] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:07:26,688 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-12] Failed to invoke listener
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:08:02,484 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-29 07:08:02,484 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:08:02,485 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-29 07:08:02,486 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-29 07:08:02,487 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:08:02,547 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-29 07:08:02,548 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:08:02,551 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-29 07:08:02,552 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:08:02,553 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-29 07:08:02,596 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-29 07:08:02,598 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:08:02,600 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-29 07:08:02,606 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-29 07:08:02,607 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:08:02,607 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:08:02,608 INFO tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController [XNIO-1 task-2] Send message paymentModel: PaymentModel(paymentId=null, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-29 07:18:40,550 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m42s558ms406µs100ns).
2023-11-29 07:18:40,561 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /realms/quarkus1/protocol/openid-connect/token
2023-11-29 07:18:40,561 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:18:40,564 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-29 07:18:40,565 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /error
2023-11-29 07:18:40,567 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:18:40,568 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-29 07:18:40,578 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer [pool-3-thread-13] Error to consume cerate message for paymentModel - PaymentModel(paymentId=13b2d220-9f0f-49ee-b6a4-e2fb971289dc, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
feign.FeignException$Forbidden: [403 Forbidden] during [POST] to [http://localhost:8091/realms/quarkus1/protocol/openid-connect/token] [LoginClient#getToken(String)]: []
	at feign.FeignException.clientErrorStatus(FeignException.java:226)
	at feign.FeignException.errorStatus(FeignException.java:203)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:104)
	at feign.ResponseHandler.decodeError(ResponseHandler.java:136)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:70)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:96)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:54)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:351)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy4/jdk.proxy4.$Proxy229.getToken(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.service.LoginService.getToken(LoginService.java:29)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-29 07:18:40,582 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-13] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:18:40,582 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-13] Failed to invoke listener
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:18:40,588 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [pool-3-thread-13] Attempting to connect to: [localhost:5672]
2023-11-29 07:18:40,595 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [pool-3-thread-13] Created new connection: rabbitConnectionFactory#13e60e23:1/SimpleConnection@2609b1bb [delegate=amqp://guest@127.0.0.1:5672/, localPort=54627]
2023-11-29 07:18:40,597 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-13] Failed to nack message
java.lang.IllegalStateException: Channel closed; cannot ack/nack
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory$CachedChannelInvocationHandler.invoke(CachingConnectionFactory.java:1158)
	at jdk.proxy2/jdk.proxy2.$Proxy215.basicNack(Unknown Source)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.rollback(DirectMessageListenerContainer.java:1248)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1179)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-29 07:27:12,570 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 12868 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-29 07:27:12,572 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-29 07:27:12,630 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-29 07:27:12,631 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-29 07:27:13,892 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:27:13,894 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-29 07:27:14,082 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 181 ms. Found 22 JPA repository interfaces.
2023-11-29 07:27:14,096 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:27:14,098 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-29 07:27:14,113 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,113 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,114 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,115 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,116 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,116 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,117 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,117 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,117 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:27:14,119 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-29 07:27:14,446 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=98d41010-d2c2-3c2b-9a46-89942fe62352
2023-11-29 07:27:14,558 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.CatalogClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:27:14,561 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.LoginClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:27:14,563 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PaymentClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:27:14,564 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PromotionClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:27:14,566 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:27:15,154 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-29 07:27:15,178 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-29 07:27:15,178 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2547 ms
2023-11-29 07:27:15,683 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-29 07:27:15,683 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-29 07:27:15,683 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-29 07:27:15,691 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-29 07:27:15,844 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6344f040
2023-11-29 07:27:15,845 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-29 07:27:15,861 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-29 07:27:15,898 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.018s)
2023-11-29 07:27:15,954 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-29 07:27:15,955 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-29 07:27:16,046 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-29 07:27:16,102 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-29 07:27:16,104 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-29 07:27:16,403 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-29 07:27:17,738 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-29 07:27:17,753 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-29 07:27:17,756 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-29 07:27:17,757 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-29 07:27:17,757 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-29 07:27:17,758 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-29 07:27:17,759 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-29 07:27:17,759 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-29 07:27:17,760 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-29 07:27:17,760 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-29 07:27:17,761 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-29 07:27:17,762 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-29 07:27:17,763 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-29 07:27:17,763 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-29 07:27:17,764 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-29 07:27:17,764 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-29 07:27:17,765 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-29 07:27:17,766 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-29 07:27:17,766 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-29 07:27:17,767 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-29 07:27:17,767 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-29 07:27:17,768 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-29 07:27:17,769 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-29 07:27:17,770 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-29 07:27:17,770 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-29 07:27:17,771 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-29 07:27:17,772 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-29 07:27:17,775 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-29 07:27:17,777 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-29 07:27:17,779 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-29 07:27:17,781 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-29 07:27:17,784 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-29 07:27:17,786 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-29 07:27:17,788 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-29 07:27:17,790 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-29 07:27:17,791 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-29 07:27:17,793 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-29 07:27:17,795 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-29 07:27:17,797 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-29 07:27:17,799 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-29 07:27:17,800 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-29 07:27:17,801 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-29 07:27:17,803 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-29 07:27:17,805 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-29 07:27:17,807 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-29 07:27:17,809 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-29 07:27:17,812 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-29 07:27:17,814 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-29 07:27:17,816 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-29 07:27:17,818 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-29 07:27:17,821 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-29 07:27:17,824 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-29 07:27:17,827 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-29 07:27:17,833 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-29 07:27:17,836 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-29 07:27:17,842 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-29 07:27:17,849 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-29 07:27:17,853 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-29 07:27:17,858 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-29 07:27:17,862 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-29 07:27:17,867 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-29 07:27:17,871 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-29 07:27:17,875 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-29 07:27:17,879 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-29 07:27:17,882 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-29 07:27:17,887 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-29 07:27:17,890 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-29 07:27:17,895 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-29 07:27:17,898 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-29 07:27:17,901 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-29 07:27:17,904 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-29 07:27:17,909 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-29 07:27:17,912 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-29 07:27:17,918 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-29 07:27:17,924 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-29 07:27:17,929 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-29 07:27:17,935 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-29 07:27:17,939 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-29 07:27:17,944 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-29 07:27:17,948 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-29 07:27:17,955 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-29 07:27:17,959 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-29 07:27:17,961 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-29 07:27:17,965 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-29 07:27:17,967 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-29 07:27:17,970 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-29 07:27:17,973 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-29 07:27:17,975 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-29 07:27:17,977 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-29 07:27:17,980 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-29 07:27:17,982 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-29 07:27:17,983 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-29 07:27:17,985 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-29 07:27:17,987 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-29 07:27:17,989 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-29 07:27:17,992 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-29 07:27:17,994 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-29 07:27:17,996 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-29 07:27:17,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-29 07:27:17,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-29 07:27:18,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-29 07:27:18,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-29 07:27:18,006 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-29 07:27:18,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-29 07:27:18,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-29 07:27:18,016 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:27:18,133 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-29 07:27:18,382 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-29 07:27:19,473 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-29 07:27:19,519 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#2e794358:0/SimpleConnection@7330b09 [delegate=amqp://guest@127.0.0.1:5672/, localPort=55132]
2023-11-29 07:27:19,812 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-29 07:27:19,867 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-29 07:27:19,963 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer' defined in file [C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes\tech\noetzold\anPerformaticEcommerce\message\consumer\OrderConsumer.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'loginService': Unsatisfied dependency expressed through field 'tokenClient': Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
2023-11-29 07:27:19,980 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:27:19,983 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-29 07:27:19,986 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-29 07:27:20,008 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-29 07:27:20,029 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer' defined in file [C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes\tech\noetzold\anPerformaticEcommerce\message\consumer\OrderConsumer.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'loginService': Unsatisfied dependency expressed through field 'tokenClient': Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:801)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:240)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1189)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:560)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication.main(AnPerformaticEcommerceApplication.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginService': Unsatisfied dependency expressed through field 'tokenClient': Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:910)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:788)
	... 24 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:184)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:120)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:258)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1640)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1597)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 39 common frames omitted
Caused by: java.lang.IllegalStateException: Method has too many Body parameters: public abstract java.lang.String tech.noetzold.anPerformaticEcommerce.client.LoginClient.getToken(java.lang.String,java.lang.String)
Warnings:
- 
	at feign.Util.checkState(Util.java:136)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:147)
	at org.springframework.cloud.openfeign.support.SpringMvcContract.parseAndValidateMetadata(SpringMvcContract.java:197)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:65)
	at feign.ReflectiveFeign$ParseHandlersByName.apply(ReflectiveFeign.java:134)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:56)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:48)
	at feign.Feign$Builder.target(Feign.java:196)
	at org.springframework.cloud.openfeign.DefaultTargeter.target(DefaultTargeter.java:30)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:470)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:421)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:178)
	... 50 common frames omitted
2023-11-29 07:31:24,489 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 2576 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-29 07:31:24,491 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-29 07:31:24,562 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-29 07:31:24,562 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-29 07:31:25,864 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:31:25,865 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-29 07:31:26,078 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 204 ms. Found 22 JPA repository interfaces.
2023-11-29 07:31:26,091 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:31:26,092 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-29 07:31:26,108 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,109 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,109 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,109 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,109 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,110 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,111 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,111 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,111 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,111 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,111 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,112 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,112 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,112 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,112 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,113 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:31:26,113 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-29 07:31:26,433 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=98d41010-d2c2-3c2b-9a46-89942fe62352
2023-11-29 07:31:26,551 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.CatalogClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:31:26,554 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.LoginClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:31:26,556 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PaymentClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:31:26,558 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PromotionClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:31:26,560 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:31:27,168 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-29 07:31:27,188 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-29 07:31:27,188 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2625 ms
2023-11-29 07:31:27,694 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-29 07:31:27,695 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-29 07:31:27,695 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-29 07:31:27,703 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-29 07:31:27,877 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4bb12438
2023-11-29 07:31:27,879 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-29 07:31:27,894 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-29 07:31:27,929 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.018s)
2023-11-29 07:31:27,976 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-29 07:31:27,977 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-29 07:31:28,074 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-29 07:31:28,125 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-29 07:31:28,127 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-29 07:31:28,418 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-29 07:31:29,844 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-29 07:31:29,862 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-29 07:31:29,865 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-29 07:31:29,866 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-29 07:31:29,868 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-29 07:31:29,868 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-29 07:31:29,869 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-29 07:31:29,870 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-29 07:31:29,870 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-29 07:31:29,871 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-29 07:31:29,872 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-29 07:31:29,873 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-29 07:31:29,874 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-29 07:31:29,874 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-29 07:31:29,875 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-29 07:31:29,875 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-29 07:31:29,875 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-29 07:31:29,876 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-29 07:31:29,876 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-29 07:31:29,877 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-29 07:31:29,877 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-29 07:31:29,878 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-29 07:31:29,879 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-29 07:31:29,879 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-29 07:31:29,880 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-29 07:31:29,880 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-29 07:31:29,881 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-29 07:31:29,884 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-29 07:31:29,886 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-29 07:31:29,889 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-29 07:31:29,892 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-29 07:31:29,895 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-29 07:31:29,895 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-29 07:31:29,897 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-29 07:31:29,899 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-29 07:31:29,901 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-29 07:31:29,903 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-29 07:31:29,904 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-29 07:31:29,908 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-29 07:31:29,909 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-29 07:31:29,911 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-29 07:31:29,912 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-29 07:31:29,914 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-29 07:31:29,915 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-29 07:31:29,918 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-29 07:31:29,920 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-29 07:31:29,923 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-29 07:31:29,925 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-29 07:31:29,927 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-29 07:31:29,928 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-29 07:31:29,930 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-29 07:31:29,933 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-29 07:31:29,935 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-29 07:31:29,944 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-29 07:31:29,947 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-29 07:31:29,951 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-29 07:31:29,957 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-29 07:31:29,962 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-29 07:31:29,966 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-29 07:31:29,972 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-29 07:31:29,976 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-29 07:31:29,980 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-29 07:31:29,986 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-29 07:31:29,989 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-29 07:31:29,992 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-29 07:31:29,996 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-29 07:31:29,998 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-29 07:31:30,003 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-29 07:31:30,006 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-29 07:31:30,009 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-29 07:31:30,012 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-29 07:31:30,014 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-29 07:31:30,016 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-29 07:31:30,021 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-29 07:31:30,025 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-29 07:31:30,029 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-29 07:31:30,034 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-29 07:31:30,039 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-29 07:31:30,043 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-29 07:31:30,047 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-29 07:31:30,053 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-29 07:31:30,056 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-29 07:31:30,058 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-29 07:31:30,059 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-29 07:31:30,061 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-29 07:31:30,062 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-29 07:31:30,064 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-29 07:31:30,065 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-29 07:31:30,066 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-29 07:31:30,068 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-29 07:31:30,070 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-29 07:31:30,072 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-29 07:31:30,075 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-29 07:31:30,076 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-29 07:31:30,079 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-29 07:31:30,080 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-29 07:31:30,081 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-29 07:31:30,083 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-29 07:31:30,084 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-29 07:31:30,085 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-29 07:31:30,086 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-29 07:31:30,089 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-29 07:31:30,092 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-29 07:31:30,094 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-29 07:31:30,095 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-29 07:31:30,101 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:31:30,232 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-29 07:31:30,457 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-29 07:31:31,536 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-29 07:31:31,586 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#7d34443:0/SimpleConnection@4026654e [delegate=amqp://guest@127.0.0.1:5672/, localPort=55451]
2023-11-29 07:31:31,877 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-29 07:31:31,920 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-29 07:31:32,023 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer': Unsatisfied dependency expressed through field 'loginService': Error creating bean with name 'loginService': Unsatisfied dependency expressed through field 'tokenClient': Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
2023-11-29 07:31:32,043 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:31:32,046 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-29 07:31:32,049 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-29 07:31:32,072 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-29 07:31:32,092 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer': Unsatisfied dependency expressed through field 'loginService': Error creating bean with name 'loginService': Unsatisfied dependency expressed through field 'tokenClient': Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication.main(AnPerformaticEcommerceApplication.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'loginService': Unsatisfied dependency expressed through field 'tokenClient': Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:747)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:492)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1416)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1417)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 25 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.noetzold.anPerformaticEcommerce.client.LoginClient': FactoryBean threw exception on object creation
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:184)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:120)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1273)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:258)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1640)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1597)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1337)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:764)
	... 39 common frames omitted
Caused by: java.lang.IllegalStateException: Method has too many Body parameters: public abstract java.lang.String tech.noetzold.anPerformaticEcommerce.client.LoginClient.getToken(java.lang.String,java.lang.String)
Warnings:
- 
	at feign.Util.checkState(Util.java:136)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:147)
	at org.springframework.cloud.openfeign.support.SpringMvcContract.parseAndValidateMetadata(SpringMvcContract.java:197)
	at feign.Contract$BaseContract.parseAndValidateMetadata(Contract.java:65)
	at feign.ReflectiveFeign$ParseHandlersByName.apply(ReflectiveFeign.java:134)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:56)
	at feign.ReflectiveFeign.newInstance(ReflectiveFeign.java:48)
	at feign.Feign$Builder.target(Feign.java:196)
	at org.springframework.cloud.openfeign.DefaultTargeter.target(DefaultTargeter.java:30)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget(FeignClientFactoryBean.java:470)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:421)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:178)
	... 50 common frames omitted
2023-11-29 07:38:10,744 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 7932 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-29 07:38:10,746 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-29 07:38:10,806 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-29 07:38:10,806 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-29 07:38:12,045 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:38:12,047 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-29 07:38:12,267 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 213 ms. Found 22 JPA repository interfaces.
2023-11-29 07:38:12,280 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:38:12,280 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-29 07:38:12,295 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,295 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,295 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,295 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,295 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,296 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,298 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,298 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,298 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,298 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,298 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,298 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,299 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,299 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:38:12,300 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2023-11-29 07:38:12,603 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=98d41010-d2c2-3c2b-9a46-89942fe62352
2023-11-29 07:38:12,710 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.CatalogClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:38:12,712 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.LoginClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:38:12,714 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PaymentClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:38:12,715 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PromotionClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:38:12,717 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:38:13,296 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-29 07:38:13,317 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-29 07:38:13,317 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2509 ms
2023-11-29 07:38:13,799 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-29 07:38:13,800 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-29 07:38:13,800 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-29 07:38:13,807 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-29 07:38:13,963 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8eb06dd
2023-11-29 07:38:13,964 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-29 07:38:13,977 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-29 07:38:14,008 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.015s)
2023-11-29 07:38:14,062 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-29 07:38:14,062 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-29 07:38:14,157 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-29 07:38:14,210 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-29 07:38:14,212 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-29 07:38:14,485 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-29 07:38:15,814 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-29 07:38:15,832 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-29 07:38:15,835 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-29 07:38:15,837 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-29 07:38:15,837 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-29 07:38:15,838 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-29 07:38:15,839 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-29 07:38:15,840 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-29 07:38:15,840 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-29 07:38:15,841 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-29 07:38:15,842 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-29 07:38:15,842 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-29 07:38:15,843 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-29 07:38:15,843 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-29 07:38:15,844 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-29 07:38:15,845 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-29 07:38:15,845 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-29 07:38:15,846 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-29 07:38:15,847 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-29 07:38:15,847 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-29 07:38:15,847 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-29 07:38:15,848 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-29 07:38:15,848 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-29 07:38:15,849 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-29 07:38:15,849 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-29 07:38:15,850 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-29 07:38:15,850 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-29 07:38:15,853 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-29 07:38:15,855 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-29 07:38:15,858 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-29 07:38:15,860 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-29 07:38:15,861 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-29 07:38:15,863 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-29 07:38:15,864 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-29 07:38:15,866 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-29 07:38:15,867 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-29 07:38:15,869 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-29 07:38:15,870 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-29 07:38:15,872 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-29 07:38:15,873 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-29 07:38:15,874 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-29 07:38:15,875 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-29 07:38:15,876 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-29 07:38:15,877 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-29 07:38:15,878 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-29 07:38:15,880 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-29 07:38:15,882 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-29 07:38:15,883 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-29 07:38:15,885 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-29 07:38:15,886 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-29 07:38:15,888 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-29 07:38:15,889 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-29 07:38:15,890 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-29 07:38:15,896 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-29 07:38:15,899 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-29 07:38:15,903 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-29 07:38:15,910 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-29 07:38:15,915 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-29 07:38:15,920 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-29 07:38:15,925 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-29 07:38:15,928 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-29 07:38:15,932 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-29 07:38:15,935 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-29 07:38:15,938 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-29 07:38:15,941 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-29 07:38:15,945 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-29 07:38:15,948 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-29 07:38:15,953 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-29 07:38:15,956 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-29 07:38:15,959 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-29 07:38:15,961 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-29 07:38:15,964 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-29 07:38:15,965 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-29 07:38:15,969 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-29 07:38:15,973 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-29 07:38:15,978 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-29 07:38:15,982 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-29 07:38:15,985 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-29 07:38:15,988 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-29 07:38:15,992 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-29 07:38:15,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-29 07:38:15,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-29 07:38:16,001 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-29 07:38:16,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-29 07:38:16,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-29 07:38:16,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-29 07:38:16,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-29 07:38:16,008 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-29 07:38:16,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-29 07:38:16,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-29 07:38:16,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-29 07:38:16,012 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-29 07:38:16,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-29 07:38:16,014 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-29 07:38:16,015 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-29 07:38:16,016 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-29 07:38:16,017 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-29 07:38:16,018 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-29 07:38:16,018 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-29 07:38:16,019 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-29 07:38:16,021 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-29 07:38:16,022 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-29 07:38:16,023 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-29 07:38:16,025 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-29 07:38:16,026 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-29 07:38:16,030 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:38:16,155 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-29 07:38:16,374 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-29 07:38:17,405 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-29 07:38:17,448 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#7d34443:0/SimpleConnection@4026654e [delegate=amqp://guest@127.0.0.1:5672/, localPort=55860]
2023-11-29 07:38:17,724 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-29 07:38:17,778 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-29 07:38:18,736 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-29 07:38:18,805 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@e2d3a57, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d8c0bc8, org.springframework.security.web.context.SecurityContextHolderFilter@7077ba7d, org.springframework.security.web.header.HeaderWriterFilter@25b4f060, org.springframework.security.web.authentication.logout.LogoutFilter@37fdbf36, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@9a39b0d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46ed8bdc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77fa6d36, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2996250c, org.springframework.security.web.session.SessionManagementFilter@4fc690, org.springframework.security.web.access.ExceptionTranslationFilter@25342510, org.springframework.security.web.access.intercept.AuthorizationFilter@5ad722b8]
2023-11-29 07:38:20,360 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:38:20,479 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-29 07:38:20,488 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-29 07:38:20,497 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-29 07:38:20,564 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-29 07:38:20,614 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-29 07:38:21,683 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:38:21,689 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-29 07:38:21,691 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-29 07:38:21,693 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-29 07:38:21,694 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-29 07:38:21,696 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-29 07:38:21,698 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-29 07:38:21,700 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-29 07:38:21,702 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-29 07:38:21,703 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-Ow6619B3p_B8JPoSWwoDuQ identity=5e1e1933] started
2023-11-29 07:38:21,704 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-odb7ctMU-Djm5oFx0pdtgQ identity=1fdd47ff] started
2023-11-29 07:38:21,704 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-poF5en1FSMVy5R6P8o6nPg identity=371729dc] started
2023-11-29 07:38:21,704 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-qBA7pvjo3atJ7UaJf70W7g identity=2d649116] started
2023-11-29 07:38:21,704 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-29 07:38:21,706 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-29 07:38:21,707 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-_jSPEDHkjz_DrnWw1Q7FiA identity=4f92bbb8] started
2023-11-29 07:38:21,707 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-7R7nn1T1oPPJDE4rK6lVyA identity=be4bb3f] started
2023-11-29 07:38:21,708 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-29 07:38:21,709 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-h66Z5qDDc9b29vkQEylpyQ identity=2e8d3b62] started
2023-11-29 07:38:21,710 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-29 07:38:21,710 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-Knh6BA8_9cYN6l7aSa0c9Q identity=7b18aae3] started
2023-11-29 07:38:21,711 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-55mw2KPZJ5ysaSlSnopgDQ identity=125a3a51] started
2023-11-29 07:38:21,712 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-r1aGyaHL9N6HrdGHIx-Hrg identity=15090ba9] started
2023-11-29 07:38:21,712 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-29 07:38:21,714 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-PW_bC59SIMgT0LYEVG0e_A identity=4f67b6fe] started
2023-11-29 07:38:21,714 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-29 07:38:21,716 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-r0djotiLPYaKshq41MJfag identity=5fc4cbfd] started
2023-11-29 07:38:21,716 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-29 07:38:21,718 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-aO-UkZ4D5t_TRRr8FEIKqA identity=5cdd9b82] started
2023-11-29 07:38:21,718 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-29 07:38:21,719 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-bguzmQIdJiQeCc86pqSJ1w identity=561a95f5] started
2023-11-29 07:38:21,720 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-29 07:38:21,721 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-LNebbiOQLoMtVS_9tt2Lbg identity=7327ef0d] started
2023-11-29 07:38:21,721 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-29 07:38:21,723 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-29 07:38:21,725 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-p11XOAaS0UabyV2lnoxLsQ identity=4778b91b] started
2023-11-29 07:38:21,725 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-29 07:38:21,725 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-iyGiJW5GM9i9Mf0F5UsnjA identity=3384688b] started
2023-11-29 07:38:21,727 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-J5u2JcY_TtdDb4f2aJ-sDw identity=1cf0c2fe] started
2023-11-29 07:38:26,135 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-dNCXqaEdtXZXoo7dJW5NwQ identity=1c3bcc9d] started
2023-11-29 07:38:26,139 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-upqe--h1-7t4O4wv4Jim2g identity=2561fa72] started
2023-11-29 07:38:26,146 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 16.809 seconds (process running for 17.47)
2023-11-29 07:38:26,224 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:38:26,273 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:38:26,287 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:38:26,291 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:38:26,833 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:38:26,835 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:38:26,837 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:38:26,837 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:39:01,566 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer [pool-3-thread-5] Error to consume cerate message for paymentModel - PaymentModel(paymentId=85b95d92-7d5a-4246-8145-65806f91ff6e, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
feign.FeignException$Unauthorized: [401 Unauthorized] during [POST] to [http://localhost:7000/api/payment/v1/payment] [PaymentClient#savePayment(String,PaymentModel)]: []
	at feign.FeignException.clientErrorStatus(FeignException.java:224)
	at feign.FeignException.errorStatus(FeignException.java:203)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:104)
	at feign.ResponseHandler.decodeError(ResponseHandler.java:136)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:70)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:96)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:54)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:351)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy4/jdk.proxy4.$Proxy227.savePayment(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-29 07:39:01,573 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-5] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:39:01,574 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-5] Failed to invoke listener
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:40:00,453 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-29 07:40:00,453 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-29 07:40:00,455 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-29 07:40:00,464 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-29 07:40:00,475 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:40:00,487 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-29 07:40:00,519 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-29 07:40:00,652 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:40:00,728 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-29 07:40:00,732 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:40:00,744 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-29 07:40:00,750 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:40:00,754 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-29 07:40:00,802 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-29 07:40:00,842 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:40:00,844 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-29 07:40:00,860 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-29 07:40:00,874 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:40:00,904 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:40:00,913 INFO tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController [XNIO-1 task-2] Send message paymentModel: PaymentModel(paymentId=null, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-29 07:41:27,164 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer [pool-3-thread-13] Error to consume cerate message for paymentModel - PaymentModel(paymentId=5245abd0-dc1d-46fa-b436-3bd8c6af56d0, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
feign.FeignException$Unauthorized: [401 Unauthorized] during [POST] to [http://localhost:7000/api/payment/v1/payment] [PaymentClient#savePayment(String,PaymentModel)]: []
	at feign.FeignException.clientErrorStatus(FeignException.java:224)
	at feign.FeignException.errorStatus(FeignException.java:203)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:104)
	at feign.ResponseHandler.decodeError(ResponseHandler.java:136)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:70)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:96)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:54)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:351)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy4/jdk.proxy4.$Proxy227.savePayment(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-29 07:41:27,167 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-13] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:41:27,167 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-13] Failed to invoke listener
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-29 07:41:27,192 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,192 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,192 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,192 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,194 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,195 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,196 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,197 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,199 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,199 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,200 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,201 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,202 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,203 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,204 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,205 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,206 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,207 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,208 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,209 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-29 07:41:27,209 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-29 07:41:27,211 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-29 07:41:27,225 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:41:27,228 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-29 07:41:27,230 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-29 07:41:32,022 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 20948 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-29 07:41:32,023 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-29 07:41:32,085 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-29 07:41:32,085 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-29 07:41:33,354 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:41:33,355 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-29 07:41:33,578 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 216 ms. Found 22 JPA repository interfaces.
2023-11-29 07:41:33,591 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:41:33,592 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-29 07:41:33,610 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,610 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,610 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,611 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:41:33,615 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2023-11-29 07:41:33,914 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=98d41010-d2c2-3c2b-9a46-89942fe62352
2023-11-29 07:41:34,026 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.CatalogClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:41:34,028 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.LoginClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:41:34,030 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PaymentClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:41:34,032 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PromotionClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:41:34,034 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:41:34,609 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-29 07:41:34,626 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-29 07:41:34,626 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2541 ms
2023-11-29 07:41:35,123 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-29 07:41:35,123 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-29 07:41:35,123 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-29 07:41:35,130 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-29 07:41:35,286 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8eb06dd
2023-11-29 07:41:35,288 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-29 07:41:35,308 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-29 07:41:35,350 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.026s)
2023-11-29 07:41:35,418 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-29 07:41:35,419 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-29 07:41:35,530 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-29 07:41:35,593 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-29 07:41:35,596 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-29 07:41:35,877 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-29 07:41:37,305 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-29 07:41:37,324 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-29 07:41:37,326 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-29 07:41:37,327 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-29 07:41:37,328 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-29 07:41:37,328 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-29 07:41:37,329 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-29 07:41:37,330 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-29 07:41:37,331 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-29 07:41:37,332 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-29 07:41:37,333 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-29 07:41:37,334 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-29 07:41:37,334 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-29 07:41:37,335 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-29 07:41:37,336 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-29 07:41:37,336 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-29 07:41:37,336 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-29 07:41:37,338 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-29 07:41:37,338 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-29 07:41:37,339 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-29 07:41:37,340 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-29 07:41:37,341 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-29 07:41:37,341 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-29 07:41:37,342 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-29 07:41:37,342 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-29 07:41:37,343 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-29 07:41:37,344 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-29 07:41:37,348 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-29 07:41:37,350 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-29 07:41:37,353 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-29 07:41:37,355 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-29 07:41:37,358 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-29 07:41:37,359 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-29 07:41:37,362 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-29 07:41:37,364 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-29 07:41:37,366 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-29 07:41:37,368 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-29 07:41:37,369 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-29 07:41:37,371 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-29 07:41:37,372 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-29 07:41:37,373 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-29 07:41:37,375 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-29 07:41:37,376 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-29 07:41:37,377 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-29 07:41:37,380 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-29 07:41:37,382 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-29 07:41:37,384 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-29 07:41:37,386 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-29 07:41:37,390 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-29 07:41:37,392 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-29 07:41:37,395 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-29 07:41:37,398 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-29 07:41:37,400 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-29 07:41:37,406 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-29 07:41:37,411 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-29 07:41:37,417 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-29 07:41:37,424 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-29 07:41:37,428 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-29 07:41:37,434 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-29 07:41:37,439 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-29 07:41:37,443 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-29 07:41:37,447 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-29 07:41:37,451 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-29 07:41:37,453 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-29 07:41:37,456 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-29 07:41:37,460 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-29 07:41:37,462 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-29 07:41:37,468 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-29 07:41:37,471 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-29 07:41:37,474 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-29 07:41:37,476 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-29 07:41:37,479 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-29 07:41:37,483 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-29 07:41:37,487 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-29 07:41:37,492 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-29 07:41:37,496 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-29 07:41:37,500 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-29 07:41:37,505 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-29 07:41:37,508 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-29 07:41:37,512 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-29 07:41:37,517 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-29 07:41:37,519 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-29 07:41:37,520 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-29 07:41:37,521 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-29 07:41:37,523 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-29 07:41:37,523 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-29 07:41:37,524 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-29 07:41:37,526 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-29 07:41:37,528 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-29 07:41:37,529 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-29 07:41:37,531 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-29 07:41:37,532 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-29 07:41:37,539 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-29 07:41:37,540 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-29 07:41:37,542 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-29 07:41:37,542 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-29 07:41:37,544 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-29 07:41:37,545 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-29 07:41:37,546 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-29 07:41:37,548 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-29 07:41:37,549 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-29 07:41:37,550 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-29 07:41:37,552 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-29 07:41:37,554 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-29 07:41:37,555 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-29 07:41:37,560 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:41:37,691 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-29 07:41:37,930 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-29 07:41:38,975 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-29 07:41:39,022 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#7d34443:0/SimpleConnection@4026654e [delegate=amqp://guest@127.0.0.1:5672/, localPort=56072]
2023-11-29 07:41:39,298 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-29 07:41:39,350 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-29 07:41:40,358 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-29 07:41:40,420 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@e2d3a57, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6d8c0bc8, org.springframework.security.web.context.SecurityContextHolderFilter@7077ba7d, org.springframework.security.web.header.HeaderWriterFilter@25b4f060, org.springframework.security.web.authentication.logout.LogoutFilter@37fdbf36, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@9a39b0d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46ed8bdc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@77fa6d36, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2996250c, org.springframework.security.web.session.SessionManagementFilter@4fc690, org.springframework.security.web.access.ExceptionTranslationFilter@25342510, org.springframework.security.web.access.intercept.AuthorizationFilter@5ad722b8]
2023-11-29 07:41:41,918 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:41:42,029 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-29 07:41:42,037 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-29 07:41:42,047 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-29 07:41:42,113 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-29 07:41:42,164 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-29 07:41:43,254 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:41:43,259 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-29 07:41:43,261 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-29 07:41:43,264 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-29 07:41:43,268 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-29 07:41:43,270 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-29 07:41:43,273 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-29 07:41:43,273 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-WoEeTjR2QdgA8fXMRSKf5g identity=4de1b75a] started
2023-11-29 07:41:43,273 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-pRgtCaWrhw1evyo2qv1g3g identity=3de91dfd] started
2023-11-29 07:41:43,273 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-aO3_-h1VMFHWD5r0Z93M4A identity=be4bb3f] started
2023-11-29 07:41:43,273 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-G1zuR677m9EHAqOfkZR0Og identity=4b31522e] started
2023-11-29 07:41:43,275 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-29 07:41:43,276 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-akhWH3ciXN6KRdqFhdUfWA identity=6771be95] started
2023-11-29 07:41:43,277 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-29 07:41:43,278 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-fbGcPFw_HkvnwL1BWB2vVA identity=5b09e392] started
2023-11-29 07:41:43,279 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-29 07:41:43,281 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-6Y8yKIRRxYk8Q9B-XoIoKA identity=5ea37d3] started
2023-11-29 07:41:43,282 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-29 07:41:43,283 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-WJS8Na8iLFARhbVXQ2d7NA identity=1e68cb9f] started
2023-11-29 07:41:43,284 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-29 07:41:43,285 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-t8DrKrj0UYjNUWktW4rRmg identity=1b8ca8ad] started
2023-11-29 07:41:43,286 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-29 07:41:43,288 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-29 07:41:43,288 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-qejewYhzCKSbcuKw56d0Fg identity=158c0602] started
2023-11-29 07:41:43,290 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-29 07:41:43,291 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-tjWa3QTEveBfBVZIC0f_WQ identity=feda943] started
2023-11-29 07:41:43,291 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-29 07:41:43,292 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-UhOTldFFQkE9YH1WedgdMA identity=1b832fe5] started
2023-11-29 07:41:43,293 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-29 07:41:43,293 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-olAMPCN-88xhKUtr6q1R8A identity=6b36e0ae] started
2023-11-29 07:41:43,294 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-4JTxz2Tlig3U0ebNaYx47A identity=7f696012] started
2023-11-29 07:41:43,295 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-29 07:41:43,297 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-qRgawjVHc5NjWzC7i9AUyw identity=3ca7ed8d] started
2023-11-29 07:41:43,299 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-29 07:41:43,301 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-q32rDmlMvvmJTucwKg4aUg identity=4444fe7c] started
2023-11-29 07:41:43,302 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-xavIqZ_aH-A05WuzggLODA identity=79cfbe8b] started
2023-11-29 07:41:43,302 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-29 07:41:43,303 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-29 07:41:43,304 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-sJqKaTOe14lAw87eUK1gfA identity=625812ba] started
2023-11-29 07:41:43,306 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-qLZ1FSlTZhk311bnQH6dcQ identity=2998dffa] started
2023-11-29 07:41:43,308 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-FUVZjfsWUgNch4rxaqVjgQ identity=39afc361] started
2023-11-29 07:41:43,312 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 12.711 seconds (process running for 13.471)
2023-11-29 07:41:43,404 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:41:43,458 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:41:43,470 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:41:43,473 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:41:43,535 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:41:43,538 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:41:43,540 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:41:43,540 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:41:48,852 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-29 07:41:48,852 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-29 07:41:48,854 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-29 07:41:48,874 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-29 07:41:48,888 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:41:48,901 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-29 07:41:48,982 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-29 07:41:49,122 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:41:49,200 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-29 07:41:49,203 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:41:49,216 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-29 07:41:49,222 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:41:49,225 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-29 07:41:49,304 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-29 07:41:49,343 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:41:49,347 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-29 07:41:49,370 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-29 07:41:49,390 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:41:49,419 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:41:54,243 INFO tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController [XNIO-1 task-2] Send message paymentModel: PaymentModel(paymentId=null, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-29 07:42:00,923 INFO tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer [pool-3-thread-11] Consume paymentModel - PaymentModel(paymentId=65c348d9-e142-4ddd-969b-68649da1840e, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-29 07:42:00,927 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-11] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:368)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:234)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:152)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1416)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:174)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:161)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:144)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:79)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	... 45 common frames omitted
2023-11-29 07:42:10,541 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer [pool-3-thread-11] Error to consume a message
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:368)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:234)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:152)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1416)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:174)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:161)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:144)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:79)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	... 45 common frames omitted
2023-11-29 07:42:10,543 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-11] Execution of Rabbit message listener failed, and the error handler threw an exception
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:147)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1453)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1751)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1527)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	... 12 common frames omitted
Caused by: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:368)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:234)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:152)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1416)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:174)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:161)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:144)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:79)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	... 45 common frames omitted
2023-11-29 07:42:10,543 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-11] Failed to invoke listener
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:147)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1453)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1751)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1527)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	... 12 common frames omitted
Caused by: org.springframework.dao.InvalidDataAccessApiUsageException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:368)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:234)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: java.lang.IllegalStateException: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:152)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1416)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.hibernate.TransientPropertyValueException: object references an unsaved transient instance - save the transient instance before flushing : tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel.boletoModel -> tech.noetzold.anPerformaticEcommerce.model.payment.paymentMethods.BoletoModel
	at org.hibernate.engine.spi.CascadingActions$8.noCascade(CascadingActions.java:372)
	at org.hibernate.engine.internal.Cascade.cascade(Cascade.java:174)
	at org.hibernate.event.internal.AbstractFlushingEventListener.cascadeOnFlush(AbstractFlushingEventListener.java:161)
	at org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:144)
	at org.hibernate.event.internal.AbstractFlushingEventListener.flushEverythingToExecutions(AbstractFlushingEventListener.java:79)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:38)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	... 45 common frames omitted
2023-11-29 07:43:00,589 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,589 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,589 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,589 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,590 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,591 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,593 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,594 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,594 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,595 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,596 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,597 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,598 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,599 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,600 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,601 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,602 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,603 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,604 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,604 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-29 07:43:00,605 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-29 07:43:00,606 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-29 07:43:00,620 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:43:00,622 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-29 07:43:00,623 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-29 07:43:27,027 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 15008 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-29 07:43:27,029 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-29 07:43:27,089 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-29 07:43:27,089 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-29 07:43:28,363 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:43:28,365 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-29 07:43:28,591 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 214 ms. Found 22 JPA repository interfaces.
2023-11-29 07:43:28,607 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-29 07:43:28,609 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-29 07:43:28,625 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,625 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,627 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,627 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,627 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,627 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,627 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,628 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,628 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,628 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,628 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,628 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,628 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,629 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,629 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,629 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,630 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,630 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,630 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,630 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,630 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,632 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-29 07:43:28,632 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2023-11-29 07:43:28,970 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=98d41010-d2c2-3c2b-9a46-89942fe62352
2023-11-29 07:43:29,110 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.CatalogClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:43:29,112 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.LoginClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:43:29,115 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PaymentClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:43:29,117 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PromotionClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:43:29,119 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-29 07:43:29,739 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-29 07:43:29,758 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-29 07:43:29,759 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2670 ms
2023-11-29 07:43:30,264 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-29 07:43:30,264 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-29 07:43:30,264 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-29 07:43:30,272 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-29 07:43:30,444 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14f9b5a8
2023-11-29 07:43:30,445 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-29 07:43:30,461 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-29 07:43:30,495 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-29 07:43:30,552 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-29 07:43:30,552 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-29 07:43:30,643 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-29 07:43:30,691 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-29 07:43:30,693 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-29 07:43:30,988 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-29 07:43:32,447 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-29 07:43:32,471 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-29 07:43:32,474 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-29 07:43:32,475 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-29 07:43:32,476 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-29 07:43:32,477 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-29 07:43:32,478 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-29 07:43:32,478 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-29 07:43:32,479 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-29 07:43:32,480 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-29 07:43:32,481 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-29 07:43:32,482 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-29 07:43:32,483 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-29 07:43:32,484 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-29 07:43:32,485 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-29 07:43:32,486 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-29 07:43:32,487 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-29 07:43:32,488 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-29 07:43:32,488 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-29 07:43:32,489 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-29 07:43:32,490 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-29 07:43:32,491 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-29 07:43:32,492 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-29 07:43:32,492 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-29 07:43:32,493 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-29 07:43:32,494 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-29 07:43:32,495 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-29 07:43:32,500 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-29 07:43:32,504 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-29 07:43:32,506 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-29 07:43:32,510 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-29 07:43:32,513 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-29 07:43:32,515 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-29 07:43:32,519 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-29 07:43:32,521 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-29 07:43:32,523 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-29 07:43:32,526 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-29 07:43:32,528 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-29 07:43:32,531 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-29 07:43:32,533 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-29 07:43:32,535 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-29 07:43:32,538 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-29 07:43:32,541 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-29 07:43:32,543 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-29 07:43:32,546 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-29 07:43:32,549 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-29 07:43:32,551 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-29 07:43:32,554 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-29 07:43:32,557 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-29 07:43:32,559 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-29 07:43:32,561 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-29 07:43:32,565 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-29 07:43:32,567 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-29 07:43:32,577 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-29 07:43:32,580 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-29 07:43:32,587 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-29 07:43:32,593 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-29 07:43:32,598 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-29 07:43:32,605 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-29 07:43:32,608 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-29 07:43:32,612 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-29 07:43:32,617 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-29 07:43:32,620 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-29 07:43:32,624 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-29 07:43:32,627 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-29 07:43:32,631 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-29 07:43:32,634 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-29 07:43:32,639 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-29 07:43:32,643 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-29 07:43:32,646 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-29 07:43:32,651 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-29 07:43:32,654 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-29 07:43:32,658 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-29 07:43:32,663 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-29 07:43:32,667 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-29 07:43:32,673 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-29 07:43:32,678 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-29 07:43:32,683 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-29 07:43:32,689 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-29 07:43:32,695 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-29 07:43:32,701 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-29 07:43:32,703 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-29 07:43:32,705 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-29 07:43:32,708 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-29 07:43:32,710 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-29 07:43:32,712 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-29 07:43:32,714 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-29 07:43:32,716 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-29 07:43:32,717 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-29 07:43:32,720 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-29 07:43:32,721 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-29 07:43:32,722 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-29 07:43:32,724 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-29 07:43:32,725 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-29 07:43:32,727 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-29 07:43:32,728 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-29 07:43:32,729 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-29 07:43:32,730 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-29 07:43:32,731 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-29 07:43:32,732 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-29 07:43:32,733 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-29 07:43:32,734 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-29 07:43:32,735 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-29 07:43:32,738 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-29 07:43:32,738 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-29 07:43:32,743 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-29 07:43:32,855 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-29 07:43:33,086 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-29 07:43:34,202 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-29 07:43:34,248 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#2e794358:0/SimpleConnection@214058b8 [delegate=amqp://guest@127.0.0.1:5672/, localPort=56206]
2023-11-29 07:43:34,563 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-29 07:43:34,620 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-29 07:43:35,778 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-29 07:43:35,835 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@586817a1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@f01d067, org.springframework.security.web.context.SecurityContextHolderFilter@2a0ec5b1, org.springframework.security.web.header.HeaderWriterFilter@7127d3ac, org.springframework.security.web.authentication.logout.LogoutFilter@5c0161d3, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3efc8785, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4a4804e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@315d521a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a17673a, org.springframework.security.web.session.SessionManagementFilter@3d64d7cf, org.springframework.security.web.access.ExceptionTranslationFilter@2dce90a5, org.springframework.security.web.access.intercept.AuthorizationFilter@eeb2aa9]
2023-11-29 07:43:37,401 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:43:37,505 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-29 07:43:37,515 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-29 07:43:37,526 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-29 07:43:37,594 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-29 07:43:37,639 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-29 07:43:38,719 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-29 07:43:38,727 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-29 07:43:38,732 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-29 07:43:38,734 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-29 07:43:38,736 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-29 07:43:38,737 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-29 07:43:38,740 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-29 07:43:38,742 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-29 07:43:38,744 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-29 07:43:38,744 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-s-Sk2AqJsXgEk5AnYHt9ng identity=677bb703] started
2023-11-29 07:43:38,744 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-T90FdKydZv3qrw_DGnfxIg identity=4ee7e61a] started
2023-11-29 07:43:38,745 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-33nLp-22ME_AL9dDQFBFvA identity=700973a8] started
2023-11-29 07:43:38,746 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-29 07:43:38,746 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-jmGWfXV_V-45yJNY8-y4pA identity=71b3e1d8] started
2023-11-29 07:43:38,746 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-bCXPUU_KudhZ3VV1tzvdKg identity=38692e4d] started
2023-11-29 07:43:38,748 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-UK5BgXI4Y2NKDdM0UETMZg identity=190e946e] started
2023-11-29 07:43:38,748 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-29 07:43:38,750 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-S8_QL8z8e4RuuS84XjZqSw identity=6bf139ee] started
2023-11-29 07:43:38,750 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-29 07:43:38,751 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-kFJlmzKdwbzgew81su2LQA identity=5ce036c3] started
2023-11-29 07:43:38,752 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-29 07:43:38,752 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-6j4saL2M-pMhG4Ke6tel-Q identity=68f49996] started
2023-11-29 07:43:38,753 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-29 07:43:38,753 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-YgzDsQlNzVgWjmWKw8F7yg identity=4ea6ce69] started
2023-11-29 07:43:38,755 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-29 07:43:38,755 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-QzL8AZ9zmizYBNvfF3r2Zg identity=838213e] started
2023-11-29 07:43:38,757 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-29 07:43:38,757 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-yUpUaZ7kTc7Po2LmrFmpUw identity=7fa9d753] started
2023-11-29 07:43:38,758 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-29 07:43:38,758 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-7aTTAhNsEJuV95G7C9nVWQ identity=3f0caf72] started
2023-11-29 07:43:38,759 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-MZJWB8ZQLX2I-GNj1kgh2Q identity=4e0921e3] started
2023-11-29 07:43:38,760 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-29 07:43:38,761 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-E5obBO45rGu_tL-CHInl_Q identity=667dae6a] started
2023-11-29 07:43:38,761 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-29 07:43:38,763 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-29 07:43:38,765 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-xbzl4I_YIg4z5LpHIlWe4w identity=59007535] started
2023-11-29 07:43:38,765 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-29 07:43:38,765 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-CkPmXWhJy9taR4TWvZFwzQ identity=7d38c31a] started
2023-11-29 07:43:38,766 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-8KiQu5y4PNwkGgDmplJDOQ identity=5cd9874b] started
2023-11-29 07:43:38,768 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-aQ4EaxT_muQ5jxX-fVaXDw identity=72d201a2] started
2023-11-29 07:43:38,769 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-iUJmOt0TsIYVG6HcbSv7Mw identity=ea24e0a] started
2023-11-29 07:43:38,775 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 13.224 seconds (process running for 13.989)
2023-11-29 07:43:38,865 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:43:38,921 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:43:38,935 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:43:38,937 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:43:39,000 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-29 07:43:39,003 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-29 07:43:39,003 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-29 07:43:39,004 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:43:44,037 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-29 07:43:44,037 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-29 07:43:44,039 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-29 07:43:44,053 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-29 07:43:44,063 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-29 07:43:44,073 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-29 07:43:44,134 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-29 07:43:44,260 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:43:44,336 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-29 07:43:44,339 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:43:44,352 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-29 07:43:44,359 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-29 07:43:44,363 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-29 07:43:44,425 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-29 07:43:44,460 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-29 07:43:44,463 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-29 07:43:44,484 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-29 07:43:44,505 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:43:44,533 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-29 07:43:47,039 INFO tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController [XNIO-1 task-2] Send message paymentModel: PaymentModel(paymentId=null, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-29 07:44:17,588 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47s39ms303µs400ns).
