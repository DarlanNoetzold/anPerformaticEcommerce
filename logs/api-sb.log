2023-11-15 08:48:54,052 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 15052 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-15 08:48:54,057 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-15 08:48:54,110 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-15 08:48:54,110 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-15 08:48:55,294 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-15 08:48:55,296 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-15 08:48:55,499 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 196 ms. Found 22 JPA repository interfaces.
2023-11-15 08:48:55,516 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-15 08:48:55,517 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-15 08:48:55,537 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,537 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,537 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,537 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,537 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,537 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,538 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,538 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,538 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,538 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,538 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,538 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,539 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,539 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,539 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,539 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,539 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,540 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,540 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,540 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,540 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,541 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-15 08:48:55,541 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2023-11-15 08:48:56,326 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-15 08:48:56,348 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-15 08:48:56,348 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2237 ms
2023-11-15 08:48:56,853 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-15 08:48:56,853 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-15 08:48:56,854 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-15 08:48:56,862 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-15 08:48:57,039 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@61118f13
2023-11-15 08:48:57,040 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-15 08:48:57,058 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-15 08:48:57,119 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.028s)
2023-11-15 08:48:57,176 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-15 08:48:57,176 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-15 08:48:57,280 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-15 08:48:57,364 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-15 08:48:57,366 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-15 08:48:57,729 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-15 08:48:58,896 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-15 08:48:58,909 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-15 08:48:58,920 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-15 08:48:58,921 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-15 08:48:58,922 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-15 08:48:58,924 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-15 08:48:58,924 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-15 08:48:58,925 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-15 08:48:58,926 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-15 08:48:58,926 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-15 08:48:58,928 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-15 08:48:58,928 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-15 08:48:58,929 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-15 08:48:58,929 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-15 08:48:58,930 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-15 08:48:58,931 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-15 08:48:58,931 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-15 08:48:58,933 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-15 08:48:58,933 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-15 08:48:58,934 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-15 08:48:58,934 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-15 08:48:58,934 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-15 08:48:58,935 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-15 08:48:58,936 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-15 08:48:58,938 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-15 08:48:58,939 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-15 08:48:58,940 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-15 08:48:58,944 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-15 08:48:58,947 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-15 08:48:58,948 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-15 08:48:58,950 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-15 08:48:58,952 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-15 08:48:58,954 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-15 08:48:58,956 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-15 08:48:58,957 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-15 08:48:58,958 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-15 08:48:58,960 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-15 08:48:58,961 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-15 08:48:58,962 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-15 08:48:58,964 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-15 08:48:58,965 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-15 08:48:58,966 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-15 08:48:58,967 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-15 08:48:58,968 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-15 08:48:58,971 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-15 08:48:58,973 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-15 08:48:58,975 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-15 08:48:58,977 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-15 08:48:58,978 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-15 08:48:58,979 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-15 08:48:58,982 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-15 08:48:58,986 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-15 08:48:58,987 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-15 08:48:58,992 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-15 08:48:59,001 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-15 08:48:59,005 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-15 08:48:59,018 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-15 08:48:59,025 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-15 08:48:59,029 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-15 08:48:59,034 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-15 08:48:59,040 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-15 08:48:59,043 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-15 08:48:59,046 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-15 08:48:59,048 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-15 08:48:59,050 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-15 08:48:59,054 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-15 08:48:59,056 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-15 08:48:59,061 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-15 08:48:59,063 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-15 08:48:59,066 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-15 08:48:59,070 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-15 08:48:59,072 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-15 08:48:59,075 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-15 08:48:59,081 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-15 08:48:59,086 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-15 08:48:59,090 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-15 08:48:59,094 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-15 08:48:59,098 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-15 08:48:59,102 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-15 08:48:59,107 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-15 08:48:59,113 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-15 08:48:59,118 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-15 08:48:59,121 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-15 08:48:59,126 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-15 08:48:59,128 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-15 08:48:59,130 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-15 08:48:59,131 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-15 08:48:59,133 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-15 08:48:59,135 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-15 08:48:59,137 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-15 08:48:59,140 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-15 08:48:59,141 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-15 08:48:59,143 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-15 08:48:59,145 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-15 08:48:59,146 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-15 08:48:59,147 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-15 08:48:59,149 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-15 08:48:59,150 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-15 08:48:59,151 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-15 08:48:59,153 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-15 08:48:59,155 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-15 08:48:59,157 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-15 08:48:59,159 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-15 08:48:59,161 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-15 08:48:59,163 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-15 08:48:59,166 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-15 08:48:59,263 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-15 08:48:59,523 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-15 08:49:00,549 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-15 08:49:00,599 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#1ccb6de5:0/SimpleConnection@144df809 [delegate=amqp://guest@127.0.0.1:5672/, localPort=52038]
2023-11-15 08:49:00,896 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-15 08:49:01,580 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-15 08:49:01,622 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@54dd7303, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1dc45ba3, org.springframework.security.web.context.SecurityContextHolderFilter@2ea19ec, org.springframework.security.web.header.HeaderWriterFilter@6c80a87b, org.springframework.security.web.authentication.logout.LogoutFilter@4cd374bd, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@29757978, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@82efa6f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19b3c818, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65f79732, org.springframework.security.web.session.SessionManagementFilter@3b92f56f, org.springframework.security.web.access.ExceptionTranslationFilter@4355adb9, org.springframework.security.web.access.intercept.AuthorizationFilter@78862ad9]
2023-11-15 08:49:01,987 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-15 08:49:02,069 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-15 08:49:02,077 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-15 08:49:02,086 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-15 08:49:02,155 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-15 08:49:02,201 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-15 08:49:02,208 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-15 08:49:02,210 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-15 08:49:02,212 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-15 08:49:02,213 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-15 08:49:02,215 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-15 08:49:02,216 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-15 08:49:02,217 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-LEqTc_wfpqAvxYLxIxgCCQ identity=401bced8] started
2023-11-15 08:49:02,217 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-xPl-K18U6IUyoJzhWYfpag identity=58e94836] started
2023-11-15 08:49:02,217 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-rNtrGe_AgEpH2gVNdquQqg identity=2f8116d3] started
2023-11-15 08:49:02,218 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-upKmrQyydfdXPEmu1uclcw identity=49f762a3] started
2023-11-15 08:49:02,218 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-15 08:49:02,219 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-Re1IWoUrwRFP2eyWK9RKTA identity=1a0c5224] started
2023-11-15 08:49:02,221 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-15 08:49:02,221 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-G3ieYOKYuSR2AnY2rpvtJQ identity=7f3dd1a0] started
2023-11-15 08:49:02,222 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-15 08:49:02,223 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-rZhUVZEyoscfmJV02uQFJQ identity=5c09df86] started
2023-11-15 08:49:02,224 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-15 08:49:02,225 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-KvE8OlSa2KSwEl62bn0e1Q identity=143a0cd0] started
2023-11-15 08:49:02,225 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-15 08:49:02,226 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-Czbiqzc2ztAP-bXeWqBZlA identity=31b6a506] started
2023-11-15 08:49:02,226 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-15 08:49:02,227 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-15 08:49:02,228 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-VxTxoj_q0xdGOOeN7xFmAw identity=6b0277da] started
2023-11-15 08:49:02,229 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-15 08:49:02,229 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-jPB49VsL9kLvo5G7yeWUBg identity=185ef523] started
2023-11-15 08:49:02,230 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-15 08:49:02,231 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-358OX_9p11nItkcykuQhXg identity=6c6da0cc] started
2023-11-15 08:49:02,232 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-15 08:49:02,233 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-FWHyXDpUyBY1l2aVJ3BYbA identity=7daf057e] started
2023-11-15 08:49:02,234 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-15 08:49:02,235 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-ZxlshujYou1Ftiub5SN4_Q identity=f474140] started
2023-11-15 08:49:02,237 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-DyLkG_wmltX_rV1x41EjQg identity=472dba08] started
2023-11-15 08:49:02,237 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-15 08:49:02,240 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-JfQ9df83Q0lj6YfVXb9-aQ identity=6a69a5a8] started
2023-11-15 08:49:02,241 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-Jt-NeTUd2HHFVzxDPEFKTA identity=c9521ac] started
2023-11-15 08:49:02,241 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-15 08:49:02,243 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-08aSibE0hjKH8HIDrVPzeA identity=4397f19a] started
2023-11-15 08:49:02,243 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-15 08:49:02,245 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-VPAFIhK6bvVtwV9nrmSFXQ identity=1618289a] started
2023-11-15 08:49:02,247 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-lvpdb2TIJ_DwlbG7XVl1UA identity=7e97a11b] started
2023-11-15 08:49:02,254 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.473 seconds (process running for 9.178)
2023-11-15 08:49:02,337 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-15 08:49:02,360 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-15 08:49:02,402 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-15 08:49:02,404 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-15 08:49:02,467 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-15 08:49:02,469 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-15 08:49:02,471 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-15 08:49:02,472 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
