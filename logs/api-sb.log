2023-11-17 18:57:05,974 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 24792 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 18:57:05,979 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 18:57:06,050 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 18:57:06,050 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 18:57:07,333 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 18:57:07,335 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 18:57:07,543 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 200 ms. Found 22 JPA repository interfaces.
2023-11-17 18:57:07,559 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 18:57:07,560 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 18:57:07,578 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,578 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,579 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,580 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,581 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,583 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 18:57:07,583 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-17 18:57:08,383 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 18:57:08,403 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 18:57:08,403 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2352 ms
2023-11-17 18:57:08,886 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 18:57:08,886 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 18:57:08,886 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 18:57:08,893 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 18:57:09,059 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e18bc5f
2023-11-17 18:57:09,060 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 18:57:09,074 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 18:57:09,107 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-17 18:57:09,167 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 18:57:09,168 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 18:57:09,253 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 18:57:09,331 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 18:57:09,335 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 18:57:09,621 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 18:57:10,872 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 18:57:10,884 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 18:57:10,889 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 18:57:10,890 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 18:57:10,890 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 18:57:10,891 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 18:57:10,891 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 18:57:10,892 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 18:57:10,892 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 18:57:10,893 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 18:57:10,893 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 18:57:10,894 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 18:57:10,894 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 18:57:10,895 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 18:57:10,895 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 18:57:10,895 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 18:57:10,896 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 18:57:10,896 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 18:57:10,897 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 18:57:10,897 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 18:57:10,898 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 18:57:10,899 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 18:57:10,899 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 18:57:10,900 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 18:57:10,900 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 18:57:10,901 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 18:57:10,901 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 18:57:10,905 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 18:57:10,907 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 18:57:10,909 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 18:57:10,912 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 18:57:10,914 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 18:57:10,916 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 18:57:10,918 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 18:57:10,919 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 18:57:10,920 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 18:57:10,922 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 18:57:10,923 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 18:57:10,926 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 18:57:10,928 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 18:57:10,929 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 18:57:10,931 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 18:57:10,933 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 18:57:10,934 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 18:57:10,937 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 18:57:10,939 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 18:57:10,941 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 18:57:10,944 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 18:57:10,946 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 18:57:10,948 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 18:57:10,950 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 18:57:10,952 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 18:57:10,953 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 18:57:10,958 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 18:57:10,962 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 18:57:10,968 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 18:57:10,975 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 18:57:10,978 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 18:57:10,982 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 18:57:10,988 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 18:57:10,993 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 18:57:10,997 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 18:57:11,001 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 18:57:11,004 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 18:57:11,007 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 18:57:11,011 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 18:57:11,014 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 18:57:11,019 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 18:57:11,021 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 18:57:11,023 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 18:57:11,025 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 18:57:11,028 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 18:57:11,032 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 18:57:11,036 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 18:57:11,039 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 18:57:11,043 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 18:57:11,047 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 18:57:11,051 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 18:57:11,053 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 18:57:11,057 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 18:57:11,065 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 18:57:11,067 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 18:57:11,069 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 18:57:11,070 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 18:57:11,071 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 18:57:11,072 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 18:57:11,073 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 18:57:11,074 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 18:57:11,075 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 18:57:11,076 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 18:57:11,077 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 18:57:11,078 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 18:57:11,079 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 18:57:11,079 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 18:57:11,081 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 18:57:11,081 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 18:57:11,083 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 18:57:11,084 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 18:57:11,085 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 18:57:11,086 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 18:57:11,087 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 18:57:11,089 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 18:57:11,091 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 18:57:11,093 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 18:57:11,093 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 18:57:11,098 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 18:57:11,218 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 18:57:11,455 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 18:57:12,587 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 18:57:12,645 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#24c97c25:0/SimpleConnection@7df07409 [delegate=amqp://guest@127.0.0.1:5672/, localPort=56484]
2023-11-17 18:57:12,984 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 18:57:13,710 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 18:57:13,769 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@f2eecad, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45646ff6, org.springframework.security.web.context.SecurityContextHolderFilter@6ed915c6, org.springframework.security.web.header.HeaderWriterFilter@4355adb9, org.springframework.security.web.authentication.logout.LogoutFilter@16fafc61, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3e8a0154, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ea19ec, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@82efa6f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54dd7303, org.springframework.security.web.session.SessionManagementFilter@79add693, org.springframework.security.web.access.ExceptionTranslationFilter@247fcd4f, org.springframework.security.web.access.intercept.AuthorizationFilter@6595e2bc]
2023-11-17 18:57:14,247 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 18:57:14,353 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 18:57:14,363 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 18:57:14,374 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 18:57:14,451 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 18:57:14,499 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 18:57:14,506 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 18:57:14,508 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 18:57:14,509 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 18:57:14,511 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 18:57:14,512 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 18:57:14,514 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 18:57:14,517 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 18:57:14,518 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-cWm99t636qamGk33OISECQ identity=5a018ab7] started
2023-11-17 18:57:14,518 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-Vvzzy4CRXmlAzH5EcjY6OQ identity=6e039559] started
2023-11-17 18:57:14,518 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-QrckwIacGkNArhgUsCKfUw identity=1dc292b5] started
2023-11-17 18:57:14,519 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-VKb6gDtf8U8XZtVHHiuhJQ identity=7e00f18d] started
2023-11-17 18:57:14,520 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-wwoGTlCZe-IYz6JebcOvlg identity=5c9edc4d] started
2023-11-17 18:57:14,520 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 18:57:14,520 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-qXmixaYE0_lkxHLUTSPelQ identity=1fc29e61] started
2023-11-17 18:57:14,522 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 18:57:14,522 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-eO0XA91W_kPPzPnUnnR65w identity=742f6a85] started
2023-11-17 18:57:14,524 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 18:57:14,524 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-IdvC9I7hzOh9XL_HINxQXg identity=2fd3345d] started
2023-11-17 18:57:14,525 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 18:57:14,526 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-Bpej-JhFV9BhVcJJKg9Gkg identity=35b6e158] started
2023-11-17 18:57:14,527 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 18:57:14,529 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-tdQFZ9Lr9-EzafZNw5nD3g identity=103cb480] started
2023-11-17 18:57:14,529 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 18:57:14,530 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 18:57:14,530 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-USWfMx-tmO3q8CSFyIsZKw identity=7cbc463a] started
2023-11-17 18:57:14,531 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 18:57:14,533 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-o1F0_aUM17swd6pw0SkkmA identity=7d113163] started
2023-11-17 18:57:14,534 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 18:57:14,535 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-eXW2j1bRWvs4MGtFZpIAZg identity=4c2183b4] started
2023-11-17 18:57:14,536 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-GR8fxld2-mFZXOzXIjFX_g identity=1b9f710c] started
2023-11-17 18:57:14,536 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 18:57:14,537 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-ZAFGdrlg8-frOjoRd-OqcQ identity=7cca3483] started
2023-11-17 18:57:14,539 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 18:57:14,540 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-TuOchozvYKTnYo4lIVol5w identity=3bb164f6] started
2023-11-17 18:57:14,540 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 18:57:14,541 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-1K8wiXAnIGm6aUiXlKAp2A identity=1ec74ae4] started
2023-11-17 18:57:14,543 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 18:57:14,543 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-LPAhqXdLltU0h1QiOjEgUQ identity=616370fe] started
2023-11-17 18:57:14,546 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-HoyMcHf_dqwAcVrp11LdXw identity=126ea251] started
2023-11-17 18:57:14,549 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-eyNbRlKdoj_bMevnM8BKBA identity=3e5c5ee8] started
2023-11-17 18:57:14,555 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.887 seconds (process running for 9.623)
2023-11-17 18:57:14,641 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 18:57:14,675 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 18:57:14,733 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 18:57:14,735 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 18:57:14,800 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 18:57:14,801 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 18:57:14,804 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 18:57:14,805 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:09:29,120 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 7084 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 19:09:29,121 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 19:09:29,173 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 19:09:29,173 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 19:09:30,294 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:09:30,295 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 19:09:30,478 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 177 ms. Found 22 JPA repository interfaces.
2023-11-17 19:09:30,490 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:09:30,490 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,505 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,506 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,507 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,508 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,509 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,509 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,510 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:09:30,510 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-17 19:09:31,368 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 19:09:31,386 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 19:09:31,386 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2212 ms
2023-11-17 19:09:31,858 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 19:09:31,858 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 19:09:31,858 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 19:09:31,865 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 19:09:32,041 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d4cd2c8
2023-11-17 19:09:32,042 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 19:09:32,055 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 19:09:32,089 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-17 19:09:32,139 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 19:09:32,139 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 19:09:32,217 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 19:09:32,264 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 19:09:32,267 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 19:09:32,549 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 19:09:33,805 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 19:09:33,815 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 19:09:33,817 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 19:09:33,818 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 19:09:33,819 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 19:09:33,819 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 19:09:33,820 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 19:09:33,820 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 19:09:33,821 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 19:09:33,821 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 19:09:33,823 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 19:09:33,823 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 19:09:33,824 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 19:09:33,824 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 19:09:33,825 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 19:09:33,825 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 19:09:33,826 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 19:09:33,826 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 19:09:33,827 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 19:09:33,828 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 19:09:33,828 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 19:09:33,829 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 19:09:33,830 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 19:09:33,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 19:09:33,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 19:09:33,831 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 19:09:33,832 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 19:09:33,836 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 19:09:33,837 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 19:09:33,839 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 19:09:33,841 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 19:09:33,844 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 19:09:33,845 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 19:09:33,846 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 19:09:33,848 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 19:09:33,849 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 19:09:33,850 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 19:09:33,851 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 19:09:33,852 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 19:09:33,853 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 19:09:33,854 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 19:09:33,855 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 19:09:33,857 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 19:09:33,859 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 19:09:33,861 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 19:09:33,863 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 19:09:33,865 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 19:09:33,866 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 19:09:33,868 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 19:09:33,870 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 19:09:33,871 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 19:09:33,874 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 19:09:33,875 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 19:09:33,880 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 19:09:33,882 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 19:09:33,887 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 19:09:33,893 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 19:09:33,898 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 19:09:33,904 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 19:09:33,909 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 19:09:33,914 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 19:09:33,917 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 19:09:33,922 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 19:09:33,926 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 19:09:33,928 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 19:09:33,932 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 19:09:33,934 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 19:09:33,938 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 19:09:33,941 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 19:09:33,945 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 19:09:33,948 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 19:09:33,950 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 19:09:33,953 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 19:09:33,957 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 19:09:33,961 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 19:09:33,966 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 19:09:33,971 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 19:09:33,975 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 19:09:33,979 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 19:09:33,989 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 19:09:33,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 19:09:33,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 19:09:34,000 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 19:09:34,001 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 19:09:34,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 19:09:34,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 19:09:34,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 19:09:34,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 19:09:34,006 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 19:09:34,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 19:09:34,008 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 19:09:34,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 19:09:34,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 19:09:34,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 19:09:34,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 19:09:34,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 19:09:34,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 19:09:34,014 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 19:09:34,014 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 19:09:34,015 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 19:09:34,016 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 19:09:34,018 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 19:09:34,019 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 19:09:34,021 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 19:09:34,023 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 19:09:34,028 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 19:09:34,145 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 19:09:34,369 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 19:09:35,405 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 19:09:35,443 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#2019d6bd:0/SimpleConnection@33489eb3 [delegate=amqp://guest@127.0.0.1:5672/, localPort=57250]
2023-11-17 19:09:35,736 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 19:09:36,422 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 19:09:36,471 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6595e2bc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@698f04f5, org.springframework.security.web.context.SecurityContextHolderFilter@79add693, org.springframework.security.web.header.HeaderWriterFilter@1c0d2c5f, org.springframework.security.web.authentication.logout.LogoutFilter@4d14f786, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3144a99a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3b92f56f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79574fc0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78862ad9, org.springframework.security.web.session.SessionManagementFilter@4ea1d22, org.springframework.security.web.access.ExceptionTranslationFilter@7a823a6d, org.springframework.security.web.access.intercept.AuthorizationFilter@3a36c407]
2023-11-17 19:09:36,836 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 19:09:36,916 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 19:09:36,923 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 19:09:36,928 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 19:09:36,985 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 19:09:37,030 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 19:09:37,036 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 19:09:37,039 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 19:09:37,041 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 19:09:37,043 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 19:09:37,045 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-pidMPM6hcQW162ngDEAUrA identity=3682c2d6] started
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-YU2aIOl8tilCc36SG8yGqg identity=68465ace] started
2023-11-17 19:09:37,048 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-ErB7XS2bGdGHjH9ht2vVEQ identity=63a3d388] started
2023-11-17 19:09:37,049 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-D9lnovMSOKViEpmFcTbd8w identity=14a2877f] started
2023-11-17 19:09:37,050 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 19:09:37,051 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-3PvThgRZkrCjO2VB8XqhOw identity=7924cfbd] started
2023-11-17 19:09:37,052 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 19:09:37,053 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-oPJExLNFbBKEDb7-d83I8Q identity=7c1ae520] started
2023-11-17 19:09:37,054 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 19:09:37,054 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-44x055FT8P2qbHfKbVZIig identity=7edb0a8b] started
2023-11-17 19:09:37,056 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 19:09:37,057 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-NoG-daWSEk5aOvEYU3XgLA identity=daeeb7f] started
2023-11-17 19:09:37,059 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 19:09:37,059 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-JzhgLACZ_krzbXp9Xs2r8w identity=2eca2100] started
2023-11-17 19:09:37,061 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-X-AUW9bYxwtjbz8n7E497Q identity=61a883dd] started
2023-11-17 19:09:37,062 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 19:09:37,063 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-hAqX84sjCuAisM6ZUvHpug identity=20d9490e] started
2023-11-17 19:09:37,063 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 19:09:37,066 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 19:09:37,066 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-se305RZ8WVliJi9h6l5wZA identity=361d0646] started
2023-11-17 19:09:37,068 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-nY6nksqM_XiMBswC8UAf9w identity=1dc292b5] started
2023-11-17 19:09:37,069 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 19:09:37,073 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 19:09:37,073 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-wWheu-hABs1qFtPdquCTIA identity=6483b22c] started
2023-11-17 19:09:37,076 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 19:09:37,076 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-8UxUIZrFjuXUpa02HPAdMA identity=5a018ab7] started
2023-11-17 19:09:37,078 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 19:09:37,079 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-y9xpJcs9bgrvhQFHVANG2w identity=64d882b7] started
2023-11-17 19:09:37,081 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 19:09:37,082 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-wQyHfGGAnhv4u918zgrmmA identity=5c9edc4d] started
2023-11-17 19:09:37,083 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-pISQT_O3SFAg7lywMmxT6Q identity=55945293] started
2023-11-17 19:09:37,083 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 19:09:37,085 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-YpI55AI-BKgGW9GhAyr4Hg identity=1d0237d1] started
2023-11-17 19:09:37,087 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-4ErWfF22aOQWWDdQ0YwlVA identity=692bbc0b] started
2023-11-17 19:09:37,096 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 8.308 seconds (process running for 8.986)
2023-11-17 19:09:37,181 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:09:37,212 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:09:37,262 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:09:37,264 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:09:37,328 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:09:37,329 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:09:37,332 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:09:37,332 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:17:31,125 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 19:17:31,125 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 19:17:31,127 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-17 19:17:31,347 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:31,423 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:31,436 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:17:31,444 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:17:31,447 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:17:31,542 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:31,544 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:17:31,628 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 19:17:31,637 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-11] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 19:17:35,527 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:35,589 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:35,591 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:17:35,594 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:17:35,595 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:17:35,621 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:17:35,623 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:17:35,638 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/catalog/attribute/id
jakarta.servlet.ServletException: Request processing failed: java.lang.IllegalArgumentException: Invalid UUID string: id
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:550)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid UUID string: id
	at java.base/java.util.UUID.fromString1(UUID.java:280)
	at java.base/java.util.UUID.fromString(UUID.java:258)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController.update(AttributeModelController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController$$SpringCGLIB$$0.update(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
2023-11-17 19:17:35,643 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: java.lang.IllegalArgumentException: Invalid UUID string: id. Generating error page resulted in a 403.
2023-11-17 19:18:55,785 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,785 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,785 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,787 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,788 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,790 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,791 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,793 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,794 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,796 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,797 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,799 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,800 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,801 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,802 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,804 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,805 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,806 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,807 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,809 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-17 19:18:55,810 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-17 19:18:55,812 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-17 19:18:55,824 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 19:18:55,827 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-17 19:18:55,828 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-17 19:18:58,243 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 10796 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-17 19:18:58,245 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-17 19:18:58,313 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-17 19:18:58,313 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-17 19:18:59,538 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:18:59,539 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-17 19:18:59,752 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 205 ms. Found 22 JPA repository interfaces.
2023-11-17 19:18:59,770 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-17 19:18:59,771 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-17 19:18:59,793 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-17 19:18:59,798 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-11-17 19:19:00,711 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-17 19:19:00,742 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-17 19:19:00,743 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2429 ms
2023-11-17 19:19:01,284 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-17 19:19:01,284 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-17 19:19:01,284 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-17 19:19:01,293 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-17 19:19:01,504 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6273954e
2023-11-17 19:19:01,510 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-17 19:19:01,530 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-17 19:19:01,573 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.023s)
2023-11-17 19:19:01,635 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-17 19:19:01,636 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-17 19:19:01,735 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-17 19:19:01,789 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-17 19:19:01,791 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-17 19:19:02,078 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-17 19:19:03,487 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-17 19:19:03,504 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-17 19:19:03,507 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-17 19:19:03,507 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-17 19:19:03,508 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-17 19:19:03,509 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-17 19:19:03,509 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-17 19:19:03,510 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-17 19:19:03,511 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-17 19:19:03,511 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-17 19:19:03,512 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-17 19:19:03,513 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-17 19:19:03,513 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-17 19:19:03,514 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-17 19:19:03,515 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-17 19:19:03,515 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-17 19:19:03,516 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-17 19:19:03,517 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-17 19:19:03,517 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-17 19:19:03,518 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-17 19:19:03,519 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-17 19:19:03,519 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-17 19:19:03,520 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-17 19:19:03,520 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-17 19:19:03,521 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-17 19:19:03,521 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-17 19:19:03,522 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-17 19:19:03,525 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-17 19:19:03,528 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-17 19:19:03,530 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-17 19:19:03,534 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-17 19:19:03,536 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-17 19:19:03,538 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-17 19:19:03,539 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-17 19:19:03,541 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-17 19:19:03,542 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-17 19:19:03,544 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-17 19:19:03,546 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-17 19:19:03,548 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-17 19:19:03,550 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-17 19:19:03,552 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-17 19:19:03,554 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-17 19:19:03,555 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-17 19:19:03,557 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-17 19:19:03,559 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-17 19:19:03,561 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-17 19:19:03,562 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-17 19:19:03,565 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-17 19:19:03,568 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-17 19:19:03,570 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-17 19:19:03,573 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-17 19:19:03,576 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-17 19:19:03,578 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-17 19:19:03,586 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-17 19:19:03,589 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-17 19:19:03,593 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-17 19:19:03,601 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-17 19:19:03,607 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-17 19:19:03,613 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-17 19:19:03,620 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-17 19:19:03,625 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-17 19:19:03,629 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-17 19:19:03,635 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-17 19:19:03,639 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-17 19:19:03,643 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-17 19:19:03,648 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-17 19:19:03,652 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-17 19:19:03,659 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-17 19:19:03,664 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-17 19:19:03,669 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-17 19:19:03,672 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-17 19:19:03,676 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-17 19:19:03,680 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-17 19:19:03,687 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-17 19:19:03,693 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-17 19:19:03,698 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-17 19:19:03,704 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-17 19:19:03,710 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-17 19:19:03,716 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-17 19:19:03,723 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-17 19:19:03,731 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-17 19:19:03,736 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-17 19:19:03,739 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-17 19:19:03,741 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-17 19:19:03,745 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-17 19:19:03,747 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-17 19:19:03,749 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-17 19:19:03,752 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-17 19:19:03,754 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-17 19:19:03,755 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-17 19:19:03,757 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-17 19:19:03,758 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-17 19:19:03,760 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-17 19:19:03,761 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-17 19:19:03,763 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-17 19:19:03,765 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-17 19:19:03,767 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-17 19:19:03,768 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-17 19:19:03,769 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-17 19:19:03,770 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-17 19:19:03,772 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-17 19:19:03,773 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-17 19:19:03,775 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-17 19:19:03,777 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-17 19:19:03,778 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-17 19:19:03,784 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-17 19:19:03,891 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-17 19:19:04,212 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-17 19:19:05,408 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-17 19:19:05,467 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#5a455d88:0/SimpleConnection@ed3f222 [delegate=amqp://guest@127.0.0.1:5672/, localPort=57772]
2023-11-17 19:19:05,920 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-17 19:19:06,635 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 14 endpoint(s) beneath base path '/actuator'
2023-11-17 19:19:06,698 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48697fcc, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1673e6ca, org.springframework.security.web.context.SecurityContextHolderFilter@5b9efb61, org.springframework.security.web.header.HeaderWriterFilter@2ca76ad5, org.springframework.security.web.authentication.logout.LogoutFilter@1fb499c0, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@12951b4d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cc0b570, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24d6db5a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7bed8d1e, org.springframework.security.web.session.SessionManagementFilter@50e20a35, org.springframework.security.web.access.ExceptionTranslationFilter@7409c5ab, org.springframework.security.web.access.intercept.AuthorizationFilter@4ba2bccf]
2023-11-17 19:19:07,115 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-17 19:19:07,205 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-17 19:19:07,215 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-17 19:19:07,227 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-17 19:19:07,312 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-17 19:19:07,362 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-17 19:19:07,371 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-17 19:19:07,374 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-17 19:19:07,376 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-17 19:19:07,377 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-17 19:19:07,379 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-17 19:19:07,381 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-17 19:19:07,383 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-17 19:19:07,385 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-17 19:19:07,386 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-DxBeWDsDPsTU1h8lh3dR7Q identity=b00889b] started
2023-11-17 19:19:07,386 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-HPuDwrZja2MNUHnnxKHXtg identity=7c4c71cd] started
2023-11-17 19:19:07,386 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-jzD4f5x_lEjmWR7DcZWLXg identity=2edea723] started
2023-11-17 19:19:07,387 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-17 19:19:07,389 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag--BCXzFJnoSciClYexOg2YA identity=5e467a82] started
2023-11-17 19:19:07,389 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-17 19:19:07,390 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-jEyJYygXRqp8uWK5vIappw identity=5db59482] started
2023-11-17 19:19:07,392 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-17 19:19:07,393 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-eel3vNcMi_qx7IJe6fAQ5A identity=7f93248] started
2023-11-17 19:19:07,393 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-RC_P6tAnrz_OaNAqq_JGIA identity=30e82113] started
2023-11-17 19:19:07,394 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-817CzFt8V4H2DsZZehZrcQ identity=dc00038] started
2023-11-17 19:19:07,394 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-LExKNwH2T-AX46v8JjP-bQ identity=54b3bab6] started
2023-11-17 19:19:07,395 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-17 19:19:07,396 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-QnZxfi-LjCaupy6CdU6rgg identity=586d6412] started
2023-11-17 19:19:07,397 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-17 19:19:07,399 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-2cP3kCyZLeTczdW_zpYuqg identity=15108fe1] started
2023-11-17 19:19:07,401 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-17 19:19:07,403 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-acrHaz7WlEDfIL1z7pYm5A identity=6bfadaf1] started
2023-11-17 19:19:07,403 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-17 19:19:07,404 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-v0huoGQ_Q16d1KH8jDaZWw identity=70aa338] started
2023-11-17 19:19:07,405 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-17 19:19:07,407 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-17 19:19:07,407 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-A38i9lB1vzfmI0gGxQRplw identity=8459041] started
2023-11-17 19:19:07,409 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-17 19:19:07,409 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-oAQsHDdfIEm6KzmRiGzrmA identity=4191dbd7] started
2023-11-17 19:19:07,412 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-cMIL-Ahn-s9lnJzK7fVatQ identity=7c012bd2] started
2023-11-17 19:19:07,412 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-g3GvjJIz0DFhzWBRZ3dstA identity=1fc934e9] started
2023-11-17 19:19:07,412 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-17 19:19:07,414 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-17 19:19:07,416 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-HX-ouzNvVJR9YOnrVirnPg identity=1643e8a1] started
2023-11-17 19:19:07,419 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-Z6tqal8qN0UNFjakE5hADQ identity=3f6844d3] started
2023-11-17 19:19:07,421 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-P7wfwsbejbTG-yOZduXCig identity=7a697390] started
2023-11-17 19:19:07,430 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 9.485 seconds (process running for 10.469)
2023-11-17 19:19:07,535 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:19:07,566 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:19:07,622 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:19:07,623 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:19:07,705 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-17 19:19:07,706 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-17 19:19:07,709 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-17 19:19:07,710 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:20:08,672 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-17 19:20:08,672 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-17 19:20:08,675 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-17 19:20:08,909 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:08,990 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:09,005 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:20:09,015 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:20:09,019 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:20:09,115 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:09,120 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:20:09,191 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/catalog/attribute/id
jakarta.servlet.ServletException: Request processing failed: java.lang.IllegalArgumentException: Invalid UUID string: id
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:550)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid UUID string: id
	at java.base/java.util.UUID.fromString1(UUID.java:280)
	at java.base/java.util.UUID.fromString(UUID.java:258)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController.update(AttributeModelController.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController$$SpringCGLIB$$0.update(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
2023-11-17 19:20:09,202 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: java.lang.IllegalArgumentException: Invalid UUID string: id. Generating error page resulted in a 403.
2023-11-17 19:20:36,930 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:36,993 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:36,997 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 19:20:36,998 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 19:20:37,000 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 19:20:37,030 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 19:20:37,033 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 19:20:37,055 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.AttributeModelController [XNIO-1 task-2] Send message attributeModel: AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
2023-11-17 19:22:05,506 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m33s859ms869µs900ns).
2023-11-17 19:22:05,509 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer [pool-3-thread-11] Error to consume cerate message for attributeModel - AttributeModel(attributeId=null, name=Color, description=Product color attribute, type=Dropdown, imageUrl=https://example.com/color-image.jpg, hexCode=#FF5733, internalName=color_attribute, priority=1, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.AttributeModelService.saveAttributeModel(tech.noetzold.anPerformaticEcommerce.model.catalog.AttributeModel)" because "this.attributeModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.AttributeModelConsumer.consumerAttributeModel(AttributeModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-17 20:08:19,067 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:08:19,137 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:08:19,141 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:08:19,145 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:08:19,149 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:08:19,167 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:08:19,170 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:09:14,667 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:09:14,731 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:09:14,733 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:09:14,735 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:09:14,738 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:09:14,784 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:09:14,785 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:09:14,798 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/catalog/media/id
jakarta.servlet.ServletException: Request processing failed: java.lang.IllegalArgumentException: Invalid UUID string: id
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid UUID string: id
	at java.base/java.util.UUID.fromString1(UUID.java:280)
	at java.base/java.util.UUID.fromString(UUID.java:258)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.MediaModelController.getMediaModelById(MediaModelController.java:46)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:199)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.controller.catalog.MediaModelController$$SpringCGLIB$$0.getMediaModelById(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
2023-11-17 20:09:14,801 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: java.lang.IllegalArgumentException: Invalid UUID string: id. Generating error page resulted in a 403.
2023-11-17 20:10:03,880 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:10:03,940 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:10:03,944 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:10:03,945 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:10:03,947 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:10:03,991 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:10:03,993 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:14:31,070 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:14:31,136 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:14:31,140 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:14:31,143 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:14:31,145 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:14:31,186 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:14:31,188 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:16:26,540 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:16:26,604 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:16:26,607 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-17 20:16:26,609 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-17 20:16:26,611 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-17 20:16:26,657 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-17 20:16:26,659 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-17 20:16:26,676 INFO tech.noetzold.anPerformaticEcommerce.controller.catalog.MediaModelController [XNIO-1 task-2] Send message mediaModel: MediaModel(mediaId=null, thumbnailImageURL=https://example.com/thumbnail.jpg, smallImageUrl=https://example.com/small.jpg, mediumImageUrl=https://example.com/medium.jpg, largeImageUrl=https://example.com/large.jpg, zoomImageUrl=https://example.com/zoom.jpg, integrated=null, integratedDate=null, sku=null)
2023-11-17 20:16:26,676 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.MediaModelConsumer [pool-3-thread-12] Error to consume cerate message for mediaModel - MediaModel(mediaId=null, thumbnailImageURL=https://example.com/thumbnail.jpg, smallImageUrl=https://example.com/small.jpg, mediumImageUrl=https://example.com/medium.jpg, largeImageUrl=https://example.com/large.jpg, zoomImageUrl=https://example.com/zoom.jpg, integrated=null, integratedDate=null, sku=null)
java.lang.NullPointerException: Cannot invoke "tech.noetzold.anPerformaticEcommerce.service.catalog.MediaModelService.saveMediaModel(tech.noetzold.anPerformaticEcommerce.model.catalog.MediaModel)" because "this.mediaModelService" is null
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.MediaModelConsumer.consumerMediaModel(MediaModelConsumer.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
