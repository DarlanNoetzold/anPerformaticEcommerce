2023-11-28 07:23:46,538 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 21760 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 07:23:46,546 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 07:23:46,611 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 07:23:46,612 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 07:23:47,915 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 07:23:47,917 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 07:23:48,242 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 316 ms. Found 22 JPA repository interfaces.
2023-11-28 07:23:48,259 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 07:23:48,261 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 07:23:48,283 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,285 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,286 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,286 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,286 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,286 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,286 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,287 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,287 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,287 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,288 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,288 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,288 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,288 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,288 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,288 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,289 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:23:48,289 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-11-28 07:23:48,602 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=c12ac9e2-b42c-3d24-a919-8e7894acdd57
2023-11-28 07:23:49,356 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 07:23:49,387 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 07:23:49,387 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2775 ms
2023-11-28 07:23:49,877 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 07:23:49,877 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 07:23:49,877 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 07:23:49,887 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 07:23:50,067 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e612974
2023-11-28 07:23:50,069 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 07:23:50,087 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 07:23:50,132 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.024s)
2023-11-28 07:23:50,175 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 07:23:50,175 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 07:23:50,275 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 07:23:50,340 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 07:23:50,343 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 07:23:50,678 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 07:23:52,225 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 07:23:52,243 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 07:23:52,248 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 07:23:52,249 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 07:23:52,250 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 07:23:52,251 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 07:23:52,251 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 07:23:52,252 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 07:23:52,252 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 07:23:52,253 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 07:23:52,254 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 07:23:52,254 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 07:23:52,255 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 07:23:52,256 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 07:23:52,256 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 07:23:52,257 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 07:23:52,257 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 07:23:52,258 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 07:23:52,259 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 07:23:52,259 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 07:23:52,260 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 07:23:52,261 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 07:23:52,261 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 07:23:52,262 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 07:23:52,263 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 07:23:52,263 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 07:23:52,264 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 07:23:52,271 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 07:23:52,275 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 07:23:52,278 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 07:23:52,283 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 07:23:52,286 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 07:23:52,289 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 07:23:52,291 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 07:23:52,294 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 07:23:52,295 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 07:23:52,299 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 07:23:52,302 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 07:23:52,306 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 07:23:52,309 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 07:23:52,312 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 07:23:52,314 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 07:23:52,317 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 07:23:52,319 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 07:23:52,322 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 07:23:52,325 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 07:23:52,328 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 07:23:52,332 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 07:23:52,336 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 07:23:52,338 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 07:23:52,342 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 07:23:52,348 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 07:23:52,350 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 07:23:52,357 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 07:23:52,362 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 07:23:52,369 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 07:23:52,377 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 07:23:52,382 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 07:23:52,388 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 07:23:52,393 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 07:23:52,399 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 07:23:52,403 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 07:23:52,407 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 07:23:52,410 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 07:23:52,413 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 07:23:52,418 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 07:23:52,422 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 07:23:52,427 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 07:23:52,429 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 07:23:52,432 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 07:23:52,434 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 07:23:52,437 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 07:23:52,439 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 07:23:52,443 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 07:23:52,447 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 07:23:52,453 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 07:23:52,458 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 07:23:52,464 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 07:23:52,469 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 07:23:52,474 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 07:23:52,481 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 07:23:52,486 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 07:23:52,488 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 07:23:52,491 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 07:23:52,493 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 07:23:52,495 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 07:23:52,497 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 07:23:52,500 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 07:23:52,501 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 07:23:52,503 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 07:23:52,504 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 07:23:52,505 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 07:23:52,506 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 07:23:52,507 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 07:23:52,508 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 07:23:52,509 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 07:23:52,510 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 07:23:52,511 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 07:23:52,512 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 07:23:52,513 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 07:23:52,515 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 07:23:52,517 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 07:23:52,518 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 07:23:52,521 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 07:23:52,522 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 07:23:52,526 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 07:23:52,629 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 07:23:52,880 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 07:23:53,408 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-28 07:23:54,458 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-28 07:23:54,530 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5c611f30, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68b4d6d5, org.springframework.security.web.context.SecurityContextHolderFilter@4a678135, org.springframework.security.web.header.HeaderWriterFilter@53e03c81, org.springframework.security.web.authentication.logout.LogoutFilter@ef40668, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@58b061b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22be67b6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ad8ec54, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@134cf76e, org.springframework.security.web.session.SessionManagementFilter@27430c89, org.springframework.security.web.access.ExceptionTranslationFilter@e57c1de, org.springframework.security.web.access.intercept.AuthorizationFilter@6bfbe35a]
2023-11-28 07:23:55,241 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 07:23:56,342 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 07:23:56,437 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-28 07:23:56,446 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-28 07:23:56,455 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-28 07:23:56,533 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-28 07:23:56,588 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-28 07:23:57,666 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 07:23:57,679 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 12.594 seconds (process running for 13.706)
2023-11-28 07:23:57,763 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 07:23:57,788 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 07:23:57,828 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 07:23:57,829 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:23:57,890 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 07:23:57,891 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 07:23:57,893 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 07:23:57,894 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:24:09,888 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-28 07:24:09,888 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-28 07:24:09,890 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-28 07:24:09,972 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:24:10,113 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:10,187 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:10,204 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:24:10,214 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:24:10,217 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:24:10,285 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:24:10,286 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:10,351 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:10,357 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:24:10,360 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:24:10,362 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:24:10,371 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] SQL Error: 0, SQLState: 23505
2023-11-28 07:24:10,371 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MCwiZXhwIjoxNzAxMjUzNDUwfQ.ihciPCg88JZUnW8B6xBZ5w45wZmDZrzDvttv7Q2Kcow) already exists.
2023-11-28 07:24:10,383 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/auth/authenticate
jakarta.servlet.ServletException: Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MCwiZXhwIjoxNzAxMjUzNDUwfQ.ihciPCg88JZUnW8B6xBZ5w45wZmDZrzDvttv7Q2Kcow) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MCwiZXhwIjoxNzAxMjUzNDUwfQ.ihciPCg88JZUnW8B6xBZ5w45wZmDZrzDvttv7Q2Kcow) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy185.save(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.saveUserToken(AuthenticationService.java:78)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.authenticate(AuthenticationService.java:63)
	at tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController.authenticate(AuthenticationController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MCwiZXhwIjoxNzAxMjUzNDUwfQ.ihciPCg88JZUnW8B6xBZ5w45wZmDZrzDvttv7Q2Kcow) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 155 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MCwiZXhwIjoxNzAxMjUzNDUwfQ.ihciPCg88JZUnW8B6xBZ5w45wZmDZrzDvttv7Q2Kcow) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 176 common frames omitted
2023-11-28 07:24:10,397 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MCwiZXhwIjoxNzAxMjUzNDUwfQ.ihciPCg88JZUnW8B6xBZ5w45wZmDZrzDvttv7Q2Kcow) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]. Generating error page resulted in a 403.
2023-11-28 07:24:13,680 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:24:13,681 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:13,745 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:13,748 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:24:13,750 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:24:13,778 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:24:13,779 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:13,841 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:13,844 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:24:13,845 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:24:13,846 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:24:13,847 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] SQL Error: 0, SQLState: 23505
2023-11-28 07:24:13,847 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MywiZXhwIjoxNzAxMjUzNDUzfQ.DzWChUhz-5bRKCI2FGGubytpzSnShu9v92d5DPDisos) already exists.
2023-11-28 07:24:13,848 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/auth/authenticate
jakarta.servlet.ServletException: Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MywiZXhwIjoxNzAxMjUzNDUzfQ.DzWChUhz-5bRKCI2FGGubytpzSnShu9v92d5DPDisos) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MywiZXhwIjoxNzAxMjUzNDUzfQ.DzWChUhz-5bRKCI2FGGubytpzSnShu9v92d5DPDisos) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy185.save(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.saveUserToken(AuthenticationService.java:78)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.authenticate(AuthenticationService.java:63)
	at tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController.authenticate(AuthenticationController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MywiZXhwIjoxNzAxMjUzNDUzfQ.DzWChUhz-5bRKCI2FGGubytpzSnShu9v92d5DPDisos) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 155 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MywiZXhwIjoxNzAxMjUzNDUzfQ.DzWChUhz-5bRKCI2FGGubytpzSnShu9v92d5DPDisos) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 176 common frames omitted
2023-11-28 07:24:13,854 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA1MywiZXhwIjoxNzAxMjUzNDUzfQ.DzWChUhz-5bRKCI2FGGubytpzSnShu9v92d5DPDisos) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]. Generating error page resulted in a 403.
2023-11-28 07:24:24,330 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:24:24,331 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:24,395 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:24,398 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:24:24,400 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:24:24,431 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:24:24,432 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:24,495 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:24:24,500 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:24:24,501 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:24:24,504 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:24:24,504 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] SQL Error: 0, SQLState: 23505
2023-11-28 07:24:24,504 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA2NCwiZXhwIjoxNzAxMjUzNDY0fQ.G9SCno9WqgsT7aB0tZoCCoCYoykrqMT787Iqf4O9Ons) already exists.
2023-11-28 07:24:24,505 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/auth/authenticate
jakarta.servlet.ServletException: Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA2NCwiZXhwIjoxNzAxMjUzNDY0fQ.G9SCno9WqgsT7aB0tZoCCoCYoykrqMT787Iqf4O9Ons) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA2NCwiZXhwIjoxNzAxMjUzNDY0fQ.G9SCno9WqgsT7aB0tZoCCoCYoykrqMT787Iqf4O9Ons) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy185.save(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.saveUserToken(AuthenticationService.java:78)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.authenticate(AuthenticationService.java:63)
	at tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController.authenticate(AuthenticationController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA2NCwiZXhwIjoxNzAxMjUzNDY0fQ.G9SCno9WqgsT7aB0tZoCCoCYoykrqMT787Iqf4O9Ons) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 155 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA2NCwiZXhwIjoxNzAxMjUzNDY0fQ.G9SCno9WqgsT7aB0tZoCCoCYoykrqMT787Iqf4O9Ons) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 176 common frames omitted
2023-11-28 07:24:24,508 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzA2NCwiZXhwIjoxNzAxMjUzNDY0fQ.G9SCno9WqgsT7aB0tZoCCoCYoykrqMT787Iqf4O9Ons) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]. Generating error page resulted in a 403.
2023-11-28 07:25:42,589 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:25:42,590 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:25:42,652 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:25:42,655 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:25:42,656 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:25:42,673 INFO tech.noetzold.anPerformaticEcommerce.controller.CommerceItemController [XNIO-1 task-2] Doing Login.
2023-11-28 07:25:42,674 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:25:42,738 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:25:42,741 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:25:42,743 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:25:42,744 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:25:42,745 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] SQL Error: 0, SQLState: 23505
2023-11-28 07:25:42,745 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzE0MiwiZXhwIjoxNzAxMjUzNTQyfQ.CXhU1DQq3-LpSvyoYKxbyiTIk0681UehuCvuQyx73QY) already exists.
2023-11-28 07:25:42,746 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/auth/authenticate
jakarta.servlet.ServletException: Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzE0MiwiZXhwIjoxNzAxMjUzNTQyfQ.CXhU1DQq3-LpSvyoYKxbyiTIk0681UehuCvuQyx73QY) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzE0MiwiZXhwIjoxNzAxMjUzNTQyfQ.CXhU1DQq3-LpSvyoYKxbyiTIk0681UehuCvuQyx73QY) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy185.save(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.saveUserToken(AuthenticationService.java:78)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.authenticate(AuthenticationService.java:63)
	at tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController.authenticate(AuthenticationController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzE0MiwiZXhwIjoxNzAxMjUzNTQyfQ.CXhU1DQq3-LpSvyoYKxbyiTIk0681UehuCvuQyx73QY) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 155 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzE0MiwiZXhwIjoxNzAxMjUzNTQyfQ.CXhU1DQq3-LpSvyoYKxbyiTIk0681UehuCvuQyx73QY) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 176 common frames omitted
2023-11-28 07:25:42,748 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzE0MiwiZXhwIjoxNzAxMjUzNTQyfQ.CXhU1DQq3-LpSvyoYKxbyiTIk0681UehuCvuQyx73QY) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]. Generating error page resulted in a 403.
2023-11-28 07:26:46,864 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-28 07:26:46,866 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-28 07:26:46,878 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 07:26:46,880 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-28 07:26:46,883 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-28 07:26:52,610 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 15112 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 07:26:52,613 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 07:26:52,684 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 07:26:52,684 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 07:26:53,820 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 07:26:53,822 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 07:26:54,078 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 249 ms. Found 22 JPA repository interfaces.
2023-11-28 07:26:54,094 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 07:26:54,095 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 07:26:54,116 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,117 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,117 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,117 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,117 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,118 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,119 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,119 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,119 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,120 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,120 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,120 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,120 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,121 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,121 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,121 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,121 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,121 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,122 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 07:26:54,122 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-11-28 07:26:54,485 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=c12ac9e2-b42c-3d24-a919-8e7894acdd57
2023-11-28 07:26:55,239 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 07:26:55,263 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 07:26:55,263 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2578 ms
2023-11-28 07:26:55,779 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 07:26:55,779 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 07:26:55,779 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 07:26:55,788 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 07:26:55,993 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@66822926
2023-11-28 07:26:55,996 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 07:26:56,012 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 07:26:56,045 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.016s)
2023-11-28 07:26:56,091 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 07:26:56,091 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 07:26:56,181 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 07:26:56,234 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 07:26:56,236 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 07:26:56,542 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 07:26:57,967 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 07:26:57,986 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 07:26:57,989 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 07:26:57,991 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 07:26:57,992 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 07:26:57,993 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 07:26:57,994 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 07:26:57,994 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 07:26:57,994 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 07:26:57,995 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 07:26:57,996 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 07:26:57,996 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 07:26:57,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 07:26:57,998 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 07:26:57,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 07:26:57,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 07:26:58,000 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 07:26:58,001 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 07:26:58,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 07:26:58,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 07:26:58,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 07:26:58,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 07:26:58,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 07:26:58,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 07:26:58,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 07:26:58,006 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 07:26:58,007 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 07:26:58,011 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 07:26:58,013 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 07:26:58,016 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 07:26:58,019 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 07:26:58,021 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 07:26:58,023 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 07:26:58,025 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 07:26:58,026 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 07:26:58,028 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 07:26:58,030 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 07:26:58,032 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 07:26:58,034 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 07:26:58,037 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 07:26:58,038 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 07:26:58,040 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 07:26:58,042 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 07:26:58,043 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 07:26:58,045 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 07:26:58,048 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 07:26:58,052 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 07:26:58,055 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 07:26:58,058 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 07:26:58,060 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 07:26:58,062 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 07:26:58,066 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 07:26:58,069 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 07:26:58,078 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 07:26:58,080 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 07:26:58,087 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 07:26:58,093 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 07:26:58,098 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 07:26:58,106 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 07:26:58,111 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 07:26:58,116 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 07:26:58,121 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 07:26:58,126 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 07:26:58,129 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 07:26:58,132 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 07:26:58,138 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 07:26:58,142 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 07:26:58,147 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 07:26:58,151 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 07:26:58,155 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 07:26:58,157 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 07:26:58,159 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 07:26:58,162 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 07:26:58,167 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 07:26:58,174 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 07:26:58,179 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 07:26:58,186 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 07:26:58,193 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 07:26:58,200 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 07:26:58,208 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 07:26:58,216 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 07:26:58,221 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 07:26:58,224 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 07:26:58,227 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 07:26:58,229 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 07:26:58,231 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 07:26:58,233 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 07:26:58,236 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 07:26:58,239 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 07:26:58,241 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 07:26:58,242 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 07:26:58,243 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 07:26:58,244 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 07:26:58,247 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 07:26:58,251 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 07:26:58,255 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 07:26:58,257 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 07:26:58,259 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 07:26:58,260 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 07:26:58,261 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 07:26:58,263 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 07:26:58,266 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 07:26:58,270 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 07:26:58,274 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 07:26:58,275 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 07:26:58,280 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 07:26:58,415 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 07:26:58,692 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 07:26:59,207 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-28 07:27:00,321 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-28 07:27:00,379 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48f4b961, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ef40668, org.springframework.security.web.context.SecurityContextHolderFilter@e57c1de, org.springframework.security.web.header.HeaderWriterFilter@3b1886c7, org.springframework.security.web.authentication.logout.LogoutFilter@70709ae0, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3cb78a4e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53e03c81, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3baa0953, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2591742c, org.springframework.security.web.session.SessionManagementFilter@632f2221, org.springframework.security.web.access.ExceptionTranslationFilter@45bddd2b, org.springframework.security.web.access.intercept.AuthorizationFilter@6805d877]
2023-11-28 07:27:01,135 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 07:27:02,237 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 07:27:02,336 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-28 07:27:02,342 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-28 07:27:02,350 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-28 07:27:02,423 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-28 07:27:02,469 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-28 07:27:03,565 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 07:27:03,584 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 12.437 seconds (process running for 13.158)
2023-11-28 07:27:03,670 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 07:27:03,694 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 07:27:03,742 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 07:27:03,743 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:27:03,805 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 07:27:03,806 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 07:27:03,808 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 07:27:03,809 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:27:07,936 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-28 07:27:07,936 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-28 07:27:07,938 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-28 07:27:08,014 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:27:08,135 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:27:08,213 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:27:08,226 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:27:08,236 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:27:08,239 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:27:08,313 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:27:08,314 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:27:08,383 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:27:08,389 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:27:08,391 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:27:08,394 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:27:08,400 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] SQL Error: 0, SQLState: 23505
2023-11-28 07:27:08,400 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [XNIO-1 task-2] ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzIyOCwiZXhwIjoxNzAxMjUzNjI4fQ.MFAllPeZCkd2Z9kcKL5dMnWlx88Xam9SLstHUZKsC-k) already exists.
2023-11-28 07:27:08,410 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/auth/authenticate
jakarta.servlet.ServletException: Request processing failed: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzIyOCwiZXhwIjoxNzAxMjUzNjI4fQ.MFAllPeZCkd2Z9kcKL5dMnWlx88Xam9SLstHUZKsC-k) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1019)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:74)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:129)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:37)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzIyOCwiZXhwIjoxNzAxMjUzNjI4fQ.MFAllPeZCkd2Z9kcKL5dMnWlx88Xam9SLstHUZKsC-k) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:244)
	at jdk.proxy4/jdk.proxy4.$Proxy185.save(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.saveUserToken(AuthenticationService.java:78)
	at tech.noetzold.anPerformaticEcommerce.security.service.AuthenticationService.authenticate(AuthenticationService.java:63)
	at tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController.authenticate(AuthenticationController.java:41)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011)
	... 125 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzIyOCwiZXhwIjoxNzAxMjUzNjI4fQ.MFAllPeZCkd2Z9kcKL5dMnWlx88Xam9SLstHUZKsC-k) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 155 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzIyOCwiZXhwIjoxNzAxMjUzNjI4fQ.MFAllPeZCkd2Z9kcKL5dMnWlx88Xam9SLstHUZKsC-k) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 176 common frames omitted
2023-11-28 07:27:08,422 ERROR io.undertow.servlet.request [XNIO-1 task-2] UT015012: Failed to generate error page /error for original exception: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: duplicate key value violates unique constraint "token_token_key"
  Detalhe: Key (token)=(eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBtYWlsLmNvbSIsImlhdCI6MTcwMTE2NzIyOCwiZXhwIjoxNzAxMjUzNjI4fQ.MFAllPeZCkd2Z9kcKL5dMnWlx88Xam9SLstHUZKsC-k) already exists.] [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; SQL [insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)]; constraint [token_token_key]. Generating error page resulted in a 403.
2023-11-28 07:28:34,943 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:28:34,944 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:28:35,010 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:28:35,013 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:28:35,015 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:29:22,570 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:29:22,571 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:29:22,633 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:29:22,636 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:29:22,638 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:29:22,639 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:29:22,704 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:29:22,707 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 07:29:49,331 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:29:49,332 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:29:49,392 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:29:49,394 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:29:49,396 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:29:49,398 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:29:49,431 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:29:49,433 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 07:30:29,561 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:30:29,562 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:30:29,626 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:30:29,630 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:30:29,631 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:30:29,633 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:30:29,679 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:30:29,680 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 07:31:00,506 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:31:00,508 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:31:00,571 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:31:00,574 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:31:00,575 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:31:00,576 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:31:00,610 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:31:00,611 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 07:31:55,103 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:31:55,104 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:31:55,163 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:31:55,167 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 07:31:55,168 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 07:31:55,169 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 07:32:10,346 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 07:32:10,865 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 07:59:39,518 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 07:59:39,518 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:00:14,415 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.user_id,t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type from token t1_0 where t1_0.user_id=?
2023-11-28 08:01:47,934 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:01:47,937 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:01:47,939 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:01:47,941 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:01:53,041 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:01:53,043 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:05:41,328 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m26s849ms811µs800ns).
2023-11-28 08:05:41,360 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-28 08:05:41,363 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-28 08:05:41,373 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/payment/payment/8f98317-d29a-453c-8557-47d3f26040d1
java.lang.IllegalStateException: UT015023: This Context has been already destroyed
	at io.undertow.servlet.spec.ServletContextImpl.getDeploymentInfo(ServletContextImpl.java:210)
	at io.undertow.servlet.spec.ServletContextImpl.getContextPath(ServletContextImpl.java:216)
	at io.undertow.servlet.spec.HttpServletRequestImpl.getContextPath(HttpServletRequestImpl.java:310)
	at jakarta.servlet.http.HttpServletRequestWrapper.getContextPath(HttpServletRequestWrapper.java:149)
	at jakarta.servlet.http.HttpServletRequestWrapper.getContextPath(HttpServletRequestWrapper.java:149)
	at jakarta.servlet.http.HttpServletRequestWrapper.getContextPath(HttpServletRequestWrapper.java:149)
	at org.springframework.web.util.UrlPathHelper.getContextPath(UrlPathHelper.java:446)
	at org.springframework.web.util.UrlPathHelper.getPathWithinApplication(UrlPathHelper.java:346)
	at org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(UrlPathHelper.java:243)
	at org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher$DefaultMatcher.matcher(MvcRequestMatcher.java:183)
	at org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher.matcher(MvcRequestMatcher.java:93)
	at org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager.check(RequestMatcherDelegatingAuthorizationManager.java:76)
	at org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager.check(RequestMatcherDelegatingAuthorizationManager.java:45)
	at org.springframework.security.authorization.ObservationAuthorizationManager.check(ObservationAuthorizationManager.java:57)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:95)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-28 08:05:41,378 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:05:41,382 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-28 08:05:41,385 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-28 08:05:46,710 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 28664 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:05:46,713 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:05:46,770 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:05:46,771 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:05:48,016 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:05:48,018 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:05:48,212 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 187 ms. Found 22 JPA repository interfaces.
2023-11-28 08:05:48,226 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:05:48,228 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:05:48,243 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,243 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,243 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,243 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,243 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,244 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,245 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,245 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,245 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,245 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,245 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,245 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,246 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,246 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,246 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:05:48,246 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2023-11-28 08:05:48,542 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=03f51965-15ee-36d8-8716-5e38c8fceadb
2023-11-28 08:05:49,280 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:05:49,306 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:05:49,306 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2535 ms
2023-11-28 08:05:49,789 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:05:49,789 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:05:49,789 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:05:49,796 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:05:49,963 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@693f13b6
2023-11-28 08:05:49,965 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:05:49,980 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:05:50,016 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.018s)
2023-11-28 08:05:50,073 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:05:50,073 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:05:50,171 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:05:50,226 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:05:50,228 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:05:50,503 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:05:51,847 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:05:51,862 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:05:51,865 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:05:51,866 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:05:51,867 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:05:51,868 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:05:51,869 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:05:51,869 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:05:51,870 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:05:51,871 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:05:51,872 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:05:51,872 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:05:51,873 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:05:51,874 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:05:51,874 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:05:51,875 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:05:51,876 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:05:51,876 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:05:51,877 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:05:51,877 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:05:51,878 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:05:51,878 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:05:51,879 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:05:51,880 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:05:51,880 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:05:51,880 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:05:51,881 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:05:51,885 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:05:51,888 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:05:51,891 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:05:51,893 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:05:51,895 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:05:51,896 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:05:51,899 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:05:51,900 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:05:51,902 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:05:51,905 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:05:51,906 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:05:51,908 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:05:51,911 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:05:51,912 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:05:51,914 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:05:51,916 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:05:51,918 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:05:51,920 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:05:51,922 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:05:51,925 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:05:51,927 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:05:51,928 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:05:51,932 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:05:51,934 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:05:51,938 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:05:51,940 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:05:51,946 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:05:51,949 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:05:51,953 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:05:51,961 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:05:51,966 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:05:51,972 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:05:51,978 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:05:51,984 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:05:51,987 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:05:51,992 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:05:51,995 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:05:51,997 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:05:52,002 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:05:52,005 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:05:52,010 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:05:52,013 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:05:52,015 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:05:52,018 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:05:52,020 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:05:52,023 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:05:52,026 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:05:52,030 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:05:52,034 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:05:52,039 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:05:52,042 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:05:52,045 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:05:52,050 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:05:52,055 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:05:52,057 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:05:52,059 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:05:52,060 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:05:52,061 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:05:52,063 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:05:52,064 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:05:52,066 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:05:52,067 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:05:52,068 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:05:52,071 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:05:52,072 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:05:52,074 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:05:52,075 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:05:52,077 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:05:52,078 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:05:52,079 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:05:52,080 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:05:52,081 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:05:52,083 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:05:52,084 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:05:52,086 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:05:52,087 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:05:52,090 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:05:52,092 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:05:52,097 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:05:52,220 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:05:52,467 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:05:53,598 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-28 08:05:53,621 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 08:05:53,623 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'rabbitMQConection': Invocation of init method failed
2023-11-28 08:05:53,635 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:05:53,638 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-28 08:05:53,641 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-28 08:05:53,665 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-28 08:05:53,688 ERROR org.springframework.boot.SpringApplication [restartedMain] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'rabbitMQConection': Invocation of init method failed
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:222)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:419)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1762)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:950)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:616)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:738)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:440)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication.main(AnPerformaticEcommerceApplication.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused: no further information
	at org.springframework.amqp.rabbit.support.RabbitExceptionTranslator.convertRabbitAccessException(RabbitExceptionTranslator.java:61)
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:594)
	at org.springframework.amqp.rabbit.connection.CachingConnectionFactory.createConnection(CachingConnectionFactory.java:711)
	at org.springframework.amqp.rabbit.connection.ConnectionFactoryUtils.createConnection(ConnectionFactoryUtils.java:257)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.doExecute(RabbitTemplate.java:2225)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2198)
	at org.springframework.amqp.rabbit.core.RabbitTemplate.execute(RabbitTemplate.java:2178)
	at org.springframework.amqp.rabbit.core.RabbitAdmin.declareQueue(RabbitAdmin.java:298)
	at tech.noetzold.anPerformaticEcommerce.message.config.RabbitMQConection.declareQueueWithDLQ(RabbitMQConection.java:34)
	at tech.noetzold.anPerformaticEcommerce.message.config.RabbitMQConection.setupQueues(RabbitMQConection.java:74)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	... 23 common frames omitted
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1223)
	at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectAddresses(AbstractConnectionFactory.java:632)
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connect(AbstractConnectionFactory.java:607)
	at org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection(AbstractConnectionFactory.java:557)
	... 38 common frames omitted
2023-11-28 08:06:47,206 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 6944 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:06:47,207 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:06:47,268 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:06:47,268 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:06:48,580 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:06:48,581 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:06:48,765 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 177 ms. Found 22 JPA repository interfaces.
2023-11-28 08:06:48,778 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:06:48,780 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:06:48,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,799 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,799 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,799 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,799 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,800 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,800 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,800 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,800 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,800 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,801 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,801 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,801 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,801 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,801 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,802 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,803 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:06:48,803 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2023-11-28 08:06:49,106 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=03f51965-15ee-36d8-8716-5e38c8fceadb
2023-11-28 08:06:49,823 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:06:49,843 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:06:49,843 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2575 ms
2023-11-28 08:06:50,300 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:06:50,300 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:06:50,300 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:06:50,308 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:06:50,477 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@213c403a
2023-11-28 08:06:50,478 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:06:50,502 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:06:50,536 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-28 08:06:50,582 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:06:50,583 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:06:50,673 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:06:50,725 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:06:50,727 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:06:50,994 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:06:52,401 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:06:52,417 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:06:52,420 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:06:52,420 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:06:52,421 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:06:52,421 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:06:52,422 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:06:52,423 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:06:52,423 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:06:52,424 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:06:52,425 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:06:52,425 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:06:52,426 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:06:52,427 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:06:52,428 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:06:52,428 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:06:52,428 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:06:52,430 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:06:52,431 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:06:52,431 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:06:52,432 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:06:52,433 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:06:52,433 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:06:52,434 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:06:52,435 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:06:52,435 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:06:52,435 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:06:52,438 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:06:52,441 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:06:52,443 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:06:52,445 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:06:52,448 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:06:52,450 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:06:52,451 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:06:52,452 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:06:52,454 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:06:52,456 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:06:52,457 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:06:52,460 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:06:52,461 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:06:52,462 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:06:52,464 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:06:52,465 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:06:52,466 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:06:52,469 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:06:52,471 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:06:52,473 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:06:52,475 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:06:52,477 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:06:52,478 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:06:52,481 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:06:52,484 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:06:52,486 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:06:52,492 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:06:52,495 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:06:52,500 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:06:52,506 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:06:52,511 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:06:52,516 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:06:52,520 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:06:52,525 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:06:52,530 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:06:52,534 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:06:52,536 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:06:52,540 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:06:52,543 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:06:52,546 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:06:52,550 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:06:52,552 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:06:52,554 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:06:52,557 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:06:52,560 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:06:52,563 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:06:52,566 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:06:52,570 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:06:52,575 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:06:52,579 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:06:52,584 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:06:52,588 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:06:52,592 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:06:52,598 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:06:52,601 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:06:52,602 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:06:52,604 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:06:52,605 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:06:52,606 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:06:52,607 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:06:52,608 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:06:52,609 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:06:52,610 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:06:52,611 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:06:52,611 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:06:52,613 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:06:52,613 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:06:52,615 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:06:52,615 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:06:52,617 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:06:52,618 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:06:52,619 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:06:52,620 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:06:52,622 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:06:52,623 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:06:52,625 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:06:52,627 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:06:52,628 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:06:52,634 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:06:52,764 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:06:52,998 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:06:54,248 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-28 08:06:54,309 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#6acb4d44:0/SimpleConnection@2764d783 [delegate=amqp://guest@127.0.0.1:5672/, localPort=62826]
2023-11-28 08:06:54,603 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer': Unsatisfied dependency expressed through field 'shippingClient': No qualifying bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2023-11-28 08:06:54,625 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:06:54,631 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-28 08:06:54,635 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-28 08:06:54,668 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-28 08:06:54,701 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [restartedMain] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field shippingClient in tech.noetzold.anPerformaticEcommerce.message.consumer.OrderConsumer required a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' in your configuration.

2023-11-28 08:08:14,958 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 2392 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:08:14,960 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:08:15,014 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:08:15,014 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:08:16,166 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:08:16,167 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:08:16,389 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 215 ms. Found 22 JPA repository interfaces.
2023-11-28 08:08:16,400 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:08:16,401 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:08:16,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,421 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,422 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,423 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,423 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,423 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,423 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,423 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,424 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,424 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,424 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,425 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,425 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,425 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,426 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:08:16,426 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-11-28 08:08:16,728 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=c12ac9e2-b42c-3d24-a919-8e7894acdd57
2023-11-28 08:08:17,386 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:08:17,405 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:08:17,405 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2391 ms
2023-11-28 08:08:17,860 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:08:17,861 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:08:17,861 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:08:17,869 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:08:18,036 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@16b4ec7b
2023-11-28 08:08:18,038 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:08:18,055 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:08:18,088 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-28 08:08:18,147 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:08:18,148 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:08:18,231 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:08:18,284 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:08:18,285 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:08:18,546 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:08:19,842 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:08:19,861 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:08:19,864 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:08:19,865 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:08:19,865 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:08:19,866 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:08:19,866 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:08:19,867 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:08:19,868 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:08:19,868 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:08:19,870 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:08:19,870 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:08:19,871 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:08:19,872 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:08:19,872 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:08:19,873 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:08:19,873 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:08:19,874 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:08:19,874 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:08:19,875 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:08:19,875 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:08:19,876 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:08:19,876 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:08:19,877 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:08:19,877 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:08:19,878 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:08:19,879 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:08:19,882 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:08:19,884 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:08:19,886 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:08:19,887 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:08:19,890 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:08:19,891 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:08:19,892 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:08:19,893 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:08:19,894 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:08:19,895 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:08:19,897 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:08:19,898 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:08:19,899 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:08:19,900 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:08:19,901 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:08:19,902 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:08:19,904 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:08:19,906 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:08:19,907 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:08:19,909 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:08:19,910 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:08:19,911 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:08:19,913 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:08:19,915 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:08:19,918 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:08:19,918 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:08:19,925 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:08:19,928 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:08:19,931 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:08:19,937 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:08:19,941 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:08:19,944 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:08:19,948 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:08:19,952 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:08:19,956 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:08:19,962 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:08:19,965 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:08:19,968 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:08:19,972 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:08:19,974 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:08:19,980 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:08:19,983 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:08:19,985 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:08:19,988 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:08:19,991 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:08:19,994 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:08:19,998 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:08:20,001 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:08:20,006 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:08:20,010 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:08:20,014 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:08:20,018 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:08:20,023 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:08:20,028 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:08:20,030 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:08:20,031 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:08:20,032 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:08:20,033 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:08:20,035 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:08:20,035 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:08:20,036 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:08:20,037 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:08:20,038 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:08:20,038 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:08:20,040 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:08:20,041 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:08:20,042 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:08:20,043 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:08:20,044 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:08:20,044 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:08:20,045 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:08:20,046 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:08:20,047 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:08:20,048 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:08:20,050 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:08:20,051 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:08:20,052 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:08:20,053 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:08:20,056 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:08:20,184 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:08:20,386 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:08:20,884 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-28 08:08:21,886 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-28 08:08:21,947 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@233e45b7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2027ca7e, org.springframework.security.web.context.SecurityContextHolderFilter@44bcb8a3, org.springframework.security.web.header.HeaderWriterFilter@2298688, org.springframework.security.web.authentication.logout.LogoutFilter@2609c131, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@4d483dd1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d3c4755, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54d82ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7159464c, org.springframework.security.web.session.SessionManagementFilter@692119e1, org.springframework.security.web.access.ExceptionTranslationFilter@33c5a03, org.springframework.security.web.access.intercept.AuthorizationFilter@1cd3f92f]
2023-11-28 08:08:22,626 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 08:08:23,703 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:08:23,796 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-28 08:08:23,804 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-28 08:08:23,812 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-28 08:08:23,880 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-28 08:08:23,926 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-28 08:08:25,002 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:08:25,014 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 11.517 seconds (process running for 12.194)
2023-11-28 08:08:25,103 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:08:25,173 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:08:25,185 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:08:25,187 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:08:25,250 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:08:25,252 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:08:25,253 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:08:25,253 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:09:09,038 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-28 08:09:09,038 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-28 08:09:09,041 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 3 ms
2023-11-28 08:09:09,134 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 08:09:09,268 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:09:13,563 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:09:13,579 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:09:13,586 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:09:13,590 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:09:15,121 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:09:15,123 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:09:25,391 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 08:09:25,393 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:09:27,589 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:09:27,594 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:09:27,596 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:09:27,596 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:09:40,230 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:10:07,479 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=49s324ms173µs900ns).
2023-11-28 08:10:07,486 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:12:46,057 WARN com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m38s577ms889µs500ns).
2023-11-28 08:12:46,082 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-28 08:12:46,084 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-28 08:12:46,092 ERROR io.undertow.request [XNIO-1 task-2] UT005023: Exception handling request to /ecommerce/v1/payment/payment
java.lang.IllegalStateException: UT015023: This Context has been already destroyed
	at io.undertow.servlet.spec.ServletContextImpl.getDeploymentInfo(ServletContextImpl.java:210)
	at io.undertow.servlet.spec.ServletContextImpl.getContextPath(ServletContextImpl.java:216)
	at io.undertow.servlet.spec.HttpServletRequestImpl.getContextPath(HttpServletRequestImpl.java:310)
	at jakarta.servlet.http.HttpServletRequestWrapper.getContextPath(HttpServletRequestWrapper.java:149)
	at jakarta.servlet.http.HttpServletRequestWrapper.getContextPath(HttpServletRequestWrapper.java:149)
	at jakarta.servlet.http.HttpServletRequestWrapper.getContextPath(HttpServletRequestWrapper.java:149)
	at org.springframework.web.util.UrlPathHelper.getContextPath(UrlPathHelper.java:446)
	at org.springframework.web.util.UrlPathHelper.getPathWithinApplication(UrlPathHelper.java:346)
	at org.springframework.web.util.UrlPathHelper.getLookupPathForRequest(UrlPathHelper.java:243)
	at org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher$DefaultMatcher.matcher(MvcRequestMatcher.java:183)
	at org.springframework.security.web.servlet.util.matcher.MvcRequestMatcher.matcher(MvcRequestMatcher.java:93)
	at org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager.check(RequestMatcherDelegatingAuthorizationManager.java:76)
	at org.springframework.security.web.access.intercept.RequestMatcherDelegatingAuthorizationManager.check(RequestMatcherDelegatingAuthorizationManager.java:45)
	at org.springframework.security.authorization.ObservationAuthorizationManager.check(ObservationAuthorizationManager.java:57)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:95)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at io.undertow.servlet.core.ManagedFilter.doFilter(ManagedFilter.java:67)
	at io.undertow.servlet.handlers.FilterHandler$FilterChainImpl.doFilter(FilterHandler.java:131)
	at io.undertow.servlet.handlers.FilterHandler.handleRequest(FilterHandler.java:84)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletChain$1.handleRequest(ServletChain.java:68)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at io.undertow.servlet.handlers.RedirectDirHandler.handleRequest(RedirectDirHandler.java:68)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:117)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SendErrorPageHandler.handleRequest(SendErrorPageHandler.java:52)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.SessionRestoringHandler.handleRequest(SessionRestoringHandler.java:119)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:276)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-28 08:12:46,095 ERROR io.undertow.request [XNIO-1 task-2] UT005022: Exception generating error page /error
java.lang.IllegalStateException: UT015023: This Context has been already destroyed
	at io.undertow.servlet.spec.ServletContextImpl.getDeploymentInfo(ServletContextImpl.java:210)
	at io.undertow.servlet.spec.ServletContextImpl.getContextPath(ServletContextImpl.java:216)
	at io.undertow.servlet.spec.HttpServletRequestImpl.getContextPath(HttpServletRequestImpl.java:310)
	at io.undertow.servlet.util.DispatchUtils.dispatchError(DispatchUtils.java:152)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:405)
	at io.undertow.servlet.spec.RequestDispatcherImpl.error(RequestDispatcherImpl.java:372)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:315)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:132)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:256)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:101)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:393)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:859)
	at org.jboss.threads.ContextHandler$1.runWith(ContextHandler.java:18)
	at org.jboss.threads.EnhancedQueueExecutor$Task.run(EnhancedQueueExecutor.java:2513)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1538)
	at org.xnio.XnioWorker$WorkerThreadFactory$1$1.run(XnioWorker.java:1282)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-28 08:12:46,097 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:12:46,101 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-28 08:12:46,103 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-28 08:15:10,266 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 3856 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:15:10,268 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:15:10,320 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:15:10,320 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:15:11,392 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:15:11,393 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:15:11,637 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 235 ms. Found 22 JPA repository interfaces.
2023-11-28 08:15:11,650 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:15:11,652 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:15:11,672 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,673 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,673 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,673 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,674 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,675 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,675 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,675 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,675 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,676 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,676 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,676 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,676 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,677 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,677 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,678 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:15:11,678 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 15 ms. Found 0 Redis repository interfaces.
2023-11-28 08:15:11,956 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=c12ac9e2-b42c-3d24-a919-8e7894acdd57
2023-11-28 08:15:12,643 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:15:12,662 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:15:12,662 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2342 ms
2023-11-28 08:15:13,119 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:15:13,119 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:15:13,119 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:15:13,127 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:15:13,289 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@12318af4
2023-11-28 08:15:13,292 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:15:13,305 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:15:13,339 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-28 08:15:13,387 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:15:13,388 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:15:13,480 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:15:13,529 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:15:13,531 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:15:13,789 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:15:15,143 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:15:15,162 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:15:15,165 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:15:15,166 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:15:15,167 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:15:15,167 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:15:15,168 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:15:15,168 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:15:15,169 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:15:15,170 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:15:15,170 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:15:15,171 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:15:15,172 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:15:15,173 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:15:15,174 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:15:15,175 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:15:15,175 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:15:15,176 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:15:15,177 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:15:15,178 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:15:15,178 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:15:15,179 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:15:15,180 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:15:15,181 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:15:15,181 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:15:15,182 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:15:15,183 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:15:15,187 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:15:15,190 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:15:15,192 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:15:15,194 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:15:15,197 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:15:15,198 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:15:15,200 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:15:15,201 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:15:15,203 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:15:15,206 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:15:15,208 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:15:15,210 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:15:15,212 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:15:15,213 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:15:15,215 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:15:15,216 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:15:15,217 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:15:15,218 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:15:15,221 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:15:15,224 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:15:15,226 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:15:15,228 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:15:15,230 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:15:15,231 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:15:15,235 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:15:15,236 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:15:15,246 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:15:15,248 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:15:15,253 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:15:15,260 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:15:15,266 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:15:15,272 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:15:15,277 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:15:15,282 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:15:15,285 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:15:15,289 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:15:15,292 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:15:15,295 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:15:15,299 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:15:15,301 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:15:15,305 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:15:15,307 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:15:15,309 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:15:15,312 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:15:15,314 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:15:15,316 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:15:15,320 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:15:15,323 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:15:15,327 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:15:15,330 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:15:15,334 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:15:15,337 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:15:15,340 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:15:15,345 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:15:15,346 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:15:15,347 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:15:15,349 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:15:15,350 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:15:15,350 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:15:15,352 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:15:15,353 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:15:15,354 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:15:15,355 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:15:15,356 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:15:15,357 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:15:15,358 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:15:15,358 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:15:15,360 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:15:15,360 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:15:15,361 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:15:15,362 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:15:15,363 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:15:15,363 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:15:15,364 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:15:15,366 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:15:15,367 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:15:15,369 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:15:15,370 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:15:15,375 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:15:15,505 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:15:15,739 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:15:16,272 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-28 08:15:17,342 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-28 08:15:17,408 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@66338d10, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@37717f9c, org.springframework.security.web.context.SecurityContextHolderFilter@24154f2f, org.springframework.security.web.header.HeaderWriterFilter@7543d551, org.springframework.security.web.authentication.logout.LogoutFilter@7550759, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3d55a31a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3abf20bc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2b4481ed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@299b2736, org.springframework.security.web.session.SessionManagementFilter@44bcb8a3, org.springframework.security.web.access.ExceptionTranslationFilter@7009b327, org.springframework.security.web.access.intercept.AuthorizationFilter@233e45b7]
2023-11-28 08:15:18,160 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 08:15:19,250 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:15:19,355 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-28 08:15:19,364 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-28 08:15:19,370 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-28 08:15:19,441 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-28 08:15:19,488 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-28 08:15:20,574 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:15:20,589 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 11.75 seconds (process running for 12.445)
2023-11-28 08:15:20,675 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:15:20,735 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:15:20,749 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:15:20,752 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:15:20,814 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:15:20,817 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:15:20,818 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:15:20,818 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:15:23,732 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-28 08:15:23,733 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-28 08:15:23,734 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 1 ms
2023-11-28 08:15:23,828 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 08:15:23,959 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:15:23,976 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.user_id,t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type from token t1_0 where t1_0.user_id=?
2023-11-28 08:15:28,794 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:15:28,804 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:15:28,810 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:15:28,814 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:15:32,667 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:15:32,669 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.user_id,t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type from token t1_0 where t1_0.user_id=?
2023-11-28 08:15:42,775 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:16:33,491 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 08:16:33,493 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:16:33,494 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.user_id,t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type from token t1_0 where t1_0.user_id=?
2023-11-28 08:16:36,185 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:16:36,190 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:16:36,193 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:16:36,194 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:16:42,214 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:16:42,216 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.user_id,t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type from token t1_0 where t1_0.user_id=?
2023-11-28 08:16:52,034 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:18:53,343 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-28 08:18:53,346 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-28 08:18:53,357 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:18:53,362 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-28 08:18:53,364 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-28 08:20:26,140 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 24412 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:20:26,144 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:20:26,220 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:20:26,220 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:20:27,403 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:20:27,405 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:20:27,633 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 222 ms. Found 22 JPA repository interfaces.
2023-11-28 08:20:27,645 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:20:27,647 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:20:27,660 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,661 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,661 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,661 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,661 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,661 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,661 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,662 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,662 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,662 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,662 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,662 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,662 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,663 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,663 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,663 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,663 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,664 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,664 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,664 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,664 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,665 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:20:27,665 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 12 ms. Found 0 Redis repository interfaces.
2023-11-28 08:20:27,952 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=c12ac9e2-b42c-3d24-a919-8e7894acdd57
2023-11-28 08:20:28,714 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:20:28,740 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:20:28,741 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2520 ms
2023-11-28 08:20:29,208 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:20:29,208 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:20:29,208 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:20:29,216 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:20:29,385 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b6ad86d
2023-11-28 08:20:29,387 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:20:29,408 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:20:29,441 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.017s)
2023-11-28 08:20:29,506 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:20:29,506 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:20:29,613 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:20:29,671 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:20:29,675 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:20:29,968 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:20:31,460 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:20:31,474 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:20:31,478 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:20:31,479 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:20:31,479 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:20:31,480 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:20:31,480 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:20:31,481 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:20:31,481 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:20:31,482 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:20:31,483 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:20:31,483 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:20:31,484 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:20:31,484 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:20:31,485 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:20:31,485 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:20:31,486 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:20:31,486 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:20:31,487 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:20:31,487 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:20:31,488 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:20:31,489 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:20:31,489 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:20:31,490 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:20:31,490 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:20:31,491 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:20:31,492 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:20:31,496 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:20:31,498 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:20:31,500 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:20:31,503 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:20:31,505 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:20:31,506 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:20:31,508 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:20:31,509 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:20:31,511 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:20:31,513 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:20:31,514 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:20:31,516 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:20:31,518 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:20:31,519 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:20:31,521 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:20:31,523 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:20:31,525 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:20:31,528 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:20:31,530 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:20:31,532 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:20:31,534 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:20:31,536 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:20:31,538 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:20:31,539 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:20:31,543 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:20:31,544 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:20:31,553 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:20:31,557 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:20:31,565 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:20:31,573 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:20:31,579 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:20:31,585 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:20:31,590 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:20:31,595 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:20:31,599 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:20:31,603 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:20:31,606 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:20:31,609 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:20:31,615 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:20:31,618 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:20:31,622 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:20:31,625 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:20:31,628 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:20:31,632 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:20:31,636 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:20:31,639 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:20:31,646 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:20:31,654 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:20:31,661 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:20:31,668 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:20:31,674 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:20:31,680 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:20:31,687 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:20:31,694 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:20:31,697 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:20:31,700 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:20:31,702 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:20:31,704 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:20:31,706 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:20:31,708 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:20:31,709 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:20:31,712 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:20:31,714 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:20:31,716 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:20:31,718 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:20:31,719 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:20:31,721 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:20:31,723 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:20:31,725 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:20:31,727 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:20:31,729 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:20:31,731 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:20:31,733 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:20:31,735 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:20:31,737 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:20:31,739 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:20:31,741 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:20:31,743 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:20:31,752 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:20:31,882 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:20:32,185 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:20:32,689 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-28 08:20:33,817 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-28 08:20:33,870 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@233e45b7, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2027ca7e, org.springframework.security.web.context.SecurityContextHolderFilter@44bcb8a3, org.springframework.security.web.header.HeaderWriterFilter@2298688, org.springframework.security.web.authentication.logout.LogoutFilter@2609c131, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@38f1834d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d3c4755, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54d82ae, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7159464c, org.springframework.security.web.session.SessionManagementFilter@692119e1, org.springframework.security.web.access.ExceptionTranslationFilter@33c5a03, org.springframework.security.web.access.intercept.AuthorizationFilter@1cd3f92f]
2023-11-28 08:20:34,551 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 08:20:35,651 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:20:35,750 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-28 08:20:35,758 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-28 08:20:35,769 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-28 08:20:35,838 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-28 08:20:35,886 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-28 08:20:36,973 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:20:36,989 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 12.294 seconds (process running for 12.983)
2023-11-28 08:20:37,079 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:20:37,140 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:20:37,154 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:20:37,157 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:20:37,218 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:20:37,222 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:20:37,223 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:20:37,224 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:20:52,337 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-28 08:20:52,353 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:20:52,356 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-28 08:20:52,360 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-28 08:21:06,802 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 8060 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:21:06,804 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:21:06,859 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:21:06,859 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:21:08,052 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:21:08,053 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:21:08,289 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 230 ms. Found 22 JPA repository interfaces.
2023-11-28 08:21:08,304 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:21:08,305 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:21:08,323 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,324 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,324 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,324 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,324 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,324 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,325 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,326 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,327 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,327 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,327 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,327 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,328 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,328 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,329 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:21:08,329 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
2023-11-28 08:21:08,625 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=c12ac9e2-b42c-3d24-a919-8e7894acdd57
2023-11-28 08:21:09,367 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:21:09,385 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:21:09,385 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2526 ms
2023-11-28 08:21:09,853 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:21:09,853 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:21:09,853 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:21:09,863 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:21:10,035 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4d7fd658
2023-11-28 08:21:10,037 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:21:10,054 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:21:10,090 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.020s)
2023-11-28 08:21:10,152 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:21:10,152 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:21:10,248 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:21:10,302 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:21:10,304 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:21:10,569 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:21:11,913 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:21:11,929 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:21:11,932 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:21:11,933 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:21:11,934 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:21:11,935 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:21:11,935 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:21:11,936 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:21:11,936 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:21:11,937 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:21:11,938 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:21:11,938 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:21:11,940 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:21:11,941 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:21:11,941 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:21:11,942 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:21:11,942 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:21:11,943 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:21:11,944 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:21:11,944 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:21:11,945 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:21:11,946 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:21:11,946 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:21:11,947 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:21:11,948 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:21:11,948 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:21:11,949 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:21:11,953 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:21:11,954 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:21:11,956 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:21:11,958 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:21:11,961 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:21:11,963 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:21:11,965 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:21:11,966 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:21:11,967 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:21:11,969 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:21:11,970 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:21:11,972 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:21:11,974 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:21:11,975 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:21:11,977 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:21:11,979 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:21:11,982 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:21:11,983 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:21:11,985 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:21:11,988 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:21:11,990 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:21:11,993 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:21:11,995 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:21:11,997 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:21:12,000 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:21:12,002 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:21:12,009 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:21:12,013 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:21:12,018 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:21:12,025 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:21:12,031 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:21:12,035 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:21:12,040 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:21:12,045 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:21:12,049 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:21:12,052 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:21:12,055 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:21:12,058 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:21:12,063 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:21:12,067 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:21:12,071 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:21:12,074 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:21:12,076 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:21:12,078 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:21:12,081 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:21:12,083 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:21:12,086 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:21:12,092 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:21:12,096 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:21:12,100 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:21:12,103 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:21:12,107 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:21:12,111 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:21:12,118 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:21:12,120 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:21:12,123 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:21:12,125 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:21:12,128 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:21:12,130 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:21:12,131 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:21:12,132 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:21:12,134 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:21:12,135 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:21:12,137 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:21:12,138 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:21:12,140 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:21:12,141 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:21:12,142 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:21:12,145 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:21:12,147 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:21:12,148 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:21:12,148 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:21:12,150 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:21:12,151 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:21:12,152 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:21:12,153 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:21:12,154 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:21:12,155 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:21:12,159 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:21:12,294 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:21:12,547 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:21:13,035 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-28 08:21:14,057 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-28 08:21:14,114 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2027ca7e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7159464c, org.springframework.security.web.context.SecurityContextHolderFilter@25335fc4, org.springframework.security.web.header.HeaderWriterFilter@7009b327, org.springframework.security.web.authentication.logout.LogoutFilter@2b5d7fdf, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@3cad4d76, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24154f2f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3abf20bc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66338d10, org.springframework.security.web.session.SessionManagementFilter@1d08bbec, org.springframework.security.web.access.ExceptionTranslationFilter@27587f61, org.springframework.security.web.access.intercept.AuthorizationFilter@4cd3bf81]
2023-11-28 08:21:14,845 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 08:21:15,931 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:21:16,034 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-28 08:21:16,040 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-28 08:21:16,049 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-28 08:21:16,119 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-28 08:21:16,172 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-28 08:21:17,254 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:21:17,269 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 11.914 seconds (process running for 12.618)
2023-11-28 08:21:17,365 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:21:17,427 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:21:17,440 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:21:17,445 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:21:17,508 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:21:17,511 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:21:17,512 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:21:17,513 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:21:22,001 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-28 08:21:22,001 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-28 08:21:22,003 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-28 08:21:22,014 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-28 08:21:22,024 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-28 08:21:22,033 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-28 08:21:22,084 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 08:21:22,224 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:21:24,960 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-28 08:21:24,964 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:21:24,977 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:21:24,983 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:21:24,986 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:21:25,065 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-28 08:21:27,383 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:21:27,518 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:21:32,542 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-28 08:21:32,567 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /error
2023-11-28 08:21:32,572 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-28 08:21:32,572 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-28 08:27:39,507 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-28 08:27:39,507 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-28 08:27:39,508 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-28 08:27:39,509 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 08:27:39,511 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:27:39,569 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-28 08:27:39,570 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:27:39,574 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:27:39,576 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:27:39,576 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:27:39,602 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing GET /ecommerce/v1/payment/payment/8f98317-d29a-453c-8557-47d3f26040d1
2023-11-28 08:27:39,606 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:27:39,608 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:27:39,617 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured GET /ecommerce/v1/payment/payment/8f98317-d29a-453c-8557-47d3f26040d1
2023-11-28 08:27:39,622 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing GET /error
2023-11-28 08:27:39,626 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-28 08:27:39,627 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-28 08:27:57,128 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-28 08:27:57,131 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-28 08:27:57,142 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:27:57,145 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-28 08:27:57,148 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-11-28 08:28:13,028 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 25008 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:28:13,029 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:28:13,087 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:28:13,087 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:28:14,273 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:28:14,274 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:28:14,436 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 154 ms. Found 22 JPA repository interfaces.
2023-11-28 08:28:14,448 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:28:14,449 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:28:14,462 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,462 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,462 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,462 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,463 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,463 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,463 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,463 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,463 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,463 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,463 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,464 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,465 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,465 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,465 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,466 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:28:14,466 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2023-11-28 08:28:14,795 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=03f51965-15ee-36d8-8716-5e38c8fceadb
2023-11-28 08:28:15,495 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:28:15,516 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:28:15,517 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2428 ms
2023-11-28 08:28:16,008 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:28:16,008 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:28:16,008 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:28:16,017 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:28:16,189 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4a4e29d
2023-11-28 08:28:16,190 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:28:16,209 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:28:16,253 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.025s)
2023-11-28 08:28:16,295 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:28:16,296 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:28:16,412 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:28:16,474 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:28:16,476 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:28:16,745 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:28:17,831 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:28:17,845 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:28:17,848 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:28:17,850 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:28:17,850 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:28:17,851 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:28:17,852 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:28:17,852 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:28:17,853 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:28:17,853 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:28:17,854 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:28:17,855 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:28:17,855 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:28:17,856 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:28:17,856 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:28:17,857 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:28:17,857 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:28:17,858 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:28:17,858 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:28:17,859 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:28:17,859 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:28:17,860 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:28:17,861 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:28:17,861 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:28:17,862 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:28:17,862 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:28:17,862 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:28:17,865 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:28:17,867 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:28:17,868 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:28:17,869 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:28:17,871 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:28:17,872 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:28:17,873 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:28:17,874 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:28:17,875 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:28:17,876 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:28:17,877 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:28:17,879 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:28:17,879 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:28:17,881 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:28:17,882 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:28:17,883 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:28:17,884 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:28:17,886 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:28:17,887 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:28:17,889 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:28:17,890 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:28:17,892 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:28:17,893 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:28:17,894 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:28:17,897 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:28:17,897 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:28:17,902 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:28:17,904 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:28:17,908 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:28:17,914 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:28:17,918 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:28:17,922 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:28:17,927 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:28:17,930 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:28:17,933 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:28:17,935 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:28:17,938 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:28:17,940 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:28:17,943 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:28:17,945 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:28:17,949 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:28:17,951 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:28:17,953 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:28:17,955 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:28:17,957 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:28:17,959 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:28:17,963 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:28:17,966 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:28:17,969 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:28:17,973 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:28:17,976 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:28:17,980 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:28:17,984 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:28:17,990 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:28:17,992 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:28:17,993 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:28:17,994 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:28:17,996 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:28:17,997 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:28:17,998 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:28:17,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:28:17,999 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:28:18,000 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:28:18,001 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:28:18,002 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:28:18,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:28:18,003 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:28:18,004 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:28:18,005 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:28:18,006 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:28:18,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:28:18,007 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:28:18,009 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:28:18,010 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:28:18,011 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:28:18,012 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:28:18,013 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:28:18,014 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:28:18,017 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:28:18,136 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:28:18,332 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:28:19,259 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-28 08:28:19,296 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#5a2efd36:0/SimpleConnection@7c5094fa [delegate=amqp://guest@127.0.0.1:5672/, localPort=64264]
2023-11-28 08:28:19,488 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer': Unsatisfied dependency expressed through field 'shippingClient': No qualifying bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2023-11-28 08:28:19,503 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:28:19,505 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-28 08:28:19,508 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-28 08:28:19,536 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-28 08:28:19,562 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [restartedMain] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field shippingClient in tech.noetzold.anPerformaticEcommerce.message.consumer.OrderConsumer required a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' in your configuration.

2023-11-28 08:32:21,075 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 3724 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:32:21,077 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:32:21,144 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:32:21,144 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:32:22,409 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:32:22,411 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:32:22,581 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 164 ms. Found 22 JPA repository interfaces.
2023-11-28 08:32:22,594 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:32:22,595 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:32:22,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,612 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,613 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,614 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,615 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,615 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,615 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,615 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,615 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,616 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:32:22,616 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2023-11-28 08:32:22,907 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=03f51965-15ee-36d8-8716-5e38c8fceadb
2023-11-28 08:32:23,632 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:32:23,656 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:32:23,656 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2512 ms
2023-11-28 08:32:24,145 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:32:24,145 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:32:24,145 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:32:24,152 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:32:24,331 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2290338a
2023-11-28 08:32:24,333 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:32:24,351 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:32:24,388 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.018s)
2023-11-28 08:32:24,449 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:32:24,449 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:32:24,554 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:32:24,613 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:32:24,615 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:32:24,913 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:32:26,279 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:32:26,292 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:32:26,295 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:32:26,295 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:32:26,296 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:32:26,297 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:32:26,297 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:32:26,297 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:32:26,298 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:32:26,299 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:32:26,299 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:32:26,299 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:32:26,301 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:32:26,301 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:32:26,302 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:32:26,303 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:32:26,303 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:32:26,304 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:32:26,304 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:32:26,305 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:32:26,305 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:32:26,306 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:32:26,306 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:32:26,307 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:32:26,307 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:32:26,308 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:32:26,309 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:32:26,311 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:32:26,313 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:32:26,316 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:32:26,318 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:32:26,321 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:32:26,323 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:32:26,324 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:32:26,326 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:32:26,328 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:32:26,329 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:32:26,331 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:32:26,334 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:32:26,335 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:32:26,337 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:32:26,338 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:32:26,340 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:32:26,342 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:32:26,345 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:32:26,347 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:32:26,350 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:32:26,353 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:32:26,357 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:32:26,359 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:32:26,361 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:32:26,364 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:32:26,365 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:32:26,373 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:32:26,376 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:32:26,380 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:32:26,387 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:32:26,392 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:32:26,397 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:32:26,402 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:32:26,406 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:32:26,410 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:32:26,414 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:32:26,417 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:32:26,419 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:32:26,423 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:32:26,426 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:32:26,430 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:32:26,433 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:32:26,435 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:32:26,437 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:32:26,439 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:32:26,441 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:32:26,445 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:32:26,449 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:32:26,453 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:32:26,457 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:32:26,460 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:32:26,463 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:32:26,466 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:32:26,470 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:32:26,473 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:32:26,474 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:32:26,475 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:32:26,476 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:32:26,478 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:32:26,479 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:32:26,479 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:32:26,480 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:32:26,482 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:32:26,483 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:32:26,484 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:32:26,486 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:32:26,487 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:32:26,488 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:32:26,489 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:32:26,490 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:32:26,492 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:32:26,493 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:32:26,494 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:32:26,496 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:32:26,497 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:32:26,499 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:32:26,501 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:32:26,502 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:32:26,506 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:32:26,634 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:32:26,866 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:32:27,985 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-28 08:32:28,034 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#5e43efa9:0/SimpleConnection@450373a1 [delegate=amqp://guest@127.0.0.1:5672/, localPort=64580]
2023-11-28 08:32:28,238 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer' defined in file [C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes\tech\noetzold\anPerformaticEcommerce\message\consumer\OrderConsumer.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2023-11-28 08:32:28,253 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:32:28,257 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-28 08:32:28,259 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-28 08:32:28,284 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-28 08:32:28,308 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [restartedMain] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in tech.noetzold.anPerformaticEcommerce.message.consumer.OrderConsumer required a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' that could not be found.


Action:

Consider defining a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' in your configuration.

2023-11-28 08:34:45,443 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 28028 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:34:45,444 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:34:45,493 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:34:45,493 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:34:46,606 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:34:46,608 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:34:46,766 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 152 ms. Found 22 JPA repository interfaces.
2023-11-28 08:34:46,779 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:34:46,780 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:34:46,794 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,795 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,796 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,797 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,798 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,799 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:34:46,799 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2023-11-28 08:34:47,057 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=03f51965-15ee-36d8-8716-5e38c8fceadb
2023-11-28 08:34:47,756 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:34:47,775 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:34:47,775 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2282 ms
2023-11-28 08:34:48,211 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:34:48,212 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:34:48,212 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:34:48,218 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:34:48,361 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5b08481b
2023-11-28 08:34:48,363 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:34:48,376 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:34:48,409 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.016s)
2023-11-28 08:34:48,447 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:34:48,448 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:34:48,535 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:34:48,584 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:34:48,586 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:34:48,895 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:34:50,219 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:34:50,235 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:34:50,239 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:34:50,240 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:34:50,240 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:34:50,241 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:34:50,242 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:34:50,242 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:34:50,243 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:34:50,244 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:34:50,245 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:34:50,246 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:34:50,246 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:34:50,247 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:34:50,248 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:34:50,249 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:34:50,249 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:34:50,250 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:34:50,251 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:34:50,252 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:34:50,253 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:34:50,254 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:34:50,255 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:34:50,256 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:34:50,257 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:34:50,257 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:34:50,265 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:34:50,269 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:34:50,273 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:34:50,275 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:34:50,277 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:34:50,279 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:34:50,281 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:34:50,282 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:34:50,283 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:34:50,285 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:34:50,287 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:34:50,288 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:34:50,291 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:34:50,292 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:34:50,293 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:34:50,294 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:34:50,295 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:34:50,296 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:34:50,298 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:34:50,299 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:34:50,302 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:34:50,304 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:34:50,306 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:34:50,308 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:34:50,309 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:34:50,312 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:34:50,313 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:34:50,319 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:34:50,321 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:34:50,325 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:34:50,331 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:34:50,343 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:34:50,347 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:34:50,351 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:34:50,355 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:34:50,358 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:34:50,362 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:34:50,364 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:34:50,367 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:34:50,373 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:34:50,375 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:34:50,379 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:34:50,382 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:34:50,384 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:34:50,386 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:34:50,389 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:34:50,391 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:34:50,394 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:34:50,398 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:34:50,402 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:34:50,407 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:34:50,412 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:34:50,415 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:34:50,419 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:34:50,423 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:34:50,425 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:34:50,427 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:34:50,429 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:34:50,430 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:34:50,431 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:34:50,432 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:34:50,433 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:34:50,434 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:34:50,436 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:34:50,437 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:34:50,438 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:34:50,441 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:34:50,441 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:34:50,443 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:34:50,444 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:34:50,445 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:34:50,445 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:34:50,446 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:34:50,447 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:34:50,449 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:34:50,452 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:34:50,455 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:34:50,457 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:34:50,459 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:34:50,463 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:34:50,582 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:34:50,794 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:34:51,761 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-28 08:34:51,804 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#29b21e0b:0/SimpleConnection@7d7b04d8 [delegate=amqp://guest@127.0.0.1:5672/, localPort=64746]
2023-11-28 08:34:51,965 WARN org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext [restartedMain] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'orderConsumer' defined in file [C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes\tech\noetzold\anPerformaticEcommerce\message\consumer\OrderConsumer.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2023-11-28 08:34:51,983 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:34:51,985 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown initiated...
2023-11-28 08:34:51,988 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Shutdown completed.
2023-11-28 08:34:52,009 INFO org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger [restartedMain] 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2023-11-28 08:34:52,034 ERROR org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter [restartedMain] 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in tech.noetzold.anPerformaticEcommerce.message.consumer.OrderConsumer required a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' that could not be found.


Action:

Consider defining a bean of type 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' in your configuration.

2023-11-28 08:36:44,949 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Starting AnPerformaticEcommerceApplication using Java 17.0.7 with PID 14364 (C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce\target\classes started by Darlan in C:\Users\Usuário\Documents\Projetos\GitHub\anPerformaticEcommerce)
2023-11-28 08:36:44,952 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] No active profile set, falling back to 1 default profile: "default"
2023-11-28 08:36:45,005 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-11-28 08:36:45,006 INFO org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor [restartedMain] For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-11-28 08:36:46,136 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:36:46,138 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-11-28 08:36:46,315 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 171 ms. Found 22 JPA repository interfaces.
2023-11-28 08:36:46,328 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Multiple Spring Data modules found, entering strict repository configuration mode
2023-11-28 08:36:46,329 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2023-11-28 08:36:46,344 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.AttributeModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,344 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.CategoryModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.KeyWordModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.MediaModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.ProductModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.catalog.SkuModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CommerceItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.CustomerModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,345 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.BoletoModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,346 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.CardModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,346 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.InvoiceModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,346 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaymentModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,346 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PaypalModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,346 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.payment.PixModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,347 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.CouponModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,347 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.promotion.PromotionModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,347 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.AddressModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,347 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.shipping.ShippingModelRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,347 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.repository.ShopCartRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,347 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.TokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,348 INFO org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport [restartedMain] Spring Data Redis - Could not safely identify store assignment for repository candidate interface tech.noetzold.anPerformaticEcommerce.security.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2023-11-28 08:36:46,348 INFO org.springframework.data.repository.config.RepositoryConfigurationDelegate [restartedMain] Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2023-11-28 08:36:46,636 INFO org.springframework.cloud.context.scope.GenericScope [restartedMain] BeanFactory id=98d41010-d2c2-3c2b-9a46-89942fe62352
2023-11-28 08:36:46,744 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.CatalogClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-28 08:36:46,745 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.LoginClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-28 08:36:46,747 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PaymentClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-28 08:36:46,748 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.PromotionClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-28 08:36:46,749 INFO org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [restartedMain] Bean 'tech.noetzold.anPerformaticEcommerce.client.ShippingClient' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-11-28 08:36:47,311 WARN io.undertow.websockets.jsr [restartedMain] UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used
2023-11-28 08:36:47,329 INFO io.undertow.servlet [restartedMain] Initializing Spring embedded WebApplicationContext
2023-11-28 08:36:47,329 INFO org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext [restartedMain] Root WebApplicationContext: initialization completed in 2323 ms
2023-11-28 08:36:47,772 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] Flyway Community Edition 9.16.3 by Redgate
2023-11-28 08:36:47,773 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] See release notes here: https://rd.gt/416ObMi
2023-11-28 08:36:47,773 INFO org.flywaydb.core.internal.license.VersionPrinter [restartedMain] 
2023-11-28 08:36:47,780 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Starting...
2023-11-28 08:36:47,926 INFO com.zaxxer.hikari.pool.HikariPool [restartedMain] HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c6cf88d
2023-11-28 08:36:47,928 INFO com.zaxxer.hikari.HikariDataSource [restartedMain] HikariPool-1 - Start completed.
2023-11-28 08:36:47,942 INFO org.flywaydb.core.internal.database.base.BaseDatabaseType [restartedMain] Database: jdbc:postgresql://localhost:5432/performance-ecommerce (PostgreSQL 14.5)
2023-11-28 08:36:47,979 INFO org.flywaydb.core.internal.command.DbValidate [restartedMain] Successfully validated 1 migration (execution time 00:00.020s)
2023-11-28 08:36:48,024 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Current version of schema "public": 1
2023-11-28 08:36:48,025 INFO org.flywaydb.core.internal.command.DbMigrate [restartedMain] Schema "public" is up to date. No migration necessary.
2023-11-28 08:36:48,111 INFO org.hibernate.jpa.internal.util.LogHelper [restartedMain] HHH000204: Processing PersistenceUnitInfo [name: default]
2023-11-28 08:36:48,170 INFO org.hibernate.Version [restartedMain] HHH000412: Hibernate ORM core version 6.2.13.Final
2023-11-28 08:36:48,173 INFO org.hibernate.cfg.Environment [restartedMain] HHH000406: Using bytecode reflection optimizer
2023-11-28 08:36:48,448 INFO org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo [restartedMain] No LoadTimeWeaver setup: ignoring JPA class transformer
2023-11-28 08:36:49,743 INFO org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [restartedMain] HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2023-11-28 08:36:49,756 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model drop constraint if exists FKbr76senick661p5fnknu3dwrp
2023-11-28 08:36:49,758 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model drop constraint if exists FK80grtouopn7ydx477mrlgbvcr
2023-11-28 08:36:49,759 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item drop constraint if exists FK7caxo7qbj4ket6jf640cd1hc8
2023-11-28 08:36:49,760 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model drop constraint if exists FK8ifqwew5vboya8m5e994i9tbi
2023-11-28 08:36:49,760 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKqps9h5oqvqcfce1demsq5is2x
2023-11-28 08:36:49,762 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model drop constraint if exists FKb2t5qtjh93cd3o9d8tritleus
2023-11-28 08:36:49,762 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model drop constraint if exists FK2h2fh2oyek2vtme4834l5lfu3
2023-11-28 08:36:49,763 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model drop constraint if exists FK86f9g2ray6cm9tsoqadepoqj2
2023-11-28 08:36:49,763 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model drop constraint if exists FKfbup8yt2g8mp53998osov73gy
2023-11-28 08:36:49,764 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK2qt1wmirnxeyxa02rr73utabq
2023-11-28 08:36:49,764 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items drop constraint if exists FK3jb5cj240oaae1qlhxn7abhel
2023-11-28 08:36:49,765 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK8vclmwfyyq0xw9xy2u5ppfnee
2023-11-28 08:36:49,765 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models drop constraint if exists FK4yddwr4eux3fgagdwm3ogx6xk
2023-11-28 08:36:49,765 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FK3uaq9gvu4mhywro5qvw0u882t
2023-11-28 08:36:49,767 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models drop constraint if exists FKeerqa4tpt6uwr7illn2cmqh8
2023-11-28 08:36:49,767 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK6yee0g2g41rmxf5if43ph8niu
2023-11-28 08:36:49,768 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FK3ytgr6q6ppah67l701vhvwlds
2023-11-28 08:36:49,768 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKlhogaugwg30dw9j51ys10bd4m
2023-11-28 08:36:49,769 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKkk5dy3dnhuv5tekwvw8m10c46
2023-11-28 08:36:49,769 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model drop constraint if exists FKgtjr429aekbxx97jstpw8c0fr
2023-11-28 08:36:49,769 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model drop constraint if exists FKc8fgrbgh4j89d3p2lp7orfiva
2023-11-28 08:36:49,769 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model drop constraint if exists FKjepm086mt6ek9de1flybw61k1
2023-11-28 08:36:49,770 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart drop constraint if exists FKe82r69mwi1c25eboc6k4dlwps
2023-11-28 08:36:49,770 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model drop constraint if exists FK4r5i5utgbbad69wxic8tjl1sd
2023-11-28 08:36:49,771 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token drop constraint if exists FKiblu4cjwvyntq3ugo31klp1c6
2023-11-28 08:36:49,771 DEBUG org.hibernate.SQL [restartedMain] drop table if exists _user cascade
2023-11-28 08:36:49,774 DEBUG org.hibernate.SQL [restartedMain] drop table if exists address_model cascade
2023-11-28 08:36:49,776 DEBUG org.hibernate.SQL [restartedMain] drop table if exists attribute_model cascade
2023-11-28 08:36:49,777 DEBUG org.hibernate.SQL [restartedMain] drop table if exists boleto_model cascade
2023-11-28 08:36:49,779 DEBUG org.hibernate.SQL [restartedMain] drop table if exists card_model cascade
2023-11-28 08:36:49,780 DEBUG org.hibernate.SQL [restartedMain] drop table if exists category_model cascade
2023-11-28 08:36:49,782 DEBUG org.hibernate.SQL [restartedMain] drop table if exists commerce_item cascade
2023-11-28 08:36:49,784 DEBUG org.hibernate.SQL [restartedMain] drop table if exists coupon_model cascade
2023-11-28 08:36:49,784 DEBUG org.hibernate.SQL [restartedMain] drop table if exists customer_model cascade
2023-11-28 08:36:49,785 DEBUG org.hibernate.SQL [restartedMain] drop table if exists invoice_model cascade
2023-11-28 08:36:49,787 DEBUG org.hibernate.SQL [restartedMain] drop table if exists key_word_model cascade
2023-11-28 08:36:49,788 DEBUG org.hibernate.SQL [restartedMain] drop table if exists media_model cascade
2023-11-28 08:36:49,789 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model cascade
2023-11-28 08:36:49,791 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_commerce_items cascade
2023-11-28 08:36:49,793 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_payment_models cascade
2023-11-28 08:36:49,793 DEBUG org.hibernate.SQL [restartedMain] drop table if exists order_model_shipping_models cascade
2023-11-28 08:36:49,794 DEBUG org.hibernate.SQL [restartedMain] drop table if exists payment_model cascade
2023-11-28 08:36:49,795 DEBUG org.hibernate.SQL [restartedMain] drop table if exists paypal_model cascade
2023-11-28 08:36:49,797 DEBUG org.hibernate.SQL [restartedMain] drop table if exists pix_model cascade
2023-11-28 08:36:49,798 DEBUG org.hibernate.SQL [restartedMain] drop table if exists product_model cascade
2023-11-28 08:36:49,799 DEBUG org.hibernate.SQL [restartedMain] drop table if exists promotion_model cascade
2023-11-28 08:36:49,801 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shipping_model cascade
2023-11-28 08:36:49,803 DEBUG org.hibernate.SQL [restartedMain] drop table if exists shop_cart cascade
2023-11-28 08:36:49,804 DEBUG org.hibernate.SQL [restartedMain] drop table if exists sku_model cascade
2023-11-28 08:36:49,806 DEBUG org.hibernate.SQL [restartedMain] drop table if exists token cascade
2023-11-28 08:36:49,808 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists _user_seq
2023-11-28 08:36:49,809 DEBUG org.hibernate.SQL [restartedMain] drop sequence if exists token_seq
2023-11-28 08:36:49,816 DEBUG org.hibernate.SQL [restartedMain] create sequence _user_seq start with 1 increment by 50
2023-11-28 08:36:49,819 DEBUG org.hibernate.SQL [restartedMain] create sequence token_seq start with 1 increment by 50
2023-11-28 08:36:49,823 DEBUG org.hibernate.SQL [restartedMain] create table _user (id integer not null, email varchar(255), firstname varchar(255), lastname varchar(255), password varchar(255), role varchar(255) check (role in ('USER','ADMIN','MANAGER')), primary key (id))
2023-11-28 08:36:49,829 DEBUG org.hibernate.SQL [restartedMain] create table address_model (final_shipping_cost float(53) not null, risk_area boolean not null, delivery_date timestamp(6), address_id uuid not null, address1 varchar(255), address2 varchar(255), city varchar(255), country varchar(255), first_name varchar(255), last_name varchar(255), phone_number varchar(255), posta_code varchar(255), uf varchar(255), user_id varchar(255), primary key (address_id))
2023-11-28 08:36:49,834 DEBUG org.hibernate.SQL [restartedMain] create table attribute_model (integrated boolean, integrated_date timestamp(6), attribute_id uuid not null, sku_id uuid, description varchar(255), hex_code varchar(255), image_url varchar(255), internal_name varchar(255), name varchar(255), priority varchar(255), type varchar(255), primary key (attribute_id))
2023-11-28 08:36:49,838 DEBUG org.hibernate.SQL [restartedMain] create table boleto_model (juros_atraso float(53) not null, multa float(53) not null, valor float(53) not null, data_emissao timestamp(6), data_vencimento timestamp(6), boleto_id uuid not null, beneficiario_cnpj_cpf varchar(255), beneficiario_endereco varchar(255), beneficiario_nome varchar(255), codigo_autenticacao varchar(255), codigo_banco varchar(255), codigo_de_barras varchar(255), identificacao_boleto varchar(255), informacoes_contato varchar(255), instrucoes_pagamento varchar(255), linha_digitavel varchar(255), local_pagamento varchar(255), logo_banco varchar(255), numero_documento varchar(255), sacado_cnpj_cpf varchar(255), sacado_endereco varchar(255), sacado_nome varchar(255), primary key (boleto_id))
2023-11-28 08:36:49,842 DEBUG org.hibernate.SQL [restartedMain] create table card_model (card_type smallint check (card_type between 0 and 1), card_id uuid not null, card_holder_name varchar(255), card_number varchar(255), cvv varchar(255), expiration_date varchar(255), primary key (card_id))
2023-11-28 08:36:49,845 DEBUG org.hibernate.SQL [restartedMain] create table category_model (integrated boolean, integrated_date timestamp(6), category_id uuid not null, name varchar(255), primary key (category_id))
2023-11-28 08:36:49,848 DEBUG org.hibernate.SQL [restartedMain] create table commerce_item (enable boolean not null, enabled_date date, commerce_item_id uuid not null, sku_model_sku_id uuid unique, primary key (commerce_item_id))
2023-11-28 08:36:49,851 DEBUG org.hibernate.SQL [restartedMain] create table coupon_model (coupon_id uuid not null, promo_id uuid, code varchar(255), primary key (coupon_id))
2023-11-28 08:36:49,853 DEBUG org.hibernate.SQL [restartedMain] create table customer_model (born_date timestamp(6), register_date timestamp(6), customer_id uuid not null, user_id varchar(255), primary key (customer_id))
2023-11-28 08:36:49,855 DEBUG org.hibernate.SQL [restartedMain] create table invoice_model (discount_amount float(53) not null, total_amount float(53) not null, invoice_date timestamp(6), customer_id uuid, invoice_id uuid not null, payment_id uuid, buyer_address varchar(255), buyer_name varchar(255), invoice_number varchar(255), seller_address varchar(255), seller_name varchar(255), items_id varchar(255) array, primary key (invoice_id))
2023-11-28 08:36:49,859 DEBUG org.hibernate.SQL [restartedMain] create table key_word_model (integrated boolean, integrated_date timestamp(6), key_word_id uuid not null, sku_id uuid, key_word varchar(255), primary key (key_word_id))
2023-11-28 08:36:49,861 DEBUG org.hibernate.SQL [restartedMain] create table media_model (integrated boolean, integrated_date timestamp(6), media_id uuid not null, sku_id uuid, large_image_url varchar(255), medium_image_url varchar(255), small_image_url varchar(255), thumbnail_imageurl varchar(255), zoom_image_url varchar(255), primary key (media_id))
2023-11-28 08:36:49,865 DEBUG org.hibernate.SQL [restartedMain] create table order_model (init_date date, last_update date, order_state smallint check (order_state between 0 and 4), customer_model_customer_id uuid, order_id uuid not null, primary key (order_id))
2023-11-28 08:36:49,867 DEBUG org.hibernate.SQL [restartedMain] create table order_model_commerce_items (commerce_items_commerce_item_id uuid not null unique, order_model_order_id uuid not null)
2023-11-28 08:36:49,869 DEBUG org.hibernate.SQL [restartedMain] create table order_model_payment_models (order_model_order_id uuid not null, payment_models_payment_id uuid not null unique)
2023-11-28 08:36:49,871 DEBUG org.hibernate.SQL [restartedMain] create table order_model_shipping_models (order_model_order_id uuid not null, shipping_models_shipping_id uuid not null unique)
2023-11-28 08:36:49,873 DEBUG org.hibernate.SQL [restartedMain] create table payment_model (dicount_amount float(53) not null, has_errors boolean not null, payment_method smallint check (payment_method between 0 and 4), payment_state smallint check (payment_state between 0 and 5), total_amount float(53) not null, register_date timestamp(6), boleto_model_id uuid, card_model_id uuid, customer_id uuid, payment_id uuid not null, paypal_model_id uuid, pix_model_id uuid, order_id varchar(255), primary key (payment_id))
2023-11-28 08:36:49,876 DEBUG org.hibernate.SQL [restartedMain] create table paypal_model (paypal_id uuid not null, descricao varchar(255), email varchar(255), identificador_transacao varchar(255), primary key (paypal_id))
2023-11-28 08:36:49,880 DEBUG org.hibernate.SQL [restartedMain] create table pix_model (pix_id uuid not null, chave_pix varchar(255), descricao varchar(255), identificador_transacao varchar(255), primary key (pix_id))
2023-11-28 08:36:49,885 DEBUG org.hibernate.SQL [restartedMain] create table product_model (allow_automatic_sku_marketplace_creation boolean, calculated_price boolean, has_variations boolean, integrated boolean, warranty_time integer, integrated_date timestamp(6), category_id uuid, product_id uuid not null, brand varchar(255), code varchar(255), definition_price_scope varchar(255), description varchar(255), gender varchar(255), message varchar(255), model varchar(255), title varchar(255), video_url varchar(255), warranty_text varchar(255), height bytea, length bytea, price_factor bytea, weight bytea, width bytea, primary key (product_id))
2023-11-28 08:36:49,889 DEBUG org.hibernate.SQL [restartedMain] create table promotion_model (discount_limit float(53), promo_comp_type float(53), promo_dtl_id float(53), promotion_type smallint check (promotion_type between 0 and 2), value float(53), value_type smallint check (value_type between 0 and 1), end_date timestamp(6), start_date timestamp(6), promo_id uuid not null, apply_to_code varchar(255), exception_parent_id varchar(255), promo_comp_desc varchar(255), promo_description varchar(255), promo_name varchar(255), rules varchar(255), primary key (promo_id))
2023-11-28 08:36:49,893 DEBUG org.hibernate.SQL [restartedMain] create table shipping_model (shipping_method smallint check (shipping_method between 0 and 2), state smallint check (state between 0 and 6), address_model_id uuid, shipping_id uuid not null, carrier_code varchar(255), order_id varchar(255), tracking_url varchar(255), user_id varchar(255), primary key (shipping_id))
2023-11-28 08:36:49,897 DEBUG org.hibernate.SQL [restartedMain] create table shop_cart (order_order_id uuid unique, shop_cart_id uuid not null, primary key (shop_cart_id))
2023-11-28 08:36:49,900 DEBUG org.hibernate.SQL [restartedMain] create table sku_model (enabled boolean, height numeric(38,2), integrated boolean, length numeric(38,2), price numeric(38,2), sale_price numeric(38,2), weight numeric(38,2), width numeric(38,2), integrated_date timestamp(6), seller_id bigint, stock_level bigint, product_id uuid, sku_id uuid not null, display_name varchar(255), ean varchar(255), lwh_uom varchar(255), partner_id varchar(255), weight_uom varchar(255), primary key (sku_id))
2023-11-28 08:36:49,903 DEBUG org.hibernate.SQL [restartedMain] create table token (expired boolean not null, id integer not null, revoked boolean not null, user_id integer, token varchar(255) unique, token_type varchar(255) check (token_type in ('BEARER')), primary key (id))
2023-11-28 08:36:49,908 DEBUG org.hibernate.SQL [restartedMain] alter table if exists attribute_model add constraint FKbr76senick661p5fnknu3dwrp foreign key (sku_id) references sku_model
2023-11-28 08:36:49,909 DEBUG org.hibernate.SQL [restartedMain] alter table if exists card_model add constraint FK80grtouopn7ydx477mrlgbvcr foreign key (card_id) references customer_model
2023-11-28 08:36:49,911 DEBUG org.hibernate.SQL [restartedMain] alter table if exists commerce_item add constraint FK7caxo7qbj4ket6jf640cd1hc8 foreign key (sku_model_sku_id) references sku_model
2023-11-28 08:36:49,912 DEBUG org.hibernate.SQL [restartedMain] alter table if exists coupon_model add constraint FK8ifqwew5vboya8m5e994i9tbi foreign key (promo_id) references promotion_model
2023-11-28 08:36:49,913 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKqps9h5oqvqcfce1demsq5is2x foreign key (customer_id) references customer_model
2023-11-28 08:36:49,915 DEBUG org.hibernate.SQL [restartedMain] alter table if exists invoice_model add constraint FKb2t5qtjh93cd3o9d8tritleus foreign key (payment_id) references payment_model
2023-11-28 08:36:49,916 DEBUG org.hibernate.SQL [restartedMain] alter table if exists key_word_model add constraint FK2h2fh2oyek2vtme4834l5lfu3 foreign key (sku_id) references sku_model
2023-11-28 08:36:49,917 DEBUG org.hibernate.SQL [restartedMain] alter table if exists media_model add constraint FK86f9g2ray6cm9tsoqadepoqj2 foreign key (sku_id) references sku_model
2023-11-28 08:36:49,918 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model add constraint FKfbup8yt2g8mp53998osov73gy foreign key (customer_model_customer_id) references customer_model
2023-11-28 08:36:49,919 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK2qt1wmirnxeyxa02rr73utabq foreign key (commerce_items_commerce_item_id) references commerce_item
2023-11-28 08:36:49,921 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_commerce_items add constraint FK3jb5cj240oaae1qlhxn7abhel foreign key (order_model_order_id) references order_model
2023-11-28 08:36:49,922 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK8vclmwfyyq0xw9xy2u5ppfnee foreign key (payment_models_payment_id) references payment_model
2023-11-28 08:36:49,923 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_payment_models add constraint FK4yddwr4eux3fgagdwm3ogx6xk foreign key (order_model_order_id) references order_model
2023-11-28 08:36:49,923 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FK3uaq9gvu4mhywro5qvw0u882t foreign key (shipping_models_shipping_id) references shipping_model
2023-11-28 08:36:49,925 DEBUG org.hibernate.SQL [restartedMain] alter table if exists order_model_shipping_models add constraint FKeerqa4tpt6uwr7illn2cmqh8 foreign key (order_model_order_id) references order_model
2023-11-28 08:36:49,926 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK6yee0g2g41rmxf5if43ph8niu foreign key (boleto_model_id) references boleto_model
2023-11-28 08:36:49,927 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FK3ytgr6q6ppah67l701vhvwlds foreign key (card_model_id) references card_model
2023-11-28 08:36:49,928 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKlhogaugwg30dw9j51ys10bd4m foreign key (customer_id) references customer_model
2023-11-28 08:36:49,928 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKkk5dy3dnhuv5tekwvw8m10c46 foreign key (paypal_model_id) references paypal_model
2023-11-28 08:36:49,929 DEBUG org.hibernate.SQL [restartedMain] alter table if exists payment_model add constraint FKgtjr429aekbxx97jstpw8c0fr foreign key (pix_model_id) references pix_model
2023-11-28 08:36:49,931 DEBUG org.hibernate.SQL [restartedMain] alter table if exists product_model add constraint FKc8fgrbgh4j89d3p2lp7orfiva foreign key (category_id) references category_model
2023-11-28 08:36:49,932 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shipping_model add constraint FKjepm086mt6ek9de1flybw61k1 foreign key (address_model_id) references address_model
2023-11-28 08:36:49,934 DEBUG org.hibernate.SQL [restartedMain] alter table if exists shop_cart add constraint FKe82r69mwi1c25eboc6k4dlwps foreign key (order_order_id) references order_model
2023-11-28 08:36:49,935 DEBUG org.hibernate.SQL [restartedMain] alter table if exists sku_model add constraint FK4r5i5utgbbad69wxic8tjl1sd foreign key (product_id) references product_model
2023-11-28 08:36:49,936 DEBUG org.hibernate.SQL [restartedMain] alter table if exists token add constraint FKiblu4cjwvyntq3ugo31klp1c6 foreign key (user_id) references _user
2023-11-28 08:36:49,939 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [restartedMain] Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 08:36:50,069 DEBUG org.hibernate.stat.internal.StatisticsInitiator [restartedMain] Statistics initialized [enabled=false]
2023-11-28 08:36:50,311 INFO org.springframework.data.jpa.repository.query.QueryEnhancerFactory [restartedMain] Hibernate is in classpath; If applicable, HQL parser will be used.
2023-11-28 08:36:51,348 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Attempting to connect to: [localhost:5672]
2023-11-28 08:36:51,399 INFO org.springframework.amqp.rabbit.connection.CachingConnectionFactory [restartedMain] Created new connection: rabbitConnectionFactory#319dcf67:0/SimpleConnection@218ca43d [delegate=amqp://guest@127.0.0.1:5672/, localPort=64890]
2023-11-28 08:36:51,678 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [restartedMain] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-11-28 08:36:51,742 INFO org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer [restartedMain] LiveReload server is running on port 35729
2023-11-28 08:36:52,753 INFO org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver [restartedMain] Exposing 16 endpoint(s) beneath base path '/actuator'
2023-11-28 08:36:52,814 INFO org.springframework.security.web.DefaultSecurityFilterChain [restartedMain] Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@490273b8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2c1bd144, org.springframework.security.web.context.SecurityContextHolderFilter@31888bac, org.springframework.security.web.header.HeaderWriterFilter@367b893b, org.springframework.security.web.authentication.logout.LogoutFilter@2c2f5d5b, tech.noetzold.anPerformaticEcommerce.security.configuration.JwtAuthenticationFilter@40d97b3a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@224b2c84, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b7aec92, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3aa1b607, org.springframework.security.web.session.SessionManagementFilter@7889f6a7, org.springframework.security.web.access.ExceptionTranslationFilter@2248929b, org.springframework.security.web.access.intercept.AuthorizationFilter@45841f1b]
2023-11-28 08:36:54,406 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:36:54,531 INFO io.undertow [restartedMain] starting server: Undertow - 2.3.10.Final
2023-11-28 08:36:54,536 INFO org.xnio [restartedMain] XNIO version 3.8.8.Final
2023-11-28 08:36:54,545 INFO org.xnio.nio [restartedMain] XNIO NIO Implementation Version 3.8.8.Final
2023-11-28 08:36:54,614 INFO org.jboss.threads [restartedMain] JBoss Threads version 3.5.0.Final
2023-11-28 08:36:54,666 INFO org.springframework.boot.web.embedded.undertow.UndertowWebServer [restartedMain] Undertow started on port(s) 8091 (http)
2023-11-28 08:36:55,749 INFO org.springframework.cloud.commons.util.InetUtils [restartedMain] Cannot determine local hostname
2023-11-28 08:36:55,758 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYMENT]
2023-11-28 08:36:55,761 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PAYPAL]
2023-11-28 08:36:55,762 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CARD]
2023-11-28 08:36:55,764 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [INVOICE]
2023-11-28 08:36:55,766 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ATTRIBUTE]
2023-11-28 08:36:55,767 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CATEGORY]
2023-11-28 08:36:55,768 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-1] SimpleConsumer [queue=PAYPAL, index=0, consumerTag=amq.ctag-wrdHokUkWc_HEYw3onSaNg identity=6b4c385f] started
2023-11-28 08:36:55,768 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-1] SimpleConsumer [queue=PAYMENT, index=0, consumerTag=amq.ctag-shZw6ABnLx3r4DaImXxkqw identity=6ed5015a] started
2023-11-28 08:36:55,768 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-1] SimpleConsumer [queue=CARD, index=0, consumerTag=amq.ctag-PoeWimpsHlEK4jIn9NSyjw identity=186efdb8] started
2023-11-28 08:36:55,769 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [KEY_WORD]
2023-11-28 08:36:55,769 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-1] SimpleConsumer [queue=INVOICE, index=0, consumerTag=amq.ctag-Mg-snv_EmgRJR-9BxDmb6Q identity=1c0790bf] started
2023-11-28 08:36:55,771 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-1] SimpleConsumer [queue=ATTRIBUTE, index=0, consumerTag=amq.ctag-_vwBvN7GTsErfwv50Nf16g identity=29c45675] started
2023-11-28 08:36:55,772 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [MEDIA]
2023-11-28 08:36:55,773 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-1] SimpleConsumer [queue=CATEGORY, index=0, consumerTag=amq.ctag-mBfc4Vtz9CMymDvd6jbNZw identity=b69f3d5] started
2023-11-28 08:36:55,773 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PRODUCT]
2023-11-28 08:36:55,775 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-1] SimpleConsumer [queue=KEY_WORD, index=0, consumerTag=amq.ctag-bzRh0m6TEQw7-IHJDQiLpw identity=1db5cfe4] started
2023-11-28 08:36:55,775 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SKU]
2023-11-28 08:36:55,776 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-1] SimpleConsumer [queue=MEDIA, index=0, consumerTag=amq.ctag-H-TySWyU-uayLg6T4yir1A identity=62c16b5d] started
2023-11-28 08:36:55,777 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COMMERCE_ITEM]
2023-11-28 08:36:55,779 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-1] SimpleConsumer [queue=PRODUCT, index=0, consumerTag=amq.ctag-Nkxhi-EWf4FHhLwEqS2atg identity=6d62c5eb] started
2023-11-28 08:36:55,779 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [CUSTOMER]
2023-11-28 08:36:55,780 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-1] SimpleConsumer [queue=SKU, index=0, consumerTag=amq.ctag-tLWmp7WE-c5C6hIoNSmvUg identity=6607a937] started
2023-11-28 08:36:55,781 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHIPPING]
2023-11-28 08:36:55,782 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ORDER]
2023-11-28 08:36:55,783 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-1] SimpleConsumer [queue=COMMERCE_ITEM, index=0, consumerTag=amq.ctag-Ls1BbC5rzkbz_cPr-wjLWg identity=26673f4c] started
2023-11-28 08:36:55,784 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [SHOP_CART]
2023-11-28 08:36:55,784 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-1] SimpleConsumer [queue=CUSTOMER, index=0, consumerTag=amq.ctag-xy7aj0B_J8Qs7Vfc6WUpPA identity=19109a1] started
2023-11-28 08:36:55,786 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-1] SimpleConsumer [queue=SHIPPING, index=0, consumerTag=amq.ctag-hzZK76V7hniZMSZ5lUwrPg identity=503a871f] started
2023-11-28 08:36:55,786 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [BOLETO]
2023-11-28 08:36:55,787 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-1] SimpleConsumer [queue=ORDER, index=0, consumerTag=amq.ctag-FjTtIJJsLv4l1PkfmODqvg identity=1326bbd] started
2023-11-28 08:36:55,788 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PROMOTION]
2023-11-28 08:36:55,789 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [ADDRESS]
2023-11-28 08:36:55,789 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-1] SimpleConsumer [queue=SHOP_CART, index=0, consumerTag=amq.ctag-f3ZBJ7prEMBJVzj4xRIPZw identity=328b651f] started
2023-11-28 08:36:55,792 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [PIX]
2023-11-28 08:36:55,792 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-1] SimpleConsumer [queue=BOLETO, index=0, consumerTag=amq.ctag-SpBgEnBbdA9IVDlAUOCJBw identity=466afa54] started
2023-11-28 08:36:55,793 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-1] SimpleConsumer [queue=PROMOTION, index=0, consumerTag=amq.ctag-_GsmCKeDAAiKWEbxBamyuw identity=3896848d] started
2023-11-28 08:36:55,794 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-1] SimpleConsumer [queue=ADDRESS, index=0, consumerTag=amq.ctag-QJjmZchSRR52iHReQzGFQQ identity=3c5339d3] started
2023-11-28 08:36:55,794 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [restartedMain] Container initialized for queues: [COUPON]
2023-11-28 08:36:55,798 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-1] SimpleConsumer [queue=PIX, index=0, consumerTag=amq.ctag-sobitzj-E9SC2zM14rSVVg identity=30c18e0e] started
2023-11-28 08:36:55,799 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-1] SimpleConsumer [queue=COUPON, index=0, consumerTag=amq.ctag-b_JAyK-wUfd5HamWi3olPQ identity=8729034] started
2023-11-28 08:36:55,806 INFO tech.noetzold.anPerformaticEcommerce.AnPerformaticEcommerceApplication [restartedMain] Started AnPerformaticEcommerceApplication in 12.258 seconds (process running for 12.862)
2023-11-28 08:36:55,893 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:36:55,949 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:36:55,962 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:36:55,966 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:36:56,033 DEBUG org.hibernate.SQL [restartedMain] select nextval('_user_seq')
2023-11-28 08:36:56,035 DEBUG org.hibernate.SQL [restartedMain] select nextval('token_seq')
2023-11-28 08:36:56,036 DEBUG org.hibernate.SQL [restartedMain] insert into _user (email,firstname,lastname,password,role,id) values (?,?,?,?,?,?)
2023-11-28 08:36:56,037 DEBUG org.hibernate.SQL [restartedMain] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:36:56,249 INFO tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer [pool-3-thread-13] Consume skuModel - SkuModel(skuId=b06b7a24-eea7-47dc-b2bf-aa59a152bf01, displayName=Smartphone X - Silver, partnerId=SKU123, sellerId=456, ean=1234567890123, price=699.99, salePrice=649.99, stockLevel=100, enabled=true, integrated=null, integratedDate=null, packageDimensionModel=null, product=ProductModel(productId=fc8f3cb1-d125-43de-9fca-de5a1ef1b38d, title=null, description=null, category=null, brand=null, model=null, videoUrl=null, gender=null, warrantyTime=null, warrantyText=null, height=null, width=null, weight=null, length=null, priceFactor=null, calculatedPrice=null, definitionPriceScope=null, hasVariations=null, allowAutomaticSkuMarketplaceCreation=null, code=null, message=null, integrated=null, integratedDate=null), medias=null, attributes=null, keywords=null)
2023-11-28 08:36:56,250 DEBUG org.hibernate.SQL [pool-3-thread-13] insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
2023-11-28 08:36:56,258 WARN org.hibernate.engine.jdbc.spi.SqlExceptionHelper [pool-3-thread-13] SQL Error: 0, SQLState: 23503
2023-11-28 08:36:56,258 ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper [pool-3-thread-13] ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".
2023-11-28 08:36:56,264 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-13] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer.consumerSkuModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [fk4r5i5utgbbad69wxic8tjl1sd]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer$$SpringCGLIB$$0.consumerSkuModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 58 common frames omitted
2023-11-28 08:36:56,266 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer [pool-3-thread-13] Error to consume a message
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer.consumerSkuModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [fk4r5i5utgbbad69wxic8tjl1sd]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer$$SpringCGLIB$$0.consumerSkuModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 58 common frames omitted
2023-11-28 08:36:56,272 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-13] Execution of Rabbit message listener failed, and the error handler threw an exception
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:147)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1453)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1751)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1527)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer.consumerSkuModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	... 12 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [fk4r5i5utgbbad69wxic8tjl1sd]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer$$SpringCGLIB$$0.consumerSkuModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 58 common frames omitted
2023-11-28 08:36:56,273 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-13] Failed to invoke listener
org.springframework.amqp.AmqpRejectAndDontRequeueException: Error Handler converted exception to fatal
	at org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler.handleError(ConditionalRejectingErrorHandler.java:147)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeErrorHandler(AbstractMessageListenerContainer.java:1453)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.handleListenerException(AbstractMessageListenerContainer.java:1751)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1527)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer.consumerSkuModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	... 12 common frames omitted
Caused by: org.springframework.dao.DataIntegrityViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; SQL [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]; constraint [fk4r5i5utgbbad69wxic8tjl1sd]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:269)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:229)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:565)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:660)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:410)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.catalog.SkuModelConsumer$$SpringCGLIB$$0.consumerSkuModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement [ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".] [insert into sku_model (display_name,ean,enabled,integrated,integrated_date,height,length,lwh_uom,weight,weight_uom,width,partner_id,price,product_id,sale_price,seller_id,stock_level,sku_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:95)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:56)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:278)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.performNonBatchedMutation(AbstractMutationExecutor.java:107)
	at org.hibernate.engine.jdbc.mutation.internal.MutationExecutorSingleNonBatched.performNonBatchedOperations(MutationExecutorSingleNonBatched.java:40)
	at org.hibernate.engine.jdbc.mutation.internal.AbstractMutationExecutor.execute(AbstractMutationExecutor.java:52)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.doStaticInserts(InsertCoordinator.java:171)
	at org.hibernate.persister.entity.mutation.InsertCoordinator.coordinateInsert(InsertCoordinator.java:112)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2785)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:102)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:635)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:502)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:364)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:127)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1412)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:485)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:2301)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:1966)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:439)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:169)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:267)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:561)
	... 37 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: insert or update on table "sku_model" violates foreign key constraint "fk4r5i5utgbbad69wxic8tjl1sd"
  Detalhe: Key (product_id)=(fc8f3cb1-d125-43de-9fca-de5a1ef1b38d) is not present in table "product_model".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2713)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:368)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:498)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:415)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:275)
	... 58 common frames omitted
2023-11-28 08:37:16,906 INFO io.undertow.servlet [XNIO-1 task-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-11-28 08:37:16,906 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Initializing Servlet 'dispatcherServlet'
2023-11-28 08:37:16,908 INFO org.springframework.web.servlet.DispatcherServlet [XNIO-1 task-2] Completed initialization in 2 ms
2023-11-28 08:37:16,916 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/auth/authenticate
2023-11-28 08:37:16,925 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-28 08:37:16,933 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/auth/authenticate
2023-11-28 08:37:16,978 INFO tech.noetzold.anPerformaticEcommerce.security.controller.AuthenticationController [XNIO-1 task-2] Doing Login.
2023-11-28 08:37:17,095 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:37:17,164 DEBUG org.springframework.security.authentication.dao.DaoAuthenticationProvider [XNIO-1 task-2] Authenticated user
2023-11-28 08:37:17,167 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:37:17,177 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 join _user u1_0 on t1_0.user_id=u1_0.id where u1_0.id=? and (t1_0.expired=false or t1_0.revoked=false)
2023-11-28 08:37:17,182 DEBUG org.hibernate.SQL [XNIO-1 task-2] insert into token (expired,revoked,token,token_type,user_id,id) values (?,?,?,?,?,?)
2023-11-28 08:37:17,184 DEBUG org.hibernate.SQL [XNIO-1 task-2] update token set expired=?,revoked=?,token=?,token_type=?,user_id=? where id=?
2023-11-28 08:37:17,232 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /ecommerce/v1/payment/payment
2023-11-28 08:37:17,260 DEBUG org.hibernate.SQL [XNIO-1 task-2] select u1_0.id,u1_0.email,u1_0.firstname,u1_0.lastname,u1_0.password,u1_0.role from _user u1_0 where u1_0.email=?
2023-11-28 08:37:17,262 DEBUG org.hibernate.SQL [XNIO-1 task-2] select t1_0.id,t1_0.expired,t1_0.revoked,t1_0.token,t1_0.token_type,t1_0.user_id from token t1_0 where t1_0.token=?
2023-11-28 08:37:17,275 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Secured POST /ecommerce/v1/payment/payment
2023-11-28 08:37:17,285 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-28 08:37:17,312 DEBUG org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor [XNIO-1 task-2] Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController.save(tech.noetzold.anPerformaticEcommerce.model.payment.PaymentModel); target is of class [tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController]
2023-11-28 08:37:17,349 INFO tech.noetzold.anPerformaticEcommerce.controller.payment.PaymentModelController [XNIO-1 task-2] Send message paymentModel: PaymentModel(paymentId=null, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
2023-11-28 08:37:17,381 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /realms/quarkus1/protocol/openid-connect/token
2023-11-28 08:37:17,382 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-28 08:37:17,390 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-28 08:37:17,393 DEBUG org.springframework.security.web.FilterChainProxy [XNIO-1 task-2] Securing POST /error
2023-11-28 08:37:17,396 DEBUG org.springframework.security.web.authentication.AnonymousAuthenticationFilter [XNIO-1 task-2] Set SecurityContextHolder to anonymous SecurityContext
2023-11-28 08:37:17,397 DEBUG org.springframework.security.web.authentication.Http403ForbiddenEntryPoint [XNIO-1 task-2] Pre-authenticated entry point called. Rejecting access
2023-11-28 08:37:17,405 ERROR tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer [pool-3-thread-12] Error to consume cerate message for paymentModel - PaymentModel(paymentId=711e110b-ae03-412a-8465-766ef81c2fc7, customer=CustomerModel(customerId=c09be56b-debf-4f2d-8c8b-e6527abe4dca, userId=null, registerDate=null, bornDate=null, cards=null), paymentMethod=CREDIT_CARD, paymentState=null, hasErrors=false, totalAmount=100.5, orderId=orderId, registerDate=Fri Oct 06 12:30:00 BRT 2023, dicountAmount=0.0, boletoModel=BoletoModel(boletoId=null, codigoDeBarras=1234567890123456789012345678901234567890, linhaDigitavel=12345.67890 12345.678901 23456.789012 3 45678901234567890, beneficiarioNome=Empresa Beneficiária, beneficiarioCnpjCpf=123.456.789-00, beneficiarioEndereco=Rua da Empresa Beneficiária, 123, sacadoNome=João Sacado, sacadoCnpjCpf=987.654.321-00, sacadoEndereco=Rua do João Sacado, 456, valor=100.5, dataVencimento=Thu Oct 19 21:00:00 BRT 2023, numeroDocumento=DOC123456789, instrucoesPagamento=Pague até a data de vencimento, multa=5.0, jurosAtraso=2.5, logoBanco=logo.png, codigoBanco=001, identificacaoBoleto=Boleto de Pagamento, dataEmissao=Thu Oct 05 21:00:00 BRT 2023, localPagamento=Qualquer agência bancária, codigoAutenticacao=ABC123, informacoesContato=Fale conosco em contato@empresa.com), cardModel=CardModel(cardId=null, cardNumber=1234-5678-9012-3456, cardHolderName=John Doe, expirationDate=12/25, cvv=123, cardType=CREDIT), pixModel=PixModel(pixId=null, chavePix=1234567890, descricao=Pagamento via PIX, identificadorTransacao=PIX123), paypalModel=PaypalModel(paypalId=null, email=john.doe@example.com, descricao=Pagamento via PayPal, identificadorTransacao=PAYPAL123), invoices=null)
feign.FeignException$Forbidden: [403 Forbidden] during [POST] to [http://localhost:8091/realms/quarkus1/protocol/openid-connect/token] [LoginClient#getToken(String)]: []
	at feign.FeignException.clientErrorStatus(FeignException.java:226)
	at feign.FeignException.errorStatus(FeignException.java:203)
	at feign.FeignException.errorStatus(FeignException.java:194)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:104)
	at feign.ResponseHandler.decodeError(ResponseHandler.java:136)
	at feign.ResponseHandler.handleResponse(ResponseHandler.java:70)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:114)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:96)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory$1.proceed(FeignCachingInvocationHandlerFactory.java:66)
	at org.springframework.cache.interceptor.CacheInterceptor.lambda$invoke$0(CacheInterceptor.java:54)
	at org.springframework.cache.interceptor.CacheAspectSupport.execute(CacheAspectSupport.java:351)
	at org.springframework.cache.interceptor.CacheInterceptor.invoke(CacheInterceptor.java:64)
	at org.springframework.cloud.openfeign.FeignCachingInvocationHandlerFactory.lambda$create$1(FeignCachingInvocationHandlerFactory.java:53)
	at jdk.proxy4/jdk.proxy4.$Proxy229.getToken(Unknown Source)
	at tech.noetzold.anPerformaticEcommerce.service.LoginService.getToken(LoginService.java:29)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-11-28 08:37:17,405 WARN org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler [pool-3-thread-12] Execution of Rabbit message listener failed.
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-28 08:37:17,406 ERROR org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [pool-3-thread-12] Failed to invoke listener
org.springframework.amqp.rabbit.support.ListenerExecutionFailedException: Listener method 'public void tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException' threw exception
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:286)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandlerAndProcessResult(MessagingMessageListenerAdapter.java:224)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.onMessage(MessagingMessageListenerAdapter.java:149)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:1663)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.actualInvokeListener(AbstractMessageListenerContainer.java:1582)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:1570)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:1561)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListenerAndHandleException(AbstractMessageListenerContainer.java:1506)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.lambda$executeListener$8(AbstractMessageListenerContainer.java:1484)
	at io.micrometer.observation.Observation.lambda$observe$0(Observation.java:493)
	at io.micrometer.observation.Observation.observeWithContext(Observation.java:603)
	at io.micrometer.observation.Observation.observe(Observation.java:492)
	at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:1484)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.callExecuteListener(DirectMessageListenerContainer.java:1138)
	at org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer$SimpleConsumer.handleDelivery(DirectMessageListenerContainer.java:1095)
	at com.rabbitmq.client.impl.ConsumerDispatcher$5.run(ConsumerDispatcher.java:149)
	at com.rabbitmq.client.impl.ConsumerWorkService$WorkPoolRunnable.run(ConsumerWorkService.java:111)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.springframework.amqp.AmqpRejectAndDontRequeueException: Ops, an error! Message should go to DLQ
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer.consumerPaymentModel(PaymentModelConsumer.java:42)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:391)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:751)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:703)
	at tech.noetzold.anPerformaticEcommerce.message.consumer.payment.PaymentModelConsumer$$SpringCGLIB$$0.consumerPaymentModel(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.amqp.rabbit.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.amqp.rabbit.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:75)
	at org.springframework.amqp.rabbit.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:277)
	... 19 common frames omitted
2023-11-28 09:09:54,050 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#10-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,050 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#12-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,050 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#13-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,051 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#11-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,052 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#0-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,053 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#1-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,054 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#2-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,055 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#3-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,056 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#4-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,057 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#5-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,058 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#6-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,059 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#7-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,060 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#18-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,061 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#8-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,061 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#19-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,063 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#9-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,064 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#16-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,064 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#17-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,065 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#14-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,066 INFO org.springframework.amqp.rabbit.listener.DirectMessageListenerContainer [org.springframework.amqp.rabbit.RabbitListenerEndpointContainer#15-2] Successfully waited for consumers to finish.
2023-11-28 09:09:54,067 INFO io.undertow [SpringApplicationShutdownHook] stopping server: Undertow - 2.3.10.Final
2023-11-28 09:09:54,069 INFO io.undertow.servlet [SpringApplicationShutdownHook] Destroying Spring FrameworkServlet 'dispatcherServlet'
2023-11-28 09:09:54,081 INFO org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean [SpringApplicationShutdownHook] Closing JPA EntityManagerFactory for persistence unit 'default'
2023-11-28 09:09:54,083 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-11-28 09:09:54,085 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
